return schedulers io 
flowable integer f1 flowable just 1 2 3 4 5 flowable integer f2 flowable just 6 7 8 9 10 flowable string f flowable merge f1 f2 map new function integer string override public string apply integer t asserttrue thread currentthread getname startswith return value t thread thread currentthread getname f subscribeon schedulers io blockingforeach new consumer string override public void accept string t system out println t t 
schedulertesthelper getscheduler 
worker w schedulers io createworker try cancelledretention w false finally w dispose w schedulers io createworker try cancelledretention w true finally w dispose 
worker w schedulers io createworker assertfalse disposable w isdisposed w dispose asserttrue disposable w isdisposed 
final int calls 0 runnable r new runnable override public void run calls 0 ioscheduler s new ioscheduler s shutdown s shutdown s scheduledirect r s scheduledirect r 1 timeunit seconds s r 1 1 timeunit seconds worker w s createworker w dispose assertequals disposable disposed w schedule r assertequals disposable disposed w schedule r 1 timeunit seconds assertequals disposable disposed w scheduleperiodically r 1 1 timeunit seconds assertequals 0 calls 0 
return schedulers from executor 
schedulertesthelper getscheduler 
executorservice exec executors scheduler s schedulers from exec try scheduler worker w s createworker try cancelledretention w false finally w dispose w s createworker try cancelledretention w true finally w dispose finally exec shutdownnow 
queue offer command 
runnable r queue poll if r null r run 
runnable r while r queue poll null r run 
final atomicinteger calls new atomicinteger runnable task new runnable override public void run calls getandincrement testexecutor exec new testexecutor scheduler custom schedulers from exec worker w custom createworker try disposable d1 w schedule task disposable d2 w schedule task disposable d3 w schedule task d1 dispose d2 dispose d3 dispose exec executeall assertequals 0 calls get finally w dispose 
final atomicinteger calls new atomicinteger runnable task new runnable override public void run calls getandincrement testexecutor exec new testexecutor scheduler custom schedulers from exec worker w custom createworker try w schedule task w schedule task w schedule task finally w dispose exec executeall assertequals 0 calls get 
scheduler s schedulers from new executor override public void execute runnable r r run final countdownlatch cdl new countdownlatch 5 runnable r new runnable override public void run cdl countdown s scheduledirect r s scheduledirect r 50 timeunit milliseconds disposable d s r 10 10 timeunit milliseconds try asserttrue cdl await 5 timeunit seconds finally d dispose asserttrue d isdisposed 
exec executors exec shutdown scheduler s schedulers from exec list throwable errors testhelper trackpluginerrors try assertsame emptydisposable instance s scheduledirect functions empty runnable assertsame emptydisposable instance s scheduledirect functions empty runnable 10 timeunit milliseconds assertsame emptydisposable instance s functions empty runnable 10 10 timeunit milliseconds testhelper assertundeliverable errors 0 class testhelper assertundeliverable errors 1 class testhelper assertundeliverable errors 2 class finally rxjavaplugins reset 
exec executors exec shutdown list throwable errors testhelper trackpluginerrors try worker s schedulers from exec createworker assertsame emptydisposable instance s schedule functions empty runnable s schedulers from exec createworker assertsame emptydisposable instance s schedule functions empty runnable 10 timeunit milliseconds s schedulers from exec createworker assertsame emptydisposable instance s scheduleperiodically functions empty runnable 10 10 timeunit milliseconds testhelper assertundeliverable errors 0 class testhelper assertundeliverable errors 1 class testhelper assertundeliverable errors 2 class finally rxjavaplugins reset 
exec executors try scheduler s schedulers from exec final countdownlatch cdl new countdownlatch 8 runnable r new runnable override public void run cdl countdown s scheduledirect r s scheduledirect r 10 timeunit milliseconds disposable d s r 10 10 timeunit milliseconds try asserttrue cdl await 5 timeunit seconds finally d dispose finally exec shutdown 
exec executors worker s schedulers from exec createworker assertfalse s isdisposed try final countdownlatch cdl new countdownlatch 8 runnable r new runnable override public void run cdl countdown s schedule r s schedule r 10 timeunit milliseconds disposable d s scheduleperiodically r 10 10 timeunit milliseconds try asserttrue cdl await 5 timeunit seconds finally d dispose finally s dispose exec shutdown asserttrue s isdisposed 
executorservice exec executors final scheduler s schedulers from exec try for int i 0 i 500 i final worker w s createworker final atomicinteger c new atomicinteger 2 w schedule new runnable override public void run c decrementandget while c get 0 c decrementandget while c get 0 w dispose finally exec shutdownnow 
final scheduler s schedulers from new executor override public void execute runnable r r run disposable d s scheduledirect functions empty runnable asserttrue d isdisposed 
final scheduler s schedulers from new executor override public void execute runnable r new thread r start disposable d s scheduledirect functions empty runnable while d isdisposed thread sleep 1 
final scheduler s schedulers from executor disposable d s scheduledirect functions empty runnable while d isdisposed thread sleep 1 
final scheduler s schedulers from new executor override public void execute runnable r new thread r start disposable d s scheduledirect new runnable override public void run throw new while d isdisposed thread sleep 1 
final scheduler s schedulers from new executor override public void execute runnable r new thread r start disposable d s scheduledirect functions empty runnable 1 timeunit milliseconds while d isdisposed thread sleep 1 
executorservice executorscheduler executors 1 new rxthreadfactory testcustompooltimed try final scheduler s schedulers from executorscheduler disposable d s scheduledirect functions empty runnable 1 timeunit milliseconds while d isdisposed thread sleep 1 finally executorscheduler shutdownnow 
scheduler scheduler getscheduler final countdownlatch cdl new countdownlatch 1 runnable countdownrunnable new runnable override public void run cdl countdown disposable disposable scheduler scheduledirect countdownrunnable 100 timeunit milliseconds wrapper disposable assertsame countdownrunnable wrapper getwrappedrunnable disposable dispose assertsame functions empty runnable wrapper getwrappedrunnable 
executorservice exec executors try scheduler s schedulers from r exec execute r true for int i 0 i testhelper race default loops i sequentialdisposable sd new sequentialdisposable testhelper race sd update s scheduledirect sd dispose finally exec shutdown 
try for int i 0 i testhelper race default loops i atomicreference runnable runref new atomicreference scheduler s schedulers from r runref set r true disposable d s scheduledirect testhelper race runref get run d dispose finally thread interrupted 
return schedulers from executor true 
schedulertesthelper getscheduler 
executorservice exec executors scheduler s schedulers from exec true try scheduler worker w s createworker try cancelledretention w false finally w dispose w s createworker try cancelledretention w true finally w dispose finally exec shutdownnow 
queue offer command 
runnable r queue poll if r null r run 
runnable r while r queue poll null r run 
final atomicinteger calls new atomicinteger runnable task new runnable override public void run calls getandincrement testexecutor exec new testexecutor scheduler custom schedulers from exec true worker w custom createworker try disposable d1 w schedule task disposable d2 w schedule task disposable d3 w schedule task d1 dispose d2 dispose d3 dispose exec executeall assertequals 0 calls get finally w dispose 
final atomicinteger calls new atomicinteger runnable task new runnable override public void run calls getandincrement testexecutor exec new testexecutor scheduler custom schedulers from exec true worker w custom createworker try w schedule task w schedule task w schedule task finally w dispose exec executeall assertequals 0 calls get 
scheduler s schedulers from new executor override public void execute runnable r r run true final countdownlatch cdl new countdownlatch 5 runnable r new runnable override public void run cdl countdown s scheduledirect r s scheduledirect r 50 timeunit milliseconds disposable d s r 10 10 timeunit milliseconds try asserttrue cdl await 5 timeunit seconds finally d dispose asserttrue d isdisposed 
exec executors exec shutdown scheduler s schedulers from exec true list throwable errors testhelper trackpluginerrors try assertsame emptydisposable instance s scheduledirect functions empty runnable assertsame emptydisposable instance s scheduledirect functions empty runnable 10 timeunit milliseconds assertsame emptydisposable instance s functions empty runnable 10 10 timeunit milliseconds testhelper assertundeliverable errors 0 class testhelper assertundeliverable errors 1 class testhelper assertundeliverable errors 2 class finally rxjavaplugins reset 
exec executors exec shutdown list throwable errors testhelper trackpluginerrors try worker s schedulers from exec true createworker assertsame emptydisposable instance s schedule functions empty runnable s schedulers from exec true createworker assertsame emptydisposable instance s schedule functions empty runnable 10 timeunit milliseconds s schedulers from exec true createworker assertsame emptydisposable instance s scheduleperiodically functions empty runnable 10 10 timeunit milliseconds testhelper assertundeliverable errors 0 class testhelper assertundeliverable errors 1 class testhelper assertundeliverable errors 2 class finally rxjavaplugins reset 
exec executors try scheduler s schedulers from exec true final countdownlatch cdl new countdownlatch 8 runnable r new runnable override public void run cdl countdown s scheduledirect r s scheduledirect r 10 timeunit milliseconds disposable d s r 10 10 timeunit milliseconds try asserttrue cdl await 5 timeunit seconds finally d dispose finally exec shutdown 
exec executors worker s schedulers from exec true createworker assertfalse s isdisposed try final countdownlatch cdl new countdownlatch 8 runnable r new runnable override public void run cdl countdown s schedule r s schedule r 10 timeunit milliseconds disposable d s scheduleperiodically r 10 10 timeunit milliseconds try asserttrue cdl await 5 timeunit seconds finally d dispose finally s dispose exec shutdown asserttrue s isdisposed 
executorservice exec executors final scheduler s schedulers from exec true try for int i 0 i 500 i final worker w s createworker final atomicinteger c new atomicinteger 2 w schedule new runnable override public void run c decrementandget while c get 0 c decrementandget while c get 0 w dispose finally exec shutdownnow 
final scheduler s schedulers from new executor override public void execute runnable r r run true disposable d s scheduledirect functions empty runnable asserttrue d isdisposed 
final scheduler s schedulers from new executor override public void execute runnable r new thread r start true disposable d s scheduledirect functions empty runnable while d isdisposed thread sleep 1 
final scheduler s schedulers from executor true disposable d s scheduledirect functions empty runnable while d isdisposed thread sleep 1 
final scheduler s schedulers from new executor override public void execute runnable r new thread r start true disposable d s scheduledirect new runnable override public void run throw new while d isdisposed thread sleep 1 
final scheduler s schedulers from new executor override public void execute runnable r new thread r start true disposable d s scheduledirect functions empty runnable 1 timeunit milliseconds while d isdisposed thread sleep 1 
executorservice executorscheduler executors 1 new rxthreadfactory testcustompooltimed try final scheduler s schedulers from executorscheduler true disposable d s scheduledirect functions empty runnable 1 timeunit milliseconds while d isdisposed thread sleep 1 finally executorscheduler shutdownnow 
scheduler scheduler getscheduler final countdownlatch cdl new countdownlatch 1 runnable countdownrunnable new runnable override public void run cdl countdown disposable disposable scheduler scheduledirect countdownrunnable 100 timeunit milliseconds wrapper disposable assertsame countdownrunnable wrapper getwrappedrunnable disposable dispose assertsame functions empty runnable wrapper getwrappedrunnable 
scheduler scheduler getscheduler final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d scheduler scheduledirect new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 asserttrue interruption did not propagate isinterrupted get 
scheduler scheduler getscheduler worker worker scheduler createworker try final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d worker schedule new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 asserttrue interruption did not propagate isinterrupted get finally worker dispose 
exec executors 1 try scheduler scheduler schedulers from exec true final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d scheduler scheduledirect new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 asserttrue interruption did not propagate isinterrupted get finally exec shutdown 
exec executors 1 try scheduler scheduler schedulers from exec true worker worker scheduler createworker try final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d worker schedule new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 asserttrue interruption did not propagate isinterrupted get finally worker dispose finally exec shutdown 
executorservice exec executors try scheduler scheduler schedulers from exec false final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d scheduler scheduledirect new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 assertfalse interruption happened isinterrupted get finally exec shutdown 
executorservice exec executors try scheduler scheduler schedulers from exec false worker worker scheduler createworker try final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d worker schedule new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 assertfalse interruption happened isinterrupted get finally worker dispose finally exec shutdown 
exec executors 1 try scheduler scheduler schedulers from exec false final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d scheduler scheduledirect new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 assertfalse interruption happened isinterrupted get finally exec shutdown 
exec executors 1 try scheduler scheduler schedulers from exec false worker worker scheduler createworker try final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d worker schedule new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 assertfalse interruption happened isinterrupted get finally worker dispose finally exec shutdown 
executorservice exec executors try scheduler scheduler schedulers from exec false final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d scheduler scheduledirect new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true 1 timeunit milliseconds if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 assertfalse interruption happened isinterrupted get finally exec shutdown 
executorservice exec executors try scheduler scheduler schedulers from exec false worker worker scheduler createworker try final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d worker schedule new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true 1 timeunit milliseconds if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 assertfalse interruption happened isinterrupted get finally worker dispose finally exec shutdown 
exec executors 1 try scheduler scheduler schedulers from exec false final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d scheduler scheduledirect new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true 1 timeunit milliseconds if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 assertfalse interruption happened isinterrupted get finally exec shutdown 
exec executors 1 try scheduler scheduler schedulers from exec false worker worker scheduler createworker try final atomicinteger sync new atomicinteger 2 final atomicboolean isinterrupted new atomicboolean disposable d worker schedule new runnable override public void run if sync decrementandget 0 while sync get 0 try thread sleep 1000 catch interruptedexception ex isinterrupted set true 1 timeunit milliseconds if sync decrementandget 0 while sync get 0 thread sleep 500 d dispose int i 20 while i 0 isinterrupted get thread sleep 50 assertfalse interruption happened isinterrupted get finally worker dispose finally exec shutdown 
thread originalhandler thread try handler new capturingobserver object observer new capturingobserver thread handler error new should be delivered to handler flowable error error subscribeon scheduler subscribe observer if observer completed await 3 timeunit seconds fail timed out if handler count 0 handler caught printstacktrace assertequals handler should not have received anything handler caught 0 handler count assertequals observer should have received an error 1 observer errorcount assertequals observer should not have received a next value 0 observer nextcount throwable cause observer error while cause null if error equals cause break if cause cause getcause break cause cause getcause assertequals our error should have been delivered to the observer error cause finally thread originalhandler 
count caught e completed countdown 
$EMPTY$
errorcount error e completed countdown 
scheduler scheduler getscheduler final scheduler worker inner scheduler createworker try final countdownlatch latch new countdownlatch 1 final runnable firststepstart mock runnable class final runnable firststepend mock runnable class final runnable secondstepstart mock runnable class final runnable secondstepend mock runnable class final runnable thirdstepstart mock runnable class final runnable thirdstepend mock runnable class final runnable firstaction new runnable override public void run firststepstart run firststepend run latch countdown final runnable secondaction new runnable override public void run secondstepstart run inner schedule firstaction secondstepend run final runnable thirdaction new runnable override public void run thirdstepstart run inner schedule secondaction thirdstepend run inorder inorder inorder firststepstart firststepend secondstepstart secondstepend thirdstepstart thirdstepend inner schedule thirdaction latch await inorder verify thirdstepstart times 1 run inorder verify thirdstepend times 1 run inorder verify secondstepstart times 1 run inorder verify secondstepend times 1 run inorder verify firststepstart times 1 run inorder verify firststepend times 1 run finally inner dispose 
flowable integer ids flowable fromiterable arrays aslist 1 2 subscribeon getscheduler flowable string m ids flatmap new function integer flowable string override public flowable string apply integer id return flowable fromiterable arrays aslist a id b id subscribeon getscheduler map new function string string override public string apply string s return names s list string strings m tolist blockingget assertequals 4 strings size asserttrue strings contains names a 1 asserttrue strings contains names a 2 asserttrue strings contains names b 1 asserttrue strings contains names b 2 
final scheduler scheduler getscheduler final scheduler worker inner scheduler createworker try final countdownlatch latch new countdownlatch 2 final runnable first mock runnable class final runnable second mock runnable class doanswer new answer override public object answer invocationonmock invocation throws throwable try return invocation getmock finally latch countdown when first run doanswer new answer override public object answer invocationonmock invocation throws throwable try return invocation getmock finally latch countdown when second run inner schedule first inner schedule second latch await verify first times 1 run verify second times 1 run finally inner dispose 
scheduler scheduler getscheduler final scheduler worker inner scheduler createworker try final countdownlatch latch new countdownlatch 1 final runnable first mock runnable class final runnable second mock runnable class inner schedule new runnable override public void run inner schedule first 30 timeunit milliseconds inner schedule second 10 timeunit milliseconds inner schedule new runnable override public void run latch countdown 40 timeunit milliseconds latch await inorder inorder inorder first second inorder verify second times 1 run inorder verify first times 1 run finally inner dispose 
scheduler scheduler getscheduler final scheduler worker inner scheduler createworker try final countdownlatch latch new countdownlatch 1 final runnable first mock runnable class final runnable second mock runnable class final runnable third mock runnable class final runnable fourth mock runnable class inner schedule new runnable override public void run inner schedule first inner schedule second 300 timeunit milliseconds inner schedule third 100 timeunit milliseconds inner schedule fourth inner schedule new runnable override public void run latch countdown 400 timeunit milliseconds latch await inorder inorder inorder first second third fourth inorder verify first times 1 run inorder verify fourth times 1 run inorder verify third times 1 run inorder verify second times 1 run finally inner dispose 
final scheduler scheduler getscheduler final scheduler worker inner scheduler createworker try final atomicinteger i new atomicinteger final countdownlatch latch new countdownlatch 1 inner schedule new runnable override public void run if i incrementandget 100 inner schedule this else latch countdown latch await assertequals 100 i get finally inner dispose 
scheduler scheduler getscheduler final scheduler worker inner scheduler createworker try final atomicinteger i new atomicinteger final countdownlatch latch new countdownlatch 1 inner schedule new runnable int state override public void run i set state if state 100 inner schedule this 1 timeunit milliseconds else latch countdown latch await assertequals 100 i get finally inner dispose 
flowable integer obs flowable unsafecreate new publisher integer override public void subscribe final subscriber super integer subscriber final scheduler worker inner getscheduler createworker asyncsubscription as new asyncsubscription subscriber onsubscribe as as setresource inner inner schedule new runnable int i override public void run if i 42 try subscriber oncomplete finally inner dispose return subscriber onnext i inner schedule this final atomicinteger lastvalue new atomicinteger obs blockingforeach new consumer integer override public void accept integer v system out println value v lastvalue set v assertequals 42 lastvalue get 
final int count 10 final countdownlatch latch new countdownlatch count flowable string f flowable unsafecreate new publisher string override public void subscribe final subscriber super string subscriber subscriber onsubscribe new booleansubscription for int i 0 i count i final int v i new thread new runnable override public void run subscriber onnext v v latch countdown start string observer new f subscribe observer if observer completed await 3000 timeunit milliseconds fail timed out if observer error get null fail we expected error messages due to concurrency 
final scheduler scheduler getscheduler flowable string f flowable fromarray one two three four five six seven eight nine ten string observer new f observeon scheduler subscribe observer if observer completed await 3000 timeunit milliseconds fail timed out if observer error get null observer error get printstacktrace fail error observer error get getmessage 
final scheduler scheduler getscheduler flowable string f flowable fromarray one two three four five six seven eight nine ten flatmap new function string flowable string override public flowable string apply final string v return flowable unsafecreate new publisher string override public void subscribe subscriber super string subscriber subscriber onsubscribe new booleansubscription subscriber onnext value after map v subscriber oncomplete subscribeon scheduler string observer new f subscribe observer if observer completed await 3000 timeunit milliseconds fail timed out if observer error get null observer error get printstacktrace fail error observer error get getmessage 
completed countdown 
error set e completed countdown 
scheduler s getscheduler final countdownlatch cdl new countdownlatch 1 s scheduledirect new runnable override public void run cdl countdown asserttrue cdl await 5 timeunit seconds 
scheduler s getscheduler final countdownlatch cdl new countdownlatch 1 s scheduledirect new runnable override public void run cdl countdown 50 timeunit milliseconds asserttrue cdl await 5 timeunit seconds 
scheduler s getscheduler if s instanceof trampolinescheduler return final countdownlatch cdl new countdownlatch 5 disposable d s new runnable override public void run cdl countdown 10 10 timeunit milliseconds try asserttrue cdl await 5 timeunit seconds finally d dispose asserttrue d isdisposed 
scheduler s getscheduler if s instanceof trampolinescheduler return for int initial 0 initial 2 initial final countdownlatch cdl new countdownlatch 1 final sequentialdisposable sd new sequentialdisposable try sd replace s new runnable int count override public void run if count 10 sd dispose cdl countdown initial 0 timeunit milliseconds asserttrue initial cdl await 5 timeunit seconds finally sd dispose 
scheduler s getscheduler if s instanceof trampolinescheduler return for int initial 0 initial 2 initial final countdownlatch cdl new countdownlatch 1 final sequentialdisposable sd new sequentialdisposable scheduler worker w s createworker try sd replace w scheduleperiodically new runnable int count override public void run if count 10 sd dispose cdl countdown initial 0 timeunit milliseconds asserttrue initial cdl await 5 timeunit seconds finally sd dispose w dispose 
try final countdownlatch decoratedcalled new countdownlatch 1 rxjavaplugins setschedulehandler new function runnable runnable override public runnable apply final runnable actual throws exception return new runnable override public void run decoratedcalled countdown actual run schedulecall run asserttrue decoratedcalled await 5 timeunit seconds finally rxjavaplugins reset 
new runnable override public void run getscheduler scheduledirect functions empty runnable 
new runnable override public void run getscheduler scheduledirect functions empty runnable 1 timeunit milliseconds 
final scheduler scheduler getscheduler if scheduler instanceof trampolinescheduler return final atomicreference disposable disposable new atomicreference try new runnable override public void run disposable set scheduler functions empty runnable 1 timeunit milliseconds finally disposable get dispose 
scheduler s getscheduler if s instanceof trampolinescheduler return final countdownlatch cdl new countdownlatch 1 runnable countdownrunnable new runnable override public void run cdl countdown disposable disposable s countdownrunnable 100 100 timeunit milliseconds wrapper disposable assertsame countdownrunnable wrapper getwrappedrunnable asserttrue cdl await 5 timeunit seconds disposable dispose 
scheduler scheduler getscheduler if scheduler instanceof trampolinescheduler return final countdownlatch cdl new countdownlatch 1 runnable countdownrunnable new runnable override public void run cdl countdown disposable disposable scheduler scheduledirect countdownrunnable 100 timeunit milliseconds wrapper disposable assertsame countdownrunnable wrapper getwrappedrunnable disposable dispose 
try getscheduler scheduledirect null fail catch nullpointerexception npe assertequals run is null npe getmessage 
try getscheduler scheduledirect null 10 timeunit milliseconds fail catch nullpointerexception npe assertequals run is null npe getmessage 
try getscheduler null 5 10 timeunit milliseconds fail catch nullpointerexception npe assertequals run is null npe getmessage 
countdownlatch waitforbody new countdownlatch 1 countdownlatch waitforprint new countdownlatch 1 try disposable d onschedule apply waitforbody countdown try waitforprint await catch interruptedexception ex ex printstacktrace waitforbody await assertnotequals d tostring catch throwable ex throw new assertionerror ex finally waitforprint countdown 
if getscheduler instanceof trampolinescheduler return scheduleprint r getscheduler scheduledirect r 
if getscheduler instanceof trampolinescheduler return worker worker getscheduler createworker try scheduleprint worker schedule finally worker dispose 
return schedulers newthread 
schedulertesthelper getscheduler 
final int calls 0 runnable r new runnable override public void run calls 0 scheduler s getscheduler worker w s createworker w dispose asserttrue w isdisposed assertequals disposable disposed w schedule r assertequals disposable disposed w schedule r 1 timeunit seconds assertequals disposable disposed w scheduleperiodically r 1 1 timeunit seconds newthreadworker actual newthreadworker w compositedisposable cd new compositedisposable actual scheduleactual r 1 timeunit seconds cd assertequals 0 cd size assertequals 0 calls 0 
scheduler s getscheduler newthreadworker w newthreadworker s createworker w dispose w scheduleactual new runnable override public void run 0 timeunit milliseconds null 
return schedulers from executor false true 
schedulertesthelper getscheduler 
executorservice exec executors scheduler s schedulers from exec false true try scheduler worker w s createworker try cancelledretention w false finally w dispose w s createworker try cancelledretention w true finally w dispose finally exec shutdownnow 
queue offer command 
runnable r queue poll if r null r run 
runnable r while r queue poll null r run 
final atomicinteger calls new atomicinteger runnable task new runnable override public void run calls getandincrement testexecutor exec new testexecutor scheduler custom schedulers from exec false true worker w custom createworker try disposable d1 w schedule task disposable d2 w schedule task disposable d3 w schedule task d1 dispose d2 dispose d3 dispose exec executeall assertequals 0 calls get finally w dispose 
final atomicinteger calls new atomicinteger runnable task new runnable override public void run calls getandincrement testexecutor exec new testexecutor scheduler custom schedulers from exec false true worker w custom createworker try w schedule task w schedule task w schedule task finally w dispose exec executeall assertequals 0 calls get 
scheduler s schedulers from new executor override public void execute runnable r r run false true final countdownlatch cdl new countdownlatch 5 runnable r new runnable override public void run cdl countdown s scheduledirect r s scheduledirect r 50 timeunit milliseconds disposable d s r 10 10 timeunit milliseconds try asserttrue cdl await 5 timeunit seconds finally d dispose asserttrue d isdisposed 
exec executors exec shutdown scheduler s schedulers from exec false true list throwable errors testhelper trackpluginerrors try assertsame emptydisposable instance s scheduledirect functions empty runnable assertsame emptydisposable instance s scheduledirect functions empty runnable 10 timeunit milliseconds assertsame emptydisposable instance s functions empty runnable 10 10 timeunit milliseconds testhelper assertundeliverable errors 0 class testhelper assertundeliverable errors 1 class testhelper assertundeliverable errors 2 class finally rxjavaplugins reset 
exec executors exec shutdown list throwable errors testhelper trackpluginerrors try worker s schedulers from exec false true createworker assertsame emptydisposable instance s schedule functions empty runnable s schedulers from exec false true createworker assertsame emptydisposable instance s schedule functions empty runnable 10 timeunit milliseconds s schedulers from exec false true createworker assertsame emptydisposable instance s scheduleperiodically functions empty runnable 10 10 timeunit milliseconds testhelper assertundeliverable errors 0 class testhelper assertundeliverable errors 1 class testhelper assertundeliverable errors 2 class finally rxjavaplugins reset 
exec executors try scheduler s schedulers from exec false true final countdownlatch cdl new countdownlatch 8 runnable r new runnable override public void run cdl countdown s scheduledirect r s scheduledirect r 10 timeunit milliseconds disposable d s r 10 10 timeunit milliseconds try asserttrue cdl await 5 timeunit seconds finally d dispose finally exec shutdown 
exec executors worker s schedulers from exec false true createworker assertfalse s isdisposed try final countdownlatch cdl new countdownlatch 8 runnable r new runnable override public void run cdl countdown s schedule r s schedule r 10 timeunit milliseconds disposable d s scheduleperiodically r 10 10 timeunit milliseconds try asserttrue cdl await 5 timeunit seconds finally d dispose finally s dispose exec shutdown asserttrue s isdisposed 
executorservice exec executors final scheduler s schedulers from exec false true try for int i 0 i 500 i final worker w s createworker final atomicinteger c new atomicinteger 2 w schedule new runnable override public void run c decrementandget while c get 0 c decrementandget while c get 0 w dispose finally exec shutdownnow 
final scheduler s schedulers from new executor override public void execute runnable r r run false true disposable d s scheduledirect functions empty runnable asserttrue d isdisposed 
final scheduler s schedulers from new executor override public void execute runnable r new thread r start false true disposable d s scheduledirect functions empty runnable while d isdisposed thread sleep 1 
final scheduler s schedulers from executor false true disposable d s scheduledirect functions empty runnable while d isdisposed thread sleep 1 
final scheduler s schedulers from new executor override public void execute runnable r new thread r start false true disposable d s scheduledirect new runnable override public void run throw new while d isdisposed thread sleep 1 
final scheduler s schedulers from new executor override public void execute runnable r new thread r start false true disposable d s scheduledirect functions empty runnable 1 timeunit milliseconds while d isdisposed thread sleep 1 
executorservice executorscheduler executors 1 new rxthreadfactory testcustompooltimed try final scheduler s schedulers from executorscheduler false true disposable d s scheduledirect functions empty runnable 1 timeunit milliseconds while d isdisposed thread sleep 1 finally executorscheduler shutdownnow 
scheduler scheduler getscheduler final countdownlatch cdl new countdownlatch 1 runnable countdownrunnable new runnable override public void run cdl countdown disposable disposable scheduler scheduledirect countdownrunnable 100 timeunit milliseconds wrapper disposable assertsame countdownrunnable wrapper getwrappedrunnable disposable dispose assertsame functions empty runnable wrapper getwrappedrunnable 
exec executors try final scheduler sch schedulers from exec false true publishprocessor integer pp publishprocessor create testsubscriber integer ts pp publish new function flowable integer flowable integer override public flowable integer apply flowable integer v throws throwable return flowable merge v filter new predicate integer override public boolean test integer w throws throwable return w 2 0 observeon sch false 1 hide v filter new predicate integer override public boolean test integer w throws throwable return w 2 0 observeon sch false 1 hide test for int i 1 i 11 i pp onnext i pp oncomplete ts awaitdone 5 timeunit seconds assertresult 1 2 3 4 5 6 7 8 9 10 finally exec shutdown 
exec executors try final scheduler sch schedulers from exec false true publishprocessor integer pp publishprocessor create testsubscriber integer ts pp publish new function flowable integer flowable integer override public flowable integer apply flowable integer v throws throwable return flowable merge v filter new predicate integer override public boolean test integer w throws throwable return w 2 0 delay 0 timeunit seconds sch hide v filter new predicate integer override public boolean test integer w throws throwable return w 2 0 delay 0 timeunit seconds sch hide test for int i 1 i 11 i pp onnext i pp oncomplete ts awaitdone 5 timeunit seconds assertresult 1 2 3 4 5 6 7 8 9 10 finally exec shutdown 
timed integer timed new timed 1 5 timeunit seconds assertequals 1 timed value intvalue assertequals 5 timed time assertequals 5000 timed time timeunit milliseconds assertsame timeunit seconds timed unit 
timed integer t1 new timed 1 5 timeunit seconds assertequals timeunit seconds hashcode 31 5 31 1 t1 hashcode timed integer t2 new timed 0 5 timeunit seconds assertequals timeunit seconds hashcode 31 5 31 0 t2 hashcode 
timed integer t1 new timed 1 5 timeunit seconds timed integer t2 new timed 1 5 timeunit seconds timed integer t3 new timed 2 5 timeunit seconds timed integer t4 new timed 1 4 timeunit seconds timed integer t5 new timed 1 5 timeunit minutes assertequals t1 t1 assertequals t1 t2 assertnotequals t1 t3 assertnotequals t1 t4 assertnotequals t2 t3 assertnotequals t2 t4 assertnotequals t2 t5 assertnotequals t3 t1 assertnotequals t3 t2 assertnotequals t3 t4 assertnotequals t3 t5 assertnotequals t4 t1 assertnotequals t4 t2 assertnotequals t4 t3 assertnotequals t4 t5 assertnotequals t5 t1 assertnotequals t5 t2 assertnotequals t5 t3 assertnotequals t5 t4 assertnotequals new object t1 assertnotequals t1 new object 
timed integer t1 new timed 1 5 timeunit seconds assertequals timed time 5 unit seconds value 1 t1 tostring 
new timed 1 5 null 
tryoutschedulers system out println testshutdown giving time threads to spin up thread sleep 500 set thread rxthreads new hashset for thread t thread getallstacktraces keyset if t getname startswith rx rxthreads add t schedulers shutdown system out println testshutdown giving time to threads to stop thread sleep 500 stringbuilder b new stringbuilder for thread t rxthreads if t isalive b append thread t failed to shutdown r n for stacktraceelement ste t getstacktrace b append append ste append r n if b length 0 system out print b system out println testshutdown restarting schedulers schedulers start fail rx threads were still alive r n b system out println testshutdown restarting schedulers schedulers start tryoutschedulers 
final countdownlatch cdl new countdownlatch 4 final runnable countaction new runnable override public void run cdl countdown compositedisposable cd new compositedisposable try worker w1 schedulers computation createworker cd add w1 w1 schedule countaction worker w2 schedulers io createworker cd add w2 w2 schedule countaction worker w3 schedulers newthread createworker cd add w3 w3 schedule countaction worker w4 schedulers single createworker cd add w4 w4 schedule countaction if cdl await 3 timeunit seconds fail countaction was not run by every worker finally cd dispose 
tryoutschedulers system out println teststartidempotence giving some time thread sleep 500 set thread rxthreadsbefore new hashset for thread t thread getallstacktraces keyset if t getname startswith rx rxthreadsbefore add t system out println teststartidempotence t system out println teststartidempotence trying to start again schedulers start system out println teststartidempotence giving some time again thread sleep 500 set thread rxthreadsafter new hashset for thread t thread getallstacktraces keyset if t getname startswith rx rxthreadsafter add t system out println teststartidempotence t rxthreadsafter removeall rxthreadsbefore assert asserttrue some new threads appeared rxthreadsafter rxthreadsafter isempty 
final function long void calledop mock function class final testscheduler scheduler new testscheduler final scheduler worker inner scheduler createworker try inner scheduleperiodically new runnable override public void run system out println scheduler now timeunit milliseconds try calledop apply scheduler now timeunit milliseconds catch throwable ex exceptionhelper wraporthrow ex 1 2 timeunit seconds verify calledop never apply anylong inorder inorder mockito inorder calledop scheduler advancetimeby 999l timeunit milliseconds inorder verify calledop never apply anylong scheduler advancetimeby 1l timeunit milliseconds inorder verify calledop times 1 apply 1000l scheduler advancetimeby 1999l timeunit milliseconds inorder verify calledop never apply 3000l scheduler advancetimeby 1l timeunit milliseconds inorder verify calledop times 1 apply 3000l scheduler advancetimeby 5l timeunit seconds inorder verify calledop times 1 apply 5000l inorder verify calledop times 1 apply 7000l inner dispose scheduler advancetimeby 11l timeunit seconds inorder verify calledop never apply anylong finally inner dispose 
final function long void calledop mock function class final testscheduler scheduler new testscheduler final scheduler worker inner scheduler createworker try final disposable subscription inner scheduleperiodically new runnable override public void run system out println scheduler now timeunit milliseconds try calledop apply scheduler now timeunit milliseconds catch throwable ex exceptionhelper wraporthrow ex 1 2 timeunit seconds verify calledop never apply anylong inorder inorder mockito inorder calledop scheduler advancetimeby 999l timeunit milliseconds inorder verify calledop never apply anylong scheduler advancetimeby 1l timeunit milliseconds inorder verify calledop times 1 apply 1000l scheduler advancetimeby 1999l timeunit milliseconds inorder verify calledop never apply 3000l scheduler advancetimeby 1l timeunit milliseconds inorder verify calledop times 1 apply 3000l scheduler advancetimeby 5l timeunit seconds inorder verify calledop times 1 apply 5000l inorder verify calledop times 1 apply 7000l subscription dispose scheduler advancetimeby 11l timeunit seconds inorder verify calledop never apply anylong finally inner dispose 
testscheduler s new testscheduler final scheduler worker inner s createworker final atomicinteger counter new atomicinteger 0 try inner schedule new runnable override public void run counter incrementandget system out println counter counter get inner schedule this inner dispose assertequals 0 counter get finally inner dispose 
testscheduler s new testscheduler final scheduler worker inner s createworker try final atomicinteger counter new atomicinteger 0 final disposable subscription inner schedule new runnable override public void run counter incrementandget system out println counter counter get inner schedule this subscription dispose assertequals 0 counter get finally inner dispose 
final testscheduler scheduler new testscheduler final scheduler worker inner scheduler createworker try final runnable calledop mock runnable class flowable object poller poller flowable unsafecreate new publisher object override public void subscribe final subscriber super object asubscriber final booleansubscription bs new booleansubscription asubscriber onsubscribe bs inner schedule new runnable override public void run if bs iscancelled calledop run inner schedule this 5 timeunit seconds inorder inorder mockito inorder calledop disposable sub sub poller subscribe scheduler advancetimeto 6 timeunit seconds inorder verify calledop times 2 run sub dispose scheduler advancetimeto 11 timeunit seconds inorder verify calledop never run sub poller subscribe scheduler advancetimeto 12 timeunit seconds inorder verify calledop times 1 run finally inner dispose 
timedrunnable r new timedrunnable testworker new testscheduler createworker 5 new runnable override public void run override public string tostring return runnable 1 assertequals timedrunnable time 5 run runnable r tostring 
testscheduler scheduler new testscheduler worker w scheduler createworker w dispose asserttrue w isdisposed 
testscheduler ts new testscheduler 5 timeunit seconds assertequals 5 ts now timeunit seconds assertequals 5000 ts now timeunit milliseconds 
atomicinteger run new atomicinteger atomicinteger counter new atomicinteger rxjavaplugins setschedulehandler r counter getandincrement return r try runnable r run getandincrement testscheduler ts new testscheduler true ts createworker schedule r ts createworker schedule r 1 timeunit seconds ts advancetimeby 1 timeunit seconds assertequals 2 run get assertequals 2 counter get ts new testscheduler ts createworker schedule r ts createworker schedule r 1 timeunit seconds ts advancetimeby 1 timeunit seconds assertequals 4 run get assertequals 2 counter get finally rxjavaplugins setschedulehandler null 
atomicinteger run new atomicinteger atomicinteger counter new atomicinteger rxjavaplugins setschedulehandler r counter getandincrement return r try runnable r run getandincrement testscheduler ts new testscheduler 1 timeunit hours true ts createworker schedule r ts createworker schedule r 1 timeunit seconds ts advancetimeby 1 timeunit seconds assertequals 2 run get assertequals 2 counter get ts new testscheduler 1 timeunit hours ts createworker schedule r ts createworker schedule r 1 timeunit seconds ts advancetimeby 1 timeunit seconds assertequals 4 run get assertequals 2 counter get finally rxjavaplugins setschedulehandler null 
atomicinteger run new atomicinteger runnable r run getandincrement testscheduler ts new testscheduler 1 timeunit hours true disposable d ts createworker schedule r assertfalse d isdisposed d dispose asserttrue d isdisposed d dispose asserttrue d isdisposed ts advancetimeby 1 timeunit seconds assertequals 0 run get 
final int count 0 testscheduler scheduler new testscheduler disposable d scheduler new runnable override public void run count 0 100 100 timeunit milliseconds assertequals 0 count 0 assertfalse d isdisposed scheduler advancetimeby 200 timeunit milliseconds assertequals 2 count 0 d dispose asserttrue d isdisposed scheduler advancetimeby 200 timeunit milliseconds assertequals 2 count 0 
testhelper witherrortracking errors testscheduler scheduler new testscheduler try scheduler new runnable override public void run throw new testexception 100 100 timeunit milliseconds scheduler advancetimeby 100 timeunit milliseconds fail should have thrown catch testexception expected testhelper assertundeliverable errors 0 testexception class 
final int count 0 testscheduler scheduler new testscheduler disposable d scheduler new runnable override public void run count 0 100 100 timeunit milliseconds d dispose assertequals 0 count 0 asserttrue d isdisposed scheduler advancetimeby 200 timeunit milliseconds assertequals 0 count 0 asserttrue d isdisposed 
final int count 0 testscheduler scheduler new testscheduler scheduler scheduledirect new runnable override public void run count 0 100 timeunit milliseconds assertequals 0 count 0 scheduler advancetimeby 200 timeunit milliseconds assertequals 1 count 0 
final int count 0 testscheduler scheduler new testscheduler final sequentialdisposable sd new sequentialdisposable disposable d scheduler new runnable override public void run count 0 sd dispose 100 100 timeunit milliseconds sd set d assertequals 0 count 0 assertfalse d isdisposed scheduler advancetimeby 400 timeunit milliseconds assertequals 1 count 0 asserttrue d isdisposed 
final int count 0 testscheduler scheduler new testscheduler worker worker scheduler createworker try final sequentialdisposable sd new sequentialdisposable disposable d worker scheduleperiodically new runnable override public void run count 0 sd dispose 100 100 timeunit milliseconds sd set d assertequals 0 count 0 assertfalse d isdisposed scheduler advancetimeby 400 timeunit milliseconds assertequals 1 count 0 asserttrue d isdisposed finally worker dispose 
final testscheduler scheduler new testscheduler for int i 0 i testhelper race default loops i final disposable d scheduler functions empty runnable 1 1 timeunit milliseconds runnable r1 new runnable override public void run d dispose runnable r2 new runnable override public void run scheduler advancetimeby 1 timeunit seconds testhelper race r1 r2 
final scheduler scheduler schedulers io for int i 0 i 100 i final disposable d scheduler functions empty runnable 0 0 timeunit milliseconds thread sleep 1 d dispose 
list throwable list testhelper trackpluginerrors try schedulers io scheduledirect new runnable override public void run throw new testexception thread sleep 250 asserttrue list size 1 testhelper assertundeliverable list 0 testexception class null finally rxjavaplugins reset 
testhelper checkutilityclass schedulers class 
scheduler s new scheduler nonnull override public worker createworker return new worker nonnull override public disposable schedule nonnull runnable run long delay nonnull timeunit unit return emptydisposable instance override public void dispose override public boolean isdisposed return false assertsame emptydisposable instance s functions empty runnable 1 1 timeunit milliseconds 
return new worker nonnull override public disposable schedule nonnull runnable run long delay nonnull timeunit unit return emptydisposable instance override public void dispose override public boolean isdisposed return false 
assertnotnull new schedulers computationholder assertnotnull new schedulers ioholder assertnotnull new schedulers newthreadholder assertnotnull new schedulers singleholder 
customscheduler scheduler new customscheduler disposable d scheduler scheduledirect functions empty runnable 1 timeunit minutes assertfalse d isdisposed d dispose asserttrue d isdisposed 
testscheduler scheduler new testscheduler runnable runnable new runnable override public void run wrapper scheduler runnable 100 100 timeunit milliseconds assertsame runnable wrapper getwrappedrunnable 
testscheduler scheduler new testscheduler runnable runnable new runnable override public void run wrapper scheduler scheduledirect runnable 100 timeunit milliseconds assertsame runnable wrapper getwrappedrunnable 
final runnable runnable new runnable override public void run scheduler scheduler new scheduler override public worker createworker return new worker override public disposable schedule runnable run long delay timeunit unit outerwrapper run innerwrapper outerwrapper getwrappedrunnable assertsame runnable innerwrapper getwrappedrunnable return disposable innerwrapper override public void dispose override public boolean isdisposed return false scheduler runnable 100 100 timeunit milliseconds 
return schedulers computation 
final int num final countdownlatch latch new countdownlatch 1 final hashmap string integer map new hashmap final scheduler worker inner schedulers computation createworker try inner schedule new runnable private hashmap string integer statefulmap map int nonthreadsafecounter override public void run integer i statefulmap get a if i null i 1 statefulmap put a i statefulmap put b i else i statefulmap put a i statefulmap put b i nonthreadsafecounter statefulmap put nonthreadsafecounter nonthreadsafecounter if i num inner schedule this else latch countdown try latch await catch interruptedexception e e printstacktrace system out println count a map get a system out println count b map get b system out println nonthreadsafecounter map get nonthreadsafecounter assertequals num map get a intvalue assertequals num map get b intvalue assertequals num map get nonthreadsafecounter intvalue finally inner dispose 
flowable integer f1 flowable integer just 1 2 3 4 5 flowable integer f2 flowable integer just 6 7 8 9 10 flowable string f flowable integer merge f1 f2 map new function integer string override public string apply integer t asserttrue thread currentthread getname startswith return value t thread thread currentthread getname f subscribeon schedulers computation blockingforeach new consumer string override public void accept string t system out println t t 
final string currentthreadname thread currentthread getname flowable integer f1 flowable integer just 1 2 3 4 5 flowable integer f2 flowable integer just 6 7 8 9 10 flowable string f flowable integer merge f1 f2 subscribeon schedulers computation map new function integer string override public string apply integer t assertnotequals thread currentthread getname currentthreadname asserttrue thread currentthread getname startswith return value t thread thread currentthread getname f blockingforeach new consumer string override public void accept string t system out println t t 
schedulertesthelper getscheduler 
worker w schedulers computation createworker try cancelledretention w false finally w dispose w schedulers computation createworker try cancelledretention w true finally w dispose 
final int calls 0 runnable r new runnable override public void run calls 0 scheduler s new computationscheduler s shutdown s shutdown assertequals disposable disposed s scheduledirect r assertequals disposable disposed s scheduledirect r 1 timeunit seconds assertequals disposable disposed s r 1 1 timeunit seconds worker w s createworker w dispose asserttrue w isdisposed assertequals disposable disposed w schedule r assertequals disposable disposed w schedule r 1 timeunit seconds assertequals disposable disposed w scheduleperiodically r 1 1 timeunit seconds assertequals 0 calls 0 
countdownlatch latch new countdownlatch 1 scheduler computationscheduler new computationscheduler new threadfactory override public thread newthread runnable r thread t new thread r t thread throwable latch countdown return t rxjavaplugins seterrorhandler h latch countdown try observable create s s onnext 1 throw new outofmemoryerror subscribeon computationscheduler subscribe v e latch countdown asserttrue latch await 2 timeunit seconds finally rxjavaplugins reset computationscheduler shutdown 
countdownlatch latch new countdownlatch 1 scheduler computationscheduler new computationscheduler new threadfactory override public thread newthread runnable r thread t new thread r t thread throwable latch countdown return t rxjavaplugins seterrorhandler h latch countdown try flowable interval 500 timeunit milliseconds computationscheduler subscribe v throw new outofmemoryerror e latch countdown asserttrue latch await 2 timeunit seconds finally rxjavaplugins reset computationscheduler shutdown 
atomicinteger repeatcount new atomicinteger schedulers computation new runnable override public void run repeatcount incrementandget throw new outofmemoryerror 0 1 timeunit milliseconds thread sleep 200 assertequals 1 repeatcount get 
atomicinteger repeatcount new atomicinteger schedulers computation new runnable override public void run repeatcount incrementandget throw new outofmemoryerror 0 1 timeunit nanoseconds thread sleep 200 assertequals 1 repeatcount get 
final worker w schedulers computation createworker return new worker override public void dispose w dispose override public boolean isdisposed return w isdisposed nonnull override public disposable schedule nonnull runnable action return w schedule action nonnull override public disposable schedule nonnull runnable action long delaytime nonnull timeunit unit return w schedule action delaytime unit override public long now timeunit unit return super now unit unit convert drift timeunit nanoseconds 
return super now unit unit convert drift timeunit nanoseconds 
customdriftscheduler s new customdriftscheduler scheduler worker w s createworker try final list long times new arraylist disposable d w scheduleperiodically new runnable override public void run times add system currenttimemillis 100 100 timeunit milliseconds thread sleep 150 s drift timeunit seconds tonanos 1 scheduler clockdrifttolerance thread sleep 400 d dispose thread sleep 150 system out println runs times size for int i 0 i times size 1 i long diff times get i 1 times get i system out println diff i diff asserttrue i diff diff 150 diff 50 asserttrue too few invocations times size times size 2 finally w dispose 
customdriftscheduler s new customdriftscheduler scheduler worker w s createworker try final list long times new arraylist disposable d w scheduleperiodically new runnable override public void run times add system currenttimemillis 100 100 timeunit milliseconds thread sleep 150 s drift timeunit seconds tonanos 1 scheduler clockdrifttolerance thread sleep 400 d dispose thread sleep 150 system out println runs times size asserttrue times size 2 for int i 0 i times size 1 i long diff times get i 1 times get i system out println diff i diff asserttrue diff out of range diff diff 250 diff 50 finally w dispose 
return schedulers trampoline 
final string currentthreadname thread currentthread getname flowable integer f1 flowable integer just 1 2 3 4 5 flowable integer f2 flowable integer just 6 7 8 9 10 flowable string f flowable integer merge f1 f2 subscribeon schedulers trampoline map new function integer string override public string apply integer t assertequals thread currentthread getname currentthreadname return value t thread thread currentthread getname f blockingforeach new consumer string override public void accept string t system out println t t 
final arraylist string workdone new arraylist final compositedisposable workers new compositedisposable worker worker schedulers trampoline createworker try workers add worker worker schedule new runnable override public void run workers add a workdone final worker worker2 schedulers trampoline createworker workers add worker2 worker2 schedule new runnable override public void run workers add b workdone worker2 dispose assertequals 6 workdone size assertequals arrays aslist a 1 a b 1 a b 2 b 1 b b 1 b b 2 workdone finally workers dispose 
final worker trampolineworker schedulers trampoline createworker final subscriber object subscriber testhelper mocksubscriber final testsubscriber disposable ts new testsubscriber subscriber flowable range 0 50 flatmap new function integer publisher disposable override public publisher disposable apply integer count return flowable interval 1 timeunit microseconds map new function long disposable override public disposable apply long ount1 return trampolineworker schedule functions empty runnable take 100 subscribeon schedulers computation subscribe ts ts awaitdone 5 timeunit seconds ts assertnoerrors 
worker worker schedulers trampoline createworker worker schedule new runnable override public void run string msg key 1 workdone add msg system out println msg worker worker3 schedulers trampoline createworker worker3 schedule createprintaction key b 1 workdone worker3 schedule createprintaction key b 2 workdone return worker 
return new runnable override public void run system out println message workdone add message 
try rxjavaplugins true flowable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception flowable just 1 delay 10 timeunit seconds blockingfirst return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true flowable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception flowable just 1 delay 10 timeunit seconds blockinglast return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true flowable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception flowable just 1 delay 10 timeunit seconds blockingiterable iterator next return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true flowable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception flowable just 1 delay 10 timeunit seconds blockingsubscribe return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true flowable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception flowable just 1 delay 10 timeunit seconds blockingsingle return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true flowable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception flowable just 1 delay 10 timeunit seconds blockingforeach functions emptyconsumer return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true flowable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception flowable just 1 delay 10 timeunit seconds blockinglatest iterator hasnext return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true flowable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception flowable just 1 delay 10 timeunit seconds blockingnext iterator hasnext return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true flowable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception flowable just 1 delay 10 timeunit seconds tofuture get return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true observable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception observable just 1 delay 10 timeunit seconds blockingfirst return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true observable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception flowable just 1 delay 10 timeunit seconds blockinglast return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true observable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception observable just 1 delay 10 timeunit seconds blockingiterable iterator next return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true observable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception observable just 1 delay 10 timeunit seconds blockingsubscribe return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true observable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception observable just 1 delay 10 timeunit seconds blockingsingle return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true observable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception observable just 1 delay 10 timeunit seconds blockingforeach functions emptyconsumer return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true observable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception observable just 1 delay 10 timeunit seconds blockinglatest iterator hasnext return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true observable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception observable just 1 delay 10 timeunit seconds blockingnext iterator hasnext return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true observable just 1 subscribeon schedulers computation map new function integer integer override public integer apply integer v throws exception observable just 1 delay 10 timeunit seconds tofuture get return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true observable just 1 subscribeon schedulers single map new function integer integer override public integer apply integer v throws exception observable just 1 delay 10 timeunit seconds blockingfirst return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true single just 1 subscribeon schedulers single map new function integer integer override public integer apply integer v throws exception single just 1 delay 10 timeunit seconds blockingget return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true maybe just 1 subscribeon schedulers single map new function integer integer override public integer apply integer v throws exception maybe just 1 delay 10 timeunit seconds blockingget return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true completable complete subscribeon schedulers single dooncomplete new action override public void run throws exception completable complete delay 10 timeunit seconds blockingawait test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true completable complete subscribeon schedulers single dooncomplete new action override public void run throws exception completable complete delay 10 timeunit seconds blockingawait test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset 
try rxjavaplugins true observable just 1 subscribeon schedulers io map new function integer integer override public integer apply integer v throws exception return observable just 2 delay 100 timeunit milliseconds blockingfirst test awaitdone 5 timeunit seconds assertresult 2 finally rxjavaplugins reset 
try rxjavaplugins setonbeforeblocking new booleansupplier override public boolean getasboolean throws exception return true rxjavaplugins true flowable just 1 map new function integer integer override public integer apply integer v throws exception flowable just 1 delay 10 timeunit seconds blockinglast return v test awaitdone 5 timeunit seconds assertfailure class finally rxjavaplugins reset flowable just 1 map new function integer integer override public integer apply integer v throws exception return flowable just 2 delay 100 timeunit milliseconds blockinglast test awaitdone 5 timeunit seconds assertresult 2 
final atomicinteger countreceived new atomicinteger final atomicinteger countgenerated new atomicinteger final countdownlatch latch new countdownlatch 1 flowable interval 50 timeunit milliseconds map new function long long override public long apply long along countgenerated incrementandget return along subscribeon getscheduler observeon getscheduler subscribe new defaultsubscriber long override public void oncomplete system out println completed override public void onerror throwable e system out println onerror override public void onnext long args if countreceived incrementandget 2 cancel latch countdown system out println received args latch await 1000 timeunit milliseconds system out println it thinks it is finished int timeout 10 while timeout 0 countgenerated get 2 thread sleep 100 assertequals 2 countgenerated get 
final countdownlatch latch new countdownlatch 1 final countdownlatch unsubscribelatch new countdownlatch 1 final atomicinteger counter new atomicinteger final worker inner getscheduler createworker try inner schedule new runnable override public void run inner schedule new runnable int i override public void run system out println run i if i 10 latch countdown try unsubscribelatch await catch interruptedexception e counter incrementandget inner schedule this latch await inner dispose unsubscribelatch countdown thread sleep 200 assertequals 10 counter get finally inner dispose 
final countdownlatch unsubscribelatch new countdownlatch 1 final atomicinteger counter new atomicinteger final worker inner getscheduler createworker try inner schedule new runnable override public void run inner schedule new runnable int i override public void run system out println run i if i 10 inner dispose counter incrementandget inner schedule this unsubscribelatch countdown thread sleep 200 assertequals 10 counter get finally inner dispose 
final countdownlatch latch new countdownlatch 1 final countdownlatch unsubscribelatch new countdownlatch 1 final atomicinteger counter new atomicinteger final worker inner getscheduler createworker try inner schedule new runnable override public void run inner schedule new runnable long i 1l override public void run if i 10 latch countdown try unsubscribelatch await catch interruptedexception e counter incrementandget inner schedule this 10 timeunit milliseconds 10 timeunit milliseconds latch await inner dispose unsubscribelatch countdown thread sleep 200 assertequals 10 counter get finally inner dispose 
final countdownlatch latch new countdownlatch 1 final worker inner getscheduler createworker try inner schedule new runnable int i override public void run i if i 0 system out println i total memory runtime getruntime totalmemory free runtime getruntime freememory if i inner schedule this else latch countdown latch await finally inner dispose 
final countdownlatch latch new countdownlatch 1 final worker inner getscheduler createworker try inner schedule new runnable private long i override public void run i if i 0 system out println i total memory runtime getruntime totalmemory free runtime getruntime freememory if i inner schedule this else latch countdown latch await finally inner dispose 
final countdownlatch latch new countdownlatch 10 final countdownlatch completionlatch new countdownlatch 1 final worker inner getscheduler createworker try flowable integer obs flowable unsafecreate new publisher integer override public void subscribe final subscriber super integer subscriber inner schedule new runnable override public void run subscriber onnext 42 latch countdown inner schedule this subscriber onsubscribe new subscription override public void cancel inner dispose subscriber oncomplete completionlatch countdown override public void request long n final atomicinteger count new atomicinteger final atomicboolean completed new atomicboolean false resourcesubscriber integer s new resourcesubscriber integer override public void oncomplete system out println completed completed set true override public void onerror throwable e system out println error override public void onnext integer args count incrementandget system out println args obs subscribe s if latch await 5000 timeunit milliseconds fail timed out waiting on onnext latch s dispose system out println unsubscribe if completionlatch await 5000 timeunit milliseconds fail timed out waiting on completion latch asserttrue count get 10 asserttrue completed get finally inner dispose 
final scheduler scheduler getscheduler final atomicinteger count new atomicinteger flowable integer f1 flowable integer just 1 2 3 4 5 f1 subscribe new consumer integer override public void accept integer t system out println thread thread currentthread getname system out println t t count incrementandget assertequals 5 count get count set 0 final string currentthreadname thread currentthread getname final countdownlatch latch new countdownlatch 5 final countdownlatch first new countdownlatch 1 f1 subscribeon scheduler subscribe new consumer integer override public void accept integer t try first await 1000 timeunit seconds catch interruptedexception e throw new runtimeexception the latch should have released if we are async e assertnotequals thread currentthread getname currentthreadname system out println thread thread currentthread getname system out println t t count incrementandget latch countdown assertequals 0 count get first countdown latch await assertequals 5 count get 
notification integer notification notification createonerror new testexception assertnull notification getvalue asserttrue notification geterror tostring notification geterror instanceof testexception 
notification integer notification notification createoncomplete assertnull notification getvalue assertnull notification geterror asserttrue notification isoncomplete 
notification integer n1 notification createonnext 0 assertnotequals 0 n1 assertnotequals n1 0 notification integer n2 notification createonerror new testexception assertnotequals 0 n2 assertnotequals n2 0 notification integer n3 notification createoncomplete assertnotequals 0 n3 assertnotequals n3 0 
notification integer n1 notification createonnext 0 notification integer n2 notification createonnext 0 assertequals n1 n2 assertequals n2 n1 
notification integer n1 notification createonnext 1337 assertequals integer valueof 1337 hashcode n1 hashcode assertequals 0 notification createoncomplete hashcode 
assertequals onnextnotification 1 notification createonnext 1 tostring assertequals onerrornotification io reactivex rxjava3 exceptions testexception notification createonerror new testexception tostring assertequals notification createoncomplete tostring 
throwable caughtthrowable null for int i 0 i retrycount i try base evaluate return catch throwable t caughtthrowable t system err println description getdisplayname run i 1 failed int n sleep if backoff i 0 n n 2 i thread sleep n system err println description getdisplayname giving up after retrycount failures throw caughtthrowable 
return statement base description 
return new retrystatement base description 
testhelper witherrortracking errors scheduler worker worker schedulers single createworker disposetask task new disposetask throw new testexception worker try task run fail should have thrown catch testexception expected testhelper assertundeliverable errors 0 testexception class asserttrue worker isdisposed 
list throwable errors testhelper trackpluginerrors try scheduler worker worker schedulers single createworker periodicdirecttask task new periodicdirecttask throw new testexception worker try task run fail should have thrown catch testexception expected testhelper assertundeliverable errors 0 testexception class asserttrue worker isdisposed task run finally rxjavaplugins reset 
cb await try long before system currenttimemillis thread sleep 5000 throw new was not interrupted in time system currenttimemillis before catch interruptedexception ex 
long before system currenttimemillis thread sleep 50 if system currenttimemillis before 100 ts cancel throw new overslept system currenttimemillis before 
long before system currenttimemillis thread sleep 50 if system currenttimemillis before 100 to dispose throw new overslept system currenttimemillis before 
list throwable errors testhelper trackpluginerrors try testsubscriber integer ts flowable just 1 subscribeon schedulers io flatmap new function integer publisher integer override public publisher integer apply integer v throws exception sleep return flowable integer error new testexception test cb await beforecancelsleep ts ts cancel thread sleep sleep after cancel ts assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testsubscriber integer ts flowable just 1 subscribeon schedulers io flatmapsingle new function integer single integer override public single integer apply integer v throws exception sleep return single integer error new testexception test cb await beforecancelsleep ts ts cancel thread sleep sleep after cancel ts assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testsubscriber integer ts flowable just 1 subscribeon schedulers io flatmapmaybe new function integer maybe integer override public maybe integer apply integer v throws exception sleep return maybe integer error new testexception test cb await beforecancelsleep ts ts cancel thread sleep sleep after cancel ts assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver void to flowable just 1 subscribeon schedulers io flatmapcompletable new function integer completable override public completable apply integer v throws exception sleep return completable error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testsubscriber void ts flowable just 1 subscribeon schedulers io flatmapcompletable new function integer completable override public completable apply integer v throws exception sleep return completable error new testexception void toflowable test cb await beforecancelsleep ts ts cancel thread sleep sleep after cancel ts assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to observable just 1 subscribeon schedulers io flatmap new function integer observable integer override public observable integer apply integer v throws exception sleep return observable integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to observable just 1 subscribeon schedulers io flatmapsingle new function integer single integer override public single integer apply integer v throws exception sleep return single integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to observable just 1 subscribeon schedulers io flatmapmaybe new function integer maybe integer override public maybe integer apply integer v throws exception sleep return maybe integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver void to observable just 1 subscribeon schedulers io flatmapcompletable new function integer completable override public completable apply integer v throws exception sleep return completable error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver void to observable just 1 subscribeon schedulers io flatmapcompletable new function integer completable override public completable apply integer v throws exception sleep return completable error new testexception void toobservable test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to single just 1 subscribeon schedulers io flatmap new function integer single integer override public single integer apply integer v throws exception sleep return single integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to single just 1 subscribeon schedulers io flatmapmaybe new function integer maybe integer override public maybe integer apply integer v throws exception sleep return maybe integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver void to single just 1 subscribeon schedulers io flatmapcompletable new function integer completable override public completable apply integer v throws exception sleep return completable error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to single just 1 subscribeon schedulers io flatmapcompletable new function integer completable override public completable apply integer v throws exception sleep return completable error new testexception tosingledefault 0 test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testsubscriber integer ts single just 1 subscribeon schedulers io flatmappublisher new function integer publisher integer override public publisher integer apply integer v throws exception sleep return flowable integer error new testexception test cb await beforecancelsleep ts ts cancel thread sleep sleep after cancel ts assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to single just 1 subscribeon schedulers io flatmap new function integer single integer override public single integer apply integer v throws exception sleep return single integer error new testexception a b a b test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to single just 1 subscribeon schedulers io flatmapobservable new function integer observable integer override public observable integer apply integer v throws exception sleep return observable integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to single just 1 subscribeon schedulers io flatmap new function integer single integer override public single integer apply integer v throws exception sleep return single integer error new testexception new function throwable single integer override public single integer apply throwable v throws exception sleep return single integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to single integer error new testexception subscribeon schedulers io flatmap new function integer single integer override public single integer apply integer v throws exception sleep return single integer error new testexception new function throwable single integer override public single integer apply throwable v throws exception sleep return single integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to maybe just 1 subscribeon schedulers io flatmapsingle new function integer single integer override public single integer apply integer v throws exception sleep return single integer error new testexception tosingle test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to maybe just 1 subscribeon schedulers io flatmapsingle new function integer single integer override public single integer apply integer v throws exception sleep return single integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to maybe just 1 subscribeon schedulers io flatmap new function integer maybe integer override public maybe integer apply integer v throws exception sleep return maybe integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testsubscriber integer ts maybe just 1 subscribeon schedulers io flatmappublisher new function integer publisher integer override public publisher integer apply integer v throws exception sleep return flowable integer error new testexception test cb await beforecancelsleep ts ts cancel thread sleep sleep after cancel ts assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to maybe just 1 subscribeon schedulers io flatmapobservable new function integer observable integer override public observable integer apply integer v throws exception sleep return observable integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to maybe just 1 subscribeon schedulers io flatmap new function integer maybe integer override public maybe integer apply integer v throws exception sleep return maybe integer error new testexception new function throwable maybe integer override public maybe integer apply throwable v throws exception sleep return maybe integer error new testexception new supplier maybe integer override public maybe integer get throws exception sleep return maybe integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to maybe integer error new testexception subscribeon schedulers io flatmap new function integer maybe integer override public maybe integer apply integer v throws exception sleep return maybe integer error new testexception new function throwable maybe integer override public maybe integer apply throwable v throws exception sleep return maybe integer error new testexception new supplier maybe integer override public maybe integer get throws exception sleep return maybe integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to maybe integer empty subscribeon schedulers io flatmap new function integer maybe integer override public maybe integer apply integer v throws exception sleep return maybe integer error new testexception new function throwable maybe integer override public maybe integer apply throwable v throws exception sleep return maybe integer error new testexception new supplier maybe integer override public maybe integer get throws exception sleep return maybe integer error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver integer to maybe just 1 subscribeon schedulers io flatmap new function integer maybe integer override public maybe integer apply integer v throws exception sleep return maybe integer error new testexception a b a b test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver void to maybe just 1 subscribeon schedulers io flatmapcompletable new function integer completable override public completable apply integer v throws exception sleep return completable error new testexception test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserver void to maybe just 1 subscribeon schedulers io flatmapcompletable new function integer completable override public completable apply integer v throws exception sleep return completable error new testexception void tomaybe test cb await beforecancelsleep to to dispose thread sleep sleep after cancel to assertempty asserttrue errors tostring errors isempty finally rxjavaplugins reset 
try flowable just 1 to new flowableconverter integer integer override public integer apply flowable integer v throw new testexception forced failure fail should have thrown catch testexception ex assertequals forced failure ex getmessage 
throw new testexception forced failure 
try observable just 1 to new observableconverter integer integer override public integer apply observable integer v throw new testexception forced failure fail should have thrown catch testexception ex assertequals forced failure ex getmessage 
throw new testexception forced failure 
try single just 1 to new singleconverter integer integer override public integer apply single integer v throw new testexception forced failure fail should have thrown catch testexception ex assertequals forced failure ex getmessage 
throw new testexception forced failure 
try maybe just 1 to new maybeconverter integer integer override public integer apply maybe integer v throw new testexception forced failure fail should have thrown catch testexception ex assertequals forced failure ex getmessage 
throw new testexception forced failure 
try completable complete to new completableconverter completable override public completable apply completable v throw new testexception forced failure fail should have thrown catch testexception ex assertequals forced failure ex getmessage 
throw new testexception forced failure 
a string integer a new a string integer observable just a to observableconverter convertertest 
a string integer a new a string integer single just a to singleconverter convertertest string 
a string integer a new a string integer maybe just a to maybeconverter convertertest string 
a string integer a new a string integer flowable just a to flowableconverter convertertest string 
a string integer a new a string integer flowable just a parallel to convertertest string 
compositeconverter converter new compositeconverter flowable just 1 to converter test assertvalue 1 observable just 1 to converter test assertvalue 1 maybe just 1 to converter test assertvalue 1 single just 1 to converter test assertvalue 1 completable complete to converter test assertcomplete flowable just 1 parallel to converter test assertvalue 1 
return new observableconverter a t b t override public b t apply observable a t a return new b t 
return new b t 
return new singleconverter a t b t override public b t apply single a t a return new b t 
return new b t 
return new maybeconverter a t b t override public b t apply maybe a t a return new b t 
return new b t 
return new flowableconverter a t b t override public b t apply flowable a t a return new b t 
return new b t 
return new a t b t override public b t apply parallelflowable a t a return new b t 
return new b t 
return upstream sequential 
return upstream toflowable 
$EMPTY$
try flowable just 1 compose new flowabletransformer integer integer override public publisher integer apply flowable integer v throw new testexception forced failure fail should have thrown catch testexception ex assertequals forced failure ex getmessage 
try observable just 1 compose new integer integer override public observable integer apply observable integer v throw new testexception forced failure fail should have thrown catch testexception ex assertequals forced failure ex getmessage 
try single just 1 compose new singletransformer integer integer override public single integer apply single integer v throw new testexception forced failure fail should have thrown catch testexception ex assertequals forced failure ex getmessage 
try maybe just 1 compose new maybetransformer integer integer override public maybe integer apply maybe integer v throw new testexception forced failure fail should have thrown catch testexception ex assertequals forced failure ex getmessage 
try completable complete compose new override public completable apply completable v throw new testexception forced failure fail should have thrown catch testexception ex assertequals forced failure ex getmessage 
a string integer a new a string integer observable just a compose transformertest string 
a string integer a new a string integer single just a compose transformertest string 
a string integer a new a string integer maybe just a compose transformertest string 
a string integer a new a string integer flowable just a compose transformertest string 
return new a t b t override public observablesource b t apply observable a t a return observable empty 
return new singletransformer a t b t override public singlesource b t apply single a t a return single never 
return new maybetransformer a t b t override public maybesource b t apply maybe a t a return maybe empty 
return new flowabletransformer a t b t override public publisher b t apply flowable a t a return flowable empty 
assertequals 3 values length assertnotnull valueof error 
assertequals 5 backpressurestrategy values length assertnotnull backpressurestrategy valueof buffer 
assertequals 6 backpressurekind values length assertnotnull backpressurekind valueof full 
scheduler is drift use nanotime false 
assertfalse scheduler is drift use nanotime assertfalse boolean getboolean drift use nanotime 
timeunit unit timeunit milliseconds asserttrue isinrange system currenttimemillis scheduler computenow unit unit 250 timeunit milliseconds 
timeunit unit timeunit nanoseconds scheduler is drift use nanotime true assertfalse isinrange system currenttimemillis scheduler computenow unit unit 250 timeunit milliseconds asserttrue isinrange system nanotime scheduler computenow unit timeunit nanoseconds 250 timeunit milliseconds 
assertequals 100 000 000l scheduler computeclockdrift 100 milliseconds assertequals 2 000 000 000l scheduler computeclockdrift 2 seconds assertequals 180 000 000 000l scheduler computeclockdrift 3 minutes assertequals 240 000 000 000l scheduler computeclockdrift 4 random assertequals 300 000 000 000l scheduler computeclockdrift 5 null 
testobservable t new testobservable flowable string st flowable unsafecreate t subscriber string w testhelper mocksubscriber st subscribe new safesubscriber new testsubscriber w t sendonnext one t sendonerror new runtimeexception bad t sendonnext two verify w times 1 onnext one verify w times 1 onerror any throwable class verify w mockito never onnext two 
testobservable t new testobservable flowable string st flowable unsafecreate t subscriber string w testhelper mocksubscriber st subscribe new safesubscriber new testsubscriber w t sendonnext one t sendonerror new runtimeexception bad t sendoncompleted verify w times 1 onnext one verify w times 1 onerror any throwable class verify w mockito never oncomplete 
testobservable t new testobservable flowable string st flowable unsafecreate t subscriber string w testhelper mocksubscriber st subscribe new safesubscriber new testsubscriber w t sendonnext one t sendoncompleted t sendonnext two verify w times 1 onnext one verify w mockito never onnext two verify w times 1 oncomplete verify w mockito never onerror any throwable class 
testobservable t new testobservable flowable string st flowable unsafecreate t subscriber string w testhelper mocksubscriber st subscribe new safesubscriber new testsubscriber w t sendonnext one t sendoncompleted t sendonerror new runtimeexception bad verify w times 1 onnext one verify w times 1 oncomplete verify w mockito never onerror any throwable class 
subscriber oncomplete 
subscriber onnext value 
subscriber onerror e 
this subscriber subscriber subscriber onsubscribe new subscription override public void cancel system out println synchronizetest unsubscribe that does nothing override public void request long n 
system out println synchronizetest unsubscribe that does nothing 
atomicreference throwable onerror new atomicreference try observer onnext fail onerror onnext one fail expects exception to be thrown catch exception e assertnull onerror get asserttrue e instanceof assertequals onnextfail e getmessage 
atomicreference throwable onerror new atomicreference try safesubscriber string safeobserver new safesubscriber observer onnext fail onerror safeobserver onsubscribe new booleansubscription safeobserver onnext one assertnotnull onerror get asserttrue onerror get instanceof assertequals onnextfail onerror get getmessage catch exception e fail expects exception to be passed to onerror 
atomicreference throwable onerror new atomicreference try observer oncompleted fail onerror oncomplete fail expects exception to be thrown catch exception e assertnull onerror get asserttrue e instanceof assertequals oncompletefail e getmessage 
try onerror new error fail expects exception to be thrown catch exception e asserttrue e instanceof assertequals onerrorfail e getmessage 
try observer onnext onerror fail onnext one fail expects exception to be thrown catch exception e e printstacktrace asserttrue e instanceof assertequals onnextfail e getmessage 
return new defaultsubscriber string override public void oncomplete override public void onerror throwable e onerror set e override public void onnext string args throw new onnextfail 
$EMPTY$
onerror set e 
return new defaultsubscriber string override public void oncomplete override public void onerror throwable e throw new onerrorfail override public void onnext string args throw new onnextfail 
return new defaultsubscriber string override public void oncomplete override public void onerror throwable e throw new onerrorfail override public void onnext string args 
return new defaultsubscriber string override public void oncomplete throw new oncompletefail override public void onerror throwable e onerror set e override public void onnext string args 
subscriber integer actual new defaultsubscriber integer override public void onnext integer t override public void onerror throwable e override public void oncomplete safesubscriber integer s new safesubscriber actual assertsame actual s downstream 
testsubscriber integer ts new testsubscriber safesubscriber integer so new safesubscriber ts booleansubscription bs new booleansubscription so onsubscribe bs ts dispose asserttrue bs iscancelled 
testsubscriber integer ts new testsubscriber safesubscriber integer so new safesubscriber ts booleansubscription bs new booleansubscription so onsubscribe bs so oncomplete so onnext 1 so onerror new testexception so oncomplete ts assertresult 
testsubscriber integer ts new testsubscriber safesubscriber integer so new safesubscriber ts booleansubscription bs new booleansubscription so onsubscribe bs so onnext null ts assertfailure nullpointerexception class 
testsubscriberex integer ts new testsubscriberex safesubscriber integer so new safesubscriber ts so onnext 1 ts nullpointerexception class subscription not set 
testsubscriberex integer ts new testsubscriberex safesubscriber integer so new safesubscriber ts so onerror new testexception ts assertfailure compositeexception class testhelper asserterror ts 0 testexception class testhelper asserterror ts 1 nullpointerexception class subscription not set 
testsubscriberex integer ts new testsubscriberex safesubscriber integer so new safesubscriber ts so oncomplete ts nullpointerexception class subscription not set 
testsubscriber integer ts new testsubscriber safesubscriber integer so new safesubscriber ts booleansubscription bs new booleansubscription so onsubscribe bs so onnext 1 so oncomplete ts assertresult 1 
if crashonsubscribe throw new testexception onsubscribe 
if crashonnext 0 throw new testexception onnext value 
return new safesubscriber this 
if clazz isinstance error throw new assertionerror different error error return this 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 true false false false safesubscriber object so cd tosafe so onsubscribe cd so onnext 1 testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 testexception class onnext 1 testhelper asserterror ce 1 testexception class onerror io reactivex rxjava3 exceptions testexception onnext 1 finally rxjavaplugins reset 
crashdummy cd new crashdummy false 1 false false true false safesubscriber object so cd tosafe so onsubscribe cd so onnext 1 cd asserterror compositeexception class cd assertinnererror 0 testexception class onnext 1 cd assertinnererror 1 testexception class cancel 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 false false false false safesubscriber object so cd tosafe so onsubscribe cd so onsubscribe cd testhelper asserterror list 0 class finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy true 1 false false false false safesubscriber object so cd tosafe so onsubscribe cd testhelper assertundeliverable list 0 testexception class onsubscribe finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy true 1 false false true false safesubscriber object so cd tosafe so onsubscribe cd testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 testexception class onsubscribe testhelper asserterror ce 1 testexception class cancel finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy true 1 false false false false safesubscriber object so cd tosafe so onnext 1 testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 nullpointerexception class subscription not set testhelper asserterror ce 1 testexception class onsubscribe finally rxjavaplugins reset 
crashdummy cd new crashdummy false 1 false false true false safesubscriber object so cd tosafe so onsubscribe cd so onnext null cd assertinnererror 0 nullpointerexception class cd assertinnererror 1 testexception class cancel 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 true false false false safesubscriber object so cd tosafe so onnext 1 testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 nullpointerexception class subscription not set testhelper asserterror ce 1 testexception class onerror java lang nullpointerexception subscription not set finally rxjavaplugins reset 
crashdummy cd new crashdummy false 1 false false false false safesubscriber object so cd tosafe so onsubscribe cd so onerror null cd asserterror nullpointerexception class 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy true 1 false false false false safesubscriber object so cd tosafe so onerror new testexception testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 testexception class testhelper asserterror ce 1 nullpointerexception class subscription not set finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 true false false false safesubscriber object so cd tosafe so onerror new testexception testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 testexception class testhelper asserterror ce 1 nullpointerexception class subscription not set testhelper asserterror ce 2 testexception class finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 false true false false safesubscriber object so cd tosafe so onsubscribe cd so oncomplete testhelper assertundeliverable list 0 testexception class oncomplete finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy true 1 false true false false safesubscriber object so cd tosafe so oncomplete testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 nullpointerexception class subscription not set testhelper asserterror ce 1 testexception class onsubscribe finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 true true false false safesubscriber object so cd tosafe so oncomplete testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 nullpointerexception class subscription not set testhelper asserterror ce 1 testexception class finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 false false false true safesubscriber object so cd tosafe so onsubscribe cd so request 1 testhelper assertundeliverable list 0 testexception class finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 false false true false safesubscriber object so cd tosafe so onsubscribe cd so cancel testhelper assertundeliverable list 0 testexception class finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 false false true true safesubscriber object so cd tosafe so onsubscribe cd so request 1 testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 testexception class request testhelper asserterror ce 1 testexception class cancel finally rxjavaplugins reset 
super onstart start 
errors add e dispose 
complete dispose 
integer ro new ro add null 
integer ro new assertfalse ro isdisposed disposable d disposable empty ro add d assertfalse d isdisposed ro dispose asserttrue ro isdisposed asserttrue d isdisposed ro dispose asserttrue ro isdisposed asserttrue d isdisposed 
integer ro new assertfalse ro isdisposed disposable d disposable empty ro add d assertfalse d isdisposed ro oncomplete asserttrue ro isdisposed asserttrue d isdisposed 
integer ro new assertfalse ro isdisposed disposable d disposable empty ro add d assertfalse d isdisposed ro onerror new testexception asserttrue ro isdisposed asserttrue d isdisposed 
integer tc new assertfalse tc isdisposed assertequals 0 tc start asserttrue tc values isempty asserttrue tc errors isempty flowable just 1 subscribe tc asserttrue tc isdisposed assertequals 1 tc start assertequals 1 tc values get 0 intvalue asserttrue tc errors isempty 
list throwable error testhelper trackpluginerrors try integer tc new tc onsubscribe new booleansubscription booleansubscription bs new booleansubscription tc onsubscribe bs asserttrue bs iscancelled assertequals 1 tc start testhelper asserterror error 0 class endconsumerhelper composemessage tc getclass getname finally rxjavaplugins reset 
integer tc new tc dispose booleansubscription bs new booleansubscription tc onsubscribe bs asserttrue bs iscancelled assertequals 0 tc start 
integer tc new integer override protected void onstart start flowable just 1 subscribe tc assertequals 1 tc start assertequals collections emptylist tc values asserttrue tc errors isempty assertequals 0 tc complete tc requestmore 1 assertequals 1 tc start assertequals 1 tc values get 0 intvalue asserttrue tc errors isempty assertequals 1 tc complete 
start 
events add t 
events add t 
events add done 
requestearly sub new requestearly flowable range 1 10 subscribe sub assertequals arrays object aslist 1 2 3 4 5 sub events 
flowable integer oi flowable fromiterable arrays aslist 1 2 testsubscriber integer ts new testsubscriber oi subscribe ts ts assertvalues 1 2 ts assertvaluecount 2 ts assertcomplete ts assertnoerrors 
assertthrows assertionerror class flowable integer oi flowable fromiterable arrays aslist 1 2 testsubscriber integer ts new testsubscriber oi subscribe ts ts assertvalues 1 ts assertvaluecount 2 ts assertcomplete ts assertnoerrors 
assertthrows assertionerror class flowable integer oi flowable fromiterable arrays aslist 1 2 testsubscriber integer ts new testsubscriber oi subscribe ts ts assertvalues 1 3 ts assertvaluecount 2 ts assertcomplete ts assertnoerrors 
assertthrows assertionerror class publishprocessor integer p publishprocessor create testsubscriber integer ts new testsubscriber p subscribe ts p onnext 1 p onnext 2 ts assertvalues 1 2 ts assertvaluecount 2 ts assertcomplete ts assertnoerrors 
flowable integer oi flowable fromiterable arrays aslist 1 2 subscriber integer mocksubscriber testhelper mocksubscriber oi subscribe new testsubscriber mocksubscriber inorder inorder inorder mocksubscriber inorder verify mocksubscriber times 1 onnext 1 inorder verify mocksubscriber times 1 onnext 2 inorder verify mocksubscriber times 1 oncomplete inorder 
flowable integer oi flowable fromiterable arrays aslist 1 2 3 4 5 6 7 8 9 take 2 subscriber integer mocksubscriber testhelper mocksubscriber oi subscribe new testsubscriber mocksubscriber inorder inorder inorder mocksubscriber inorder verify mocksubscriber times 1 onnext 1 inorder verify mocksubscriber times 1 onnext 2 inorder verify mocksubscriber times 1 oncomplete inorder 
runtimeexception e new runtimeexception oops testsubscriber object subscriber new testsubscriber flowable error e subscribe subscriber subscriber asserterror e 
testsubscriber object ts new testsubscriber flowable just 1 subscribe ts ts awaitdone 1 timeunit seconds ts assertcomplete ts assertnoerrors 
testsubscriber object ts new testsubscriber final atomicboolean unsub new atomicboolean false flowable just 1 dooncancel new action override public void run unsub set true delay 1000 timeunit milliseconds subscribe ts ts awaitdone 100 timeunit milliseconds ts dispose asserttrue unsub get 
testsubscriber integer ts new testsubscriber null ts oncomplete 
testsubscriber integer ts new testsubscriber null ts oncomplete 
testsubscriber integer ts new testsubscriber null 0l ts oncomplete 
testsubscriber integer ts0 new testsubscriber ts0 onsubscribe emptysubscription instance testsubscriber integer ts new testsubscriber ts0 ts oncomplete ts0 assertcomplete ts0 assertnoerrors 
testsubscriber integer ts1 new testsubscriber testsubscriber integer ts2 new testsubscriber ts1 ts2 oncomplete ts1 assertcomplete 
testsubscriber integer ts1 new testsubscriber testsubscriber integer ts2 new testsubscriber ts1 0l ts2 oncomplete ts1 assertcomplete 
testsubscriber integer ts new testsubscriber assertfalse ts iscancelled 
testsubscriber integer ts new testsubscriber ts onerror new testexception try ts assertnoerrors catch assertionerror ex return fail error present but no assertion error 
testsubscriber integer ts new testsubscriber try ts assertcomplete catch assertionerror ex return fail not completed and no assertion error 
testsubscriber integer ts new testsubscriber ts oncomplete ts oncomplete try ts assertcomplete catch assertionerror ex return fail multiple completions and no assertion error 
testsubscriber integer ts new testsubscriber ts oncomplete try ts assertnotcomplete catch assertionerror ex return fail completed and no assertion error 
testsubscriber integer ts new testsubscriber ts oncomplete ts oncomplete try ts assertnotcomplete catch assertionerror ex return fail multiple completions and no assertion error 
testsubscriber integer ts new testsubscriber ts onsubscribe emptysubscription instance ts onerror new testexception ts onerror new testexception try ts assertnoerrors catch assertionerror ex throwable e ex getcause if e instanceof compositeexception fail multiple error present but the reported error doesn t have a composite cause compositeexception ce compositeexception e if ce size 2 ce printstacktrace assertequals 2 ce size return fail multiple error present but no assertion error 
testsubscriber integer ts new testsubscriber ts onsubscribe emptysubscription instance ts onerror new testexception ts onerror new testexception try ts asserterror testexception class catch assertionerror ex throwable e ex getcause if e instanceof compositeexception fail multiple error present but the reported error doesn t have a composite cause compositeexception ce compositeexception e assertequals 2 ce size return fail multiple error present but no assertion error 
testsubscriber integer ts new testsubscriber ts onsubscribe emptysubscription instance ts onerror new testexception ts onerror new testexception try ts asserterror new testexception catch assertionerror ex throwable e ex getcause if e instanceof compositeexception fail multiple error present but the reported error doesn t have a composite cause compositeexception ce compositeexception e assertequals 2 ce size return fail multiple error present but no assertion error 
testsubscriber integer ts new testsubscriber ts onsubscribe emptysubscription instance ts onerror new testexception ts onerror new testexception try ts asserterror functions throwable alwaystrue catch assertionerror ex throwable e ex getcause if e instanceof compositeexception fail multiple error present but the reported error doesn t have a composite cause compositeexception ce compositeexception e assertequals 2 ce size return fail multiple error present but no assertion error 
testsubscriber integer ts new testsubscriber ts onerror new testexception try ts asserterror new testexception catch assertionerror ex return fail different error present but no assertion error 
testsubscriber integer ts new testsubscriber ts onerror new runtimeexception try ts asserterror new testexception catch assertionerror ex return fail different error present but no assertion error 
testsubscriber integer ts new testsubscriber ts onerror new runtimeexception try ts asserterror testexception class catch assertionerror ex return fail different error present but no assertion error 
testsubscriber integer ts new testsubscriber ts onerror new runtimeexception try ts asserterror functions throwable alwaysfalse catch assertionerror ex return fail different error present but no assertion error 
testsubscriber integer ts new testsubscriber ts onerror new runtimeexception try ts asserterror new predicate throwable override public boolean test throwable throwable throws exception throw new testexception catch testexception ex return fail error in predicate but not thrown 
testsubscriber integer ts new testsubscriber try ts asserterror testexception class catch assertionerror ex return fail no present but no assertion error 
testsubscriber integer ts new testsubscriber try ts asserterror new testexception catch assertionerror ex return fail no present but no assertion error 
testsubscriber integer ts new testsubscriber try ts asserterror functions throwable alwaystrue catch assertionerror ex return fail no present but no assertion error 
testsubscriber integer ts new testsubscriber final thread t0 thread currentthread worker w schedulers computation createworker try w schedule new runnable override public void run t0 interrupt 200 timeunit milliseconds try if ts await 5 timeunit seconds fail did not interrupt wait catch interruptedexception expected finally w dispose 
testsubscriber integer ts new testsubscriber final thread t0 thread currentthread worker w schedulers computation createworker try w schedule new runnable override public void run t0 interrupt 200 timeunit milliseconds try if ts await 5 timeunit seconds fail did not interrupt wait catch interruptedexception expected finally thread interrupted w dispose 
testsubscriber integer ts new testsubscriber final thread t0 thread currentthread worker w schedulers computation createworker try w schedule new runnable override public void run t0 interrupt 200 timeunit milliseconds try ts awaitdone 5 timeunit seconds catch runtimeexception allowed asserttrue allowed tostring allowed getcause instanceof interruptedexception ts dispose if ts iscancelled fail did not unsubscribe finally w dispose 
testsubscriber integer ts new testsubscriber ts oncomplete try ts assertnotcomplete throw new runtimeexception failed to report there were terminal event s catch assertionerror ex 
testsubscriber integer ts new testsubscriber ts onerror new testexception try ts assertnoerrors throw new runtimeexception failed to report there were terminal event s catch assertionerror ex 
testsubscriber integer ts new testsubscriber ts oncomplete ts onerror new testexception try ts assertnotcomplete throw new runtimeexception failed to report there were terminal event s catch assertionerror ex try ts assertnoerrors throw new runtimeexception failed to report there were terminal event s catch assertionerror ex 
testsubscriber integer ts new testsubscriber ts onsubscribe emptysubscription instance ts onerror new testexception ts onerror new testexception try ts assertnoerrors throw new runtimeexception failed to report there were terminal event s catch assertionerror ex throwable e ex getcause if e instanceof compositeexception fail multiple error present but the reported error doesn t have a composite cause compositeexception ce compositeexception e assertequals 2 ce size 
testsubscriber integer ts new testsubscriber ts onnext 1 try ts assertnovalues throw new runtimeexception failed to report there were values catch assertionerror ex 
testsubscriber integer ts new testsubscriber ts onnext 1 ts onnext 2 try ts assertvaluecount 3 throw new runtimeexception failed to report there were values catch assertionerror ex 
testsubscriber integer ts0 new testsubscriber integer override public void oncomplete throw new testexception testsubscriber integer ts new testsubscriber ts0 try ts oncomplete catch testexception ex ts awaitdone 5 timeunit seconds 
testsubscriber integer ts0 new testsubscriber integer override public void onerror throwable e throw new testexception testsubscriber integer ts new testsubscriber ts0 try ts onerror new runtimeexception catch testexception ex ts awaitdone 5 timeunit seconds 
testsubscriber integer ts1 testsubscriber create testsubscriber integer ts testsubscriber create ts1 assertfalse ts hassubscription ts onsubscribe new booleansubscription asserttrue ts hassubscription assertfalse ts isdisposed ts onnext 1 ts onerror new testexception ts oncomplete ts1 assertvalue 1 asserterror testexception class assertcomplete ts dispose asserttrue ts isdisposed try ts assertnovalues throw new runtimeexception should have thrown catch assertionerror exc try ts assertvaluecount 0 throw new runtimeexception should have thrown catch assertionerror exc ts assertvaluesequence collections singletonlist 1 try ts assertvaluesequence collections singletonlist 2 throw new runtimeexception should have thrown catch assertionerror exc 
testsubscriber integer ts testsubscriber create try ts asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex try ts asserterror new testexception throw new runtimeexception should have thrown catch assertionerror ex try ts asserterror functions throwable alwaystrue throw new runtimeexception should have thrown catch assertionerror ex try ts assertsubscribed throw new runtimeexception should have thrown catch assertionerror exc ts onsubscribe new booleansubscription ts assertsubscribed ts assertnoerrors testexception ex new testexception forced failure ts onerror ex ts asserterror ex ts asserterror testexception class ts asserterror functions throwable alwaystrue ts asserterror new predicate throwable override public boolean test throwable t return t getmessage null t getmessage contains forced try ts asserterror new runtimeexception throw new runtimeexception should have thrown catch assertionerror exc try ts asserterror ioexception class throw new runtimeexception should have thrown catch assertionerror exc try ts assertnoerrors throw new runtimeexception should have thrown catch assertionerror exc try ts asserterror functions throwable alwaysfalse throw new runtimeexception should have thrown catch assertionerror exc ts assertvaluecount 0 ts assertnovalues 
assertequals 1 testsubscriber emptysubscriber values length assertnotnull testsubscriber emptysubscriber valueof instance 
assertequals null testsubscriber valueandclass null assertequals 1 class integer testsubscriber valueandclass 1 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription ts onerror new testexception forced failure ts assertfailure testexception class ts onnext 1 ts assertfailure testexception class 1 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription ts oncomplete ts assertresult try ts assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex ts onnext 1 ts assertresult 1 try ts assertresult 2 throw new runtimeexception should have thrown catch assertionerror ex try ts assertresult throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription assertfalse ts await 100 timeunit milliseconds ts awaitdone 100 timeunit milliseconds asserttrue ts isdisposed assertfalse ts await 100 timeunit milliseconds ts assertnoerrors ts assertnotcomplete ts oncomplete asserttrue ts await 100 timeunit milliseconds ts await ts awaitdone 5 timeunit seconds ts assertcomplete ts assertnoerrors asserttrue ts await 5 timeunit seconds final testsubscriber integer ts1 testsubscriber create ts1 onsubscribe new booleansubscription schedulers single scheduledirect new runnable override public void run ts1 oncomplete 200 timeunit milliseconds ts1 await 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription ts assertnovalues assertequals collections emptylist ts values ts onnext 1 assertequals collections singletonlist 1 ts values ts cancel asserttrue ts iscancelled asserttrue ts isdisposed ts assertvalue 1 ts oncomplete 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription ts assertnotcomplete ts oncomplete try ts assertnotcomplete throw new runtimeexception should have thrown catch throwable ex ts assertcomplete ts oncomplete try ts assertcomplete throw new runtimeexception should have thrown catch throwable ex try ts assertcomplete throw new runtimeexception should have thrown catch throwable ex try ts assertnotcomplete throw new runtimeexception should have thrown catch throwable ex 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription try ts assertvalue 1 throw new runtimeexception should have thrown catch throwable ex ts onnext 1 ts assertvalue 1 try ts assertvalue 2 throw new runtimeexception should have thrown catch throwable ex ts onnext 2 try ts assertvalue 1 throw new runtimeexception should have thrown catch throwable ex 
testsubscriber integer ts testsubscriber create ts onnext 1 ts asserterror class ts testsubscriber create ts onsubscribe new booleansubscription ts onnext null ts assertfailure nullpointerexception class integer null 
final testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription thread currentthread interrupt try ts awaitdone 5 timeunit seconds catch runtimeexception allowed asserttrue allowed tostring allowed getcause instanceof interruptedexception thread currentthread interrupt try ts awaitdone 5 timeunit seconds catch runtimeexception allowed asserttrue allowed tostring allowed getcause instanceof interruptedexception 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription ts assertnotcomplete assertnoerrors ts onerror new testexception ts asserterror testexception class ts onerror new ioexception try ts assertnoerrors throw new runtimeexception should have thrown catch assertionerror ex try ts asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex ts testsubscriber create ts onsubscribe new booleansubscription ts onerror new testexception ts oncomplete try ts assertcomplete assertnoerrors throw new runtimeexception should have thrown catch assertionerror ex try ts asserterror throwable class assertnotcomplete throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriber integer ts testsubscriber create ts onsubscribe null ts asserterror nullpointerexception class ts testsubscriber create ts onsubscribe new booleansubscription booleansubscription bs1 new booleansubscription ts onsubscribe bs1 asserttrue bs1 iscancelled ts asserterror class ts testsubscriber create ts dispose bs1 new booleansubscription ts onsubscribe bs1 asserttrue bs1 iscancelled 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription ts onnext 1 ts onnext 2 try ts assertvaluesequence collections integer emptylist throw new runtimeexception should have thrown catch assertionerror ex try ts assertvaluesequence collections singletonlist 1 throw new runtimeexception should have thrown catch assertionerror ex ts assertvaluesequence arrays aslist 1 2 try ts assertvaluesequence arrays aslist 1 2 3 throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriber integer ts new testsubscriber try ts assertempty throw new runtimeexception should have thrown catch assertionerror ex ts onsubscribe new booleansubscription ts assertempty ts onnext 1 try ts assertempty throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriber integer ts new testsubscriber thread currentthread interrupt try ts awaitdone 5 timeunit seconds catch runtimeexception ex asserttrue ex tostring ex getcause instanceof interruptedexception 
testsubscriber integer ts new testsubscriber testexception e new testexception ts onerror e ts onerror new testexception try ts asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex try ts asserterror e throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriber integer ts new testsubscriber ts onsubscribe new booleansubscription try ts assertcomplete throw new runtimeexception should have thrown catch assertionerror ex ts oncomplete ts assertcomplete ts oncomplete try ts assertcomplete throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriber integer ts new testsubscriber ts oncomplete ts asserterror class 
testsubscriber integer ts new testsubscriber new flowablesubscriber integer override public void onsubscribe subscription s override public void onnext integer value override public void onerror throwable e throw new testexception override public void oncomplete throw new testexception ts onsubscribe new booleansubscription try ts oncomplete throw new runtimeexception should have thrown catch testexception ex asserttrue ts await 1 timeunit seconds 
testsubscriber integer ts new testsubscriber new flowablesubscriber integer override public void onsubscribe subscription s override public void onnext integer value override public void onerror throwable e throw new testexception override public void oncomplete throw new testexception ts onsubscribe new booleansubscription try ts onerror new ioexception throw new runtimeexception should have thrown catch testexception ex asserttrue ts await 1 timeunit seconds 
assertthrows assertionerror class testsubscriber object ts new testsubscriber flowable empty subscribe ts ts assertvalue new predicate object override public boolean test final object o throws exception return false 
testsubscriber integer ts new testsubscriber flowable just 1 subscribe ts ts assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
assertequals message assertthrows clazz run getmessage 
value 1 class integer at position 0 did not pass the predicate latch 0 values 1 errors 0 completions 1 assertionerror class testsubscriber integer ts new testsubscriber flowable just 1 subscribe ts ts assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
the first value passed the predicate but this consumer received more than one value latch 0 values 2 errors 0 completions 1 assertionerror class testsubscriber integer ts new testsubscriber flowable just 1 2 subscribe ts ts assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
no values latch 0 values 0 errors 0 completions 1 assertionerror class testsubscriber object ts new testsubscriber flowable empty subscribe ts ts assertvalueat 0 new predicate object override public boolean test final object o throws exception return false 
testsubscriber integer ts new testsubscriber flowable just 1 2 subscribe ts ts assertvalueat 1 new predicate integer override public boolean test final integer o throws exception return o 2 
value 3 class integer at position 2 did not pass the predicate latch 0 values 3 errors 0 completions 1 assertionerror class testsubscriber integer ts new testsubscriber flowable just 1 2 3 subscribe ts ts assertvalueat 2 new predicate integer override public boolean test final integer o throws exception return o 3 
index 2 is out of range 0 2 latch 0 values 2 errors 0 completions 1 assertionerror class testsubscriber integer ts new testsubscriber flowable just 1 2 subscribe ts ts assertvalueat 2 new predicate integer override public boolean test final integer o throws exception return o 1 
index 2 is out of range 0 2 latch 0 values 2 errors 0 completions 1 assertionerror class testsubscriber integer ts new testsubscriber flowable just 1 2 subscribe ts ts assertvalueat 2 3 
index 2 is out of range 0 2 latch 0 values 2 errors 0 completions 1 assertionerror class testsubscriber integer ts new testsubscriber flowable just 1 2 subscribe ts ts assertvalueat 2 3 
index 2 is out of range 0 2 latch 0 values 2 errors 0 completions 1 assertionerror class testsubscriber integer ts new testsubscriber flowable just 1 2 subscribe ts ts assertvalueat 2 new predicate integer override public boolean test final integer o throws exception return o 1 
flowable range 1 5 test 0 requestmore 1 assertvalue 1 requestmore 2 assertvalues 1 2 3 requestmore 3 assertresult 1 2 3 4 5 
try for int i 1 i 3 i flowable just i test withtag testing with item i assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex asserttrue ex tostring ex tostring contains testing with item 2 
thread interrupted testsubscriber object ts flowable never test assertfalse ts await 1 timeunit milliseconds try ts assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex asserttrue ex tostring ex tostring contains timeout 
try flowable never test awaitdone 1 timeunit milliseconds assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex asserttrue ex tostring ex tostring contains timeout 
testsubscriber object ts flowable never test assertfalse ts await 1 timeunit milliseconds try ts assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex asserttrue ex tostring ex tostring contains timeout 
testsubscriber object ts new testsubscriber ts cancel try ts assertresult 1 throw new runtimeexception should have thrown catch throwable ex asserttrue ex tostring ex tostring contains disposed 
flowable range 1 10 delay 100 timeunit milliseconds test 5 awaitcount 5 assertvalues 1 2 3 4 5 requestmore 5 awaitdone 5 timeunit seconds assertresult 1 2 3 4 5 6 7 8 9 10 
flowable range 1 4 test awaitcount 5 assertresult 1 2 3 4 
try flowable just 1 test assertvalueat 0 new predicate integer override public boolean test integer t throws exception throw new throw new runtimeexception should have thrown catch ex 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription ts assertvaluesonly ts onnext 5 ts assertvaluesonly 5 ts onnext 1 ts assertvaluesonly 5 1 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription ts assertvaluesonly ts onnext 5 ts assertvaluesonly 5 ts onnext 1 try ts assertvaluesonly 5 throw new runtimeexception catch assertionerror ex 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription ts oncomplete try ts assertvaluesonly throw new runtimeexception catch assertionerror ex 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription ts onerror new testexception try ts assertvaluesonly throw new runtimeexception catch assertionerror ex 
testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription ts onerror null ts assertfailure nullpointerexception class 
return timeout 
testsubscriberimpl integer ts new testsubscriberimpl ts onsubscribe new booleansubscription ts awaitcount 1 asserttrue ts istimeout 
try testsubscriber integer ts testsubscriber create ts onsubscribe new booleansubscription thread currentthread interrupt ts awaitcount 1 finally thread interrupted 
request 1 start 
errors add e 
completions 
integer tc new assertfalse tc isdisposed assertequals 0 tc start asserttrue tc values isempty asserttrue tc errors isempty flowable just 1 subscribe tc assertfalse tc isdisposed assertequals 1 tc start assertequals 1 tc values get 0 intvalue asserttrue tc errors isempty 
list throwable error testhelper trackpluginerrors try integer tc new tc onsubscribe new booleansubscription booleansubscription bs new booleansubscription tc onsubscribe bs asserttrue bs iscancelled assertequals 1 tc start testhelper asserterror error 0 class endconsumerhelper composemessage tc getclass getname finally rxjavaplugins reset 
integer tc new assertfalse tc isdisposed tc dispose asserttrue tc isdisposed booleansubscription bs new booleansubscription tc onsubscribe bs asserttrue bs iscancelled assertequals 0 tc start 
$EMPTY$
events add t 
events add t 
events add done 
requestearly sub new requestearly flowable range 1 10 subscribe sub assertequals collections emptylist sub events 
subscriber testhelper mocksubscriber 
return new serializedsubscriber subscriber 
onsubscribe new one two three flowable string w flowable unsafecreate onsubscribe subscriber string aw serializedsubscriber subscriber w subscribe aw onsubscribe waittofinish verify subscriber times 1 onnext one verify subscriber times 1 onnext two verify subscriber times 1 onnext three verify subscriber never onerror any throwable class verify subscriber times 1 oncomplete 
onsubscribe new one two three flowable string w flowable unsafecreate onsubscribe busysubscriber busysubscriber new busysubscriber subscriber string aw serializedsubscriber busysubscriber w subscribe aw onsubscribe waittofinish assertequals 3 busysubscriber onnextcount get assertfalse busysubscriber onerror asserttrue busysubscriber oncomplete asserttrue onsubscribe maxconcurrentthreads get 1 assertequals 1 busysubscriber maxconcurrentthreads get 
onsubscribe new one two three null flowable string w flowable unsafecreate onsubscribe busysubscriber busysubscriber new busysubscriber subscriber string aw serializedsubscriber busysubscriber w subscribe aw onsubscribe waittofinish busysubscriber terminalevent await system out println onsubscribe maxconcurrentthreads onsubscribe maxconcurrentthreads get subscriber maxconcurrentthreads busysubscriber maxconcurrentthreads get asserttrue busysubscriber onnextcount get 4 asserttrue busysubscriber onerror assertfalse busysubscriber oncomplete asserttrue onsubscribe maxconcurrentthreads get 1 assertequals 1 busysubscriber maxconcurrentthreads get 
int n 10 for int i 0 i n i onsubscribe new one two three null four five six seven eight nine flowable string w flowable unsafecreate onsubscribe busysubscriber busysubscriber new busysubscriber subscriber string aw serializedsubscriber busysubscriber w subscribe aw onsubscribe waittofinish system out println onsubscribe maxconcurrentthreads onsubscribe maxconcurrentthreads get subscriber maxconcurrentthreads busysubscriber maxconcurrentthreads get asserttrue onsubscribe maxconcurrentthreads get 1 assertequals 1 busysubscriber maxconcurrentthreads get system out println onnext count busysubscriber onnextcount get assertfalse busysubscriber oncomplete asserttrue busysubscriber onerror asserttrue busysubscriber onnextcount get 9 
executorservice tp executors newfixedthreadpool 20 list throwable errors testhelper trackpluginerrors try tw new subscriber string w serializedsubscriber new safesubscriber tw future f1 tp submit new onnextthread w future f2 tp submit new onnextthread w 5000 future f3 tp submit new onnextthread w future f4 tp submit new onnextthread w future f5 tp submit new onnextthread w future f6 tp submit new onnextthread w future f7 tp submit new onnextthread w 7500 future f8 tp submit new onnextthread w future f10 tp submit new completionthread w oncomplete f1 f2 f3 f4 try thread sleep 1 catch interruptedexception e future f11 tp submit new completionthread w oncomplete f4 f6 f7 future f12 tp submit new completionthread w oncomplete f4 f6 f7 future f13 tp submit new completionthread w oncomplete f4 f6 f7 future f14 tp submit new completionthread w oncomplete f4 f6 f7 future f15 tp submit new completionthread w onerror f1 f2 f3 f4 future f16 tp submit new completionthread w onerror f1 f2 f3 f4 future f17 tp submit new completionthread w onerror f1 f2 f3 f4 future f18 tp submit new completionthread w onerror f1 f2 f3 f4 waitonthreads f1 f2 f3 f4 f5 f6 f7 f8 f10 f11 f12 f13 f14 f15 f16 f17 f18 suppresswarnings unused int numnextevents tw assertevents null for int i 0 i errors size i testhelper assertundeliverable errors i runtimeexception class catch throwable e fail concurrency test failed e getmessage e printstacktrace finally tp shutdown try tp awaittermination 5000 timeunit milliseconds catch interruptedexception e e printstacktrace rxjavaplugins reset 
executorservice tp executors newfixedthreadpool 20 try tw new subscriber string w serializedsubscriber new safesubscriber tw w onsubscribe new booleansubscription future f1 tp submit new onnextthread w future f2 tp submit new onnextthread w 5000 future f3 tp submit new onnextthread w future f4 tp submit new onnextthread w future f5 tp submit new onnextthread w future f6 tp submit new onnextthread w future f7 tp submit new onnextthread w 7500 future f8 tp submit new onnextthread w future f10 tp submit new completionthread w oncomplete f1 f2 f3 f4 f5 f6 f7 f8 try thread sleep 1 catch interruptedexception e waitonthreads f1 f2 f3 f4 f5 f6 f7 f8 f10 int numnextevents tw assertevents null assertequals numnextevents catch throwable e fail concurrency test failed e getmessage e printstacktrace finally tp shutdown try tp awaittermination timeunit milliseconds catch interruptedexception e e printstacktrace 
executorservice tp1 executors newfixedthreadpool 1 executorservice tp2 executors newfixedthreadpool 1 try int n 10 for int i 0 i n i final countdownlatch firstonnext new countdownlatch 1 final countdownlatch onnextcount new countdownlatch 2 final countdownlatch latch new countdownlatch 1 final countdownlatch running new countdownlatch 2 testsubscriberex string ts new testsubscriberex new defaultsubscriber string override public void oncomplete override public void onerror throwable e override public void onnext string t firstonnext countdown try latch await catch interruptedexception e subscriber string subscriber serializedsubscriber ts future f1 tp1 submit new onnextthread subscriber 1 onnextcount running future f2 tp2 submit new onnextthread subscriber 1 onnextcount running running await firstonnext await thread t1 ts lastthread system out println first onnext on thread t1 latch countdown waitonthreads f1 f2 assertequals 2 ts values size thread t2 ts lastthread system out println second onnext on thread t2 assertsame t1 t2 system out println ts values subscriber oncomplete system out println ts values finally tp1 shutdown tp2 shutdown 
$EMPTY$
$EMPTY$
firstonnext countdown try latch await catch interruptedexception e 
testsubscriber string ts new testsubscriber new defaultsubscriber string override public void oncomplete override public void onerror throwable e override public void onnext string t try thread sleep 1 catch interruptedexception e final subscriber string subscriber serializedsubscriber ts atomicinteger p1 new atomicinteger atomicinteger p2 new atomicinteger subscriber onsubscribe new booleansubscription resourcesubscriber string as1 new resourcesubscriber string override public void onnext string t subscriber onnext t override public void onerror throwable t rxjavaplugins onerror t override public void oncomplete resourcesubscriber string as2 new resourcesubscriber string override public void onnext string t subscriber onnext t override public void onerror throwable t rxjavaplugins onerror t override public void oncomplete infinite p1 subscribe as1 infinite p2 subscribe as2 thread sleep 100 system out println p1 p1 get p2 p2 get should be close to each other unless we have thread starvation assertequals p1 get p2 get as1 dispose as2 dispose 
$EMPTY$
$EMPTY$
try thread sleep 1 catch interruptedexception e 
return flowable unsafecreate new publisher string override public void subscribe subscriber super string s booleansubscription bs new booleansubscription s onsubscribe bs while bs iscancelled s onnext onnext produced incrementandget subscribeon schedulers newthread 
booleansubscription bs new booleansubscription s onsubscribe bs while bs iscancelled s onnext onnext produced incrementandget 
if running null running countdown for int i 0 i numstringstosend i subscriber onnext thread currentthread getid i if latch null latch countdown produced incrementandget 
if waitonthese null for future f waitonthese try f get catch throwable e system err println error while waiting on future in completionthread if event onerror subscriber onerror new runtimeexception mocked exception else if event oncomplete subscriber oncomplete else throw new expecting either onerror or oncomplete 
subscriber onsubscribe new booleansubscription system out println subscribed to t new thread new runnable override public void run try system out println running thread for string s values system out println onnext s subscriber onnext s subscriber oncomplete catch throwable e throw new runtimeexception e system out println starting thread t start system out println done starting thread 
try t join catch interruptedexception e throw new runtimeexception e 
try t join catch interruptedexception e throw new runtimeexception e 
int concurrentthreads threadsrunning get int maxthreads maxconcurrentthreads get if concurrentthreads maxthreads maxconcurrentthreads compareandset maxthreads concurrentthreads if concurrentthreads 1 new runtimeexception should not be greater than 1 printstacktrace 
list throwable errors testhelper trackpluginerrors try final atomicreference subscriber integer serial new atomicreference testsubscriber integer ts new testsubscriber integer override public void onnext integer v serial get onerror new testexception serial get onerror new testexception super onnext v serializedsubscriber integer sobs new serializedsubscriber ts sobs onsubscribe new booleansubscription serial set sobs sobs onnext 1 ts assertvalue 1 ts asserterror testexception class testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
final atomicreference subscriber integer serial new atomicreference testsubscriber integer ts new testsubscriber integer override public void onnext integer v serial get oncomplete serial get oncomplete super onnext v serializedsubscriber integer sobs new serializedsubscriber ts sobs onsubscribe new booleansubscription serial set sobs sobs onnext 1 ts assertvalue 1 ts assertcomplete ts assertnoerrors 
testsubscriber integer ts new testsubscriber serializedsubscriber integer so new serializedsubscriber ts booleansubscription bs new booleansubscription so onsubscribe bs ts cancel asserttrue bs iscancelled 
for int i 0 i testhelper race default loops i testsubscriber integer ts new testsubscriber final serializedsubscriber integer so new serializedsubscriber ts booleansubscription bs new booleansubscription so onsubscribe bs runnable r new runnable override public void run so oncomplete testhelper race r r ts awaitdone 5 timeunit seconds assertresult 
for int i 0 i testhelper race default loops i testsubscriber integer ts new testsubscriber final serializedsubscriber integer so new serializedsubscriber ts booleansubscription bs new booleansubscription so onsubscribe bs runnable r1 new runnable override public void run so oncomplete runnable r2 new runnable override public void run so onnext 1 testhelper race r1 r2 ts awaitdone 5 timeunit seconds assertnoerrors assertcomplete asserttrue ts values size 1 
for int i 0 i testhelper race default loops i testsubscriber integer ts new testsubscriber final serializedsubscriber integer so new serializedsubscriber ts booleansubscription bs new booleansubscription so onsubscribe bs final throwable ex new testexception runnable r1 new runnable override public void run so onerror ex runnable r2 new runnable override public void run so onnext 1 testhelper race r1 r2 ts awaitdone 5 timeunit seconds asserterror ex assertnotcomplete asserttrue ts values size 1 
for int i 0 i testhelper race default loops i testsubscriber integer ts new testsubscriber final serializedsubscriber integer so new serializedsubscriber ts true booleansubscription bs new booleansubscription so onsubscribe bs final throwable ex new testexception runnable r1 new runnable override public void run so onerror ex runnable r2 new runnable override public void run so onnext 1 testhelper race r1 r2 ts awaitdone 5 timeunit seconds asserterror ex assertnotcomplete asserttrue ts values size 1 
list throwable error testhelper trackpluginerrors try testsubscriber integer ts new testsubscriber final serializedsubscriber integer so new serializedsubscriber ts so onsubscribe new booleansubscription booleansubscription bs new booleansubscription so onsubscribe bs asserttrue bs iscancelled testhelper asserterror error 0 class subscription already set finally rxjavaplugins reset 
for int i 0 i testhelper race default loops i list throwable errors testhelper trackpluginerrors try testsubscriberex integer ts new testsubscriberex final serializedsubscriber integer so new serializedsubscriber ts booleansubscription bs new booleansubscription so onsubscribe bs final throwable ex new testexception runnable r1 new runnable override public void run so onerror ex runnable r2 new runnable override public void run so oncomplete testhelper race r1 r2 ts awaitdone 5 timeunit seconds if ts completions 0 ts assertresult testhelper assertundeliverable errors 0 testexception class else ts assertfailure testexception class asserterror ex asserttrue errors errors isempty finally rxjavaplugins reset 
testsubscriberex integer ts new testsubscriberex final serializedsubscriber integer so new serializedsubscriber ts so onsubscribe new booleansubscription so onnext null ts nullpointerexception class exceptionhelper nullwarning onnext called with a null value 
atomicreference serializedsubscriber integer ssref new atomicreference testsubscriberex integer ts new testsubscriberex integer override public void onnext integer t super onnext t ssref get onnext 2 ssref get onerror new testexception final serializedsubscriber integer so new serializedsubscriber ts true ssref set so booleansubscription bs new booleansubscription so onsubscribe bs so onnext 1 ts assertfailure testexception class 1 2 
spscarrayqueue object q new spscarrayqueue 16 q offer null 
spsclinkedarrayqueue object q new spsclinkedarrayqueue 16 q offer null 
mpsclinkedqueue object q new mpsclinkedqueue q offer null 
spscarrayqueue object q new spscarrayqueue 16 q offer 1 2 assertequals 1 q poll assertequals 2 q poll assertnull q poll 
spsclinkedarrayqueue object q new spsclinkedarrayqueue 16 q offer 1 2 assertequals 1 q poll assertequals 2 q poll assertnull q poll 
mpsclinkedqueue object q new mpsclinkedqueue q offer 1 2 assertequals 1 q poll assertequals 2 q poll assertnull q poll 
spscarrayqueue integer q new spscarrayqueue 8 asserttrue q offer 1 2 asserttrue q offer 3 4 asserttrue q offer 5 6 asserttrue q offer 7 assertfalse q offer 8 9 assertfalse q offer 9 10 
spsclinkedarrayqueue integer q new spsclinkedarrayqueue 8 asserttrue q offer 1 2 asserttrue q offer 3 4 asserttrue q offer 5 6 asserttrue q offer 7 8 for int i 0 i 8 i assertequals i 1 q peek intvalue assertequals i 1 q poll intvalue assertnull q peek assertnull q poll 
final mpsclinkedqueue integer q new mpsclinkedqueue final atomicinteger c new atomicinteger 3 thread t1 new thread new runnable int i override public void run c decrementandget while c get 0 while i q offer i t1 start thread t2 new thread new runnable int i override public void run c decrementandget while c get 0 while i q offer i t2 start runnable r3 new runnable int i override public void run c decrementandget while c get 0 while i 0 q poll r3 run t1 join t2 join 
spsclinkedarrayqueue integer q new spsclinkedarrayqueue 16 atomicreferencearray object ara q producerbuffer for int i 0 i 20 i q offer i assertnotnull ara get 16 for int i 0 i 20 i assertequals i q poll intvalue assertnull ara get 16 
try rxjavaplugins seterrorhandler throwable if throwable instanceof throwable printstacktrace thread currentthread thread currentthread currentthread uncaughtexception currentthread throwable base evaluate finally rxjavaplugins seterrorhandler null 
if description null description getannotation class null return new base else return base 
observable integer oi observable fromiterable arrays aslist 1 2 testobserverex integer subscriber new testobserverex oi subscribe subscriber subscriber assertvalues 1 2 subscriber assertvaluecount 2 subscriber assertterminated 
assertthrows assertionerror class observable integer oi observable fromiterable arrays aslist 1 2 testobserverex integer subscriber new testobserverex oi subscribe subscriber subscriber assertvalue 1 subscriber assertvaluecount 2 subscriber assertterminated 
assertthrows assertionerror class observable integer oi observable fromiterable arrays aslist 1 2 testobserverex integer subscriber new testobserverex oi subscribe subscriber subscriber assertvalues 1 3 subscriber assertvaluecount 2 subscriber assertterminated 
observable integer oi observable fromiterable arrays aslist 1 2 testobserverex integer subscriber new testobserverex oi subscribe subscriber subscriber assertnever 3 subscriber assertvaluecount 2 subscriber assertterminated 
assertthrows assertionerror class observable integer oi observable fromiterable arrays aslist 1 2 testobserverex integer subscriber new testobserverex oi subscribe subscriber subscriber assertvalues 1 2 subscriber assertnever 2 subscriber assertvaluecount 2 subscriber assertterminated 
assertthrows assertionerror class testobserverex integer to new testobserverex observable just 1 2 subscribe to to assertvalues 1 2 to assertnever new predicate integer override public boolean test final integer o throws exception return o 1 
testobserverex integer to new testobserverex observable just 2 3 subscribe to to assertnever new predicate integer override public boolean test final integer o throws exception return o 1 
assertthrows assertionerror class publishsubject integer p publishsubject create testobserverex integer subscriber new testobserverex p subscribe subscriber p onnext 1 p onnext 2 subscriber assertvalues 1 2 subscriber assertvaluecount 2 subscriber assertterminated 
observable integer oi observable fromiterable arrays aslist 1 2 observer integer mocksubscriber testhelper mockobserver oi subscribe new testobserverex mocksubscriber inorder inorder inorder mocksubscriber inorder verify mocksubscriber times 1 onnext 1 inorder verify mocksubscriber times 1 onnext 2 inorder verify mocksubscriber times 1 oncomplete inorder 
observable integer oi observable fromiterable arrays aslist 1 2 3 4 5 6 7 8 9 take 2 observer integer mocksubscriber testhelper mockobserver oi subscribe new testobserverex mocksubscriber inorder inorder inorder mocksubscriber inorder verify mocksubscriber times 1 onnext 1 inorder verify mocksubscriber times 1 onnext 2 inorder verify mocksubscriber times 1 oncomplete inorder 
observable error new runtimeexception subscribe new testobserverex 
testobserverex integer to new testobserverex to onnext 1 try to assertvalue integer null catch assertionerror ex return fail null element check assertion didn t happen 
testobserverex integer to new testobserverex to onnext null try to assertvalue 1 catch assertionerror ex return fail null element check assertion didn t happen 
testobserverex integer to new testobserverex to onerror new testexception to onerror new testexception try to assertterminated catch assertionerror ex return fail failed to report multiple onerror terminal events 
testobserverex integer to new testobserverex to oncomplete to oncomplete try to assertterminated catch assertionerror ex return fail failed to report multiple oncomplete terminal events 
testobserverex integer to new testobserverex to onerror new testexception to oncomplete try to assertterminated catch assertionerror ex return fail failed to report multiple kinds of events 
testobserverex integer to1 new testobserverex testobserverex integer to new testobserverex to1 to assertnotsubscribed assertfalse to hassubscription to onsubscribe disposable empty try to assertnotsubscribed throw new runtimeexception should have thrown catch assertionerror ex asserttrue to hassubscription assertfalse to isdisposed to onnext 1 to onerror new testexception to oncomplete to1 assertvalue 1 asserterror testexception class assertcomplete to dispose asserttrue to isdisposed assertsame thread currentthread to lastthread try to assertnovalues throw new runtimeexception should have thrown catch assertionerror exc try to assertvaluecount 0 throw new runtimeexception should have thrown catch assertionerror exc to assertvaluesequence collections singletonlist 1 try to assertvaluesequence collections singletonlist 2 throw new runtimeexception should have thrown catch assertionerror exc 
testobserverex integer to new testobserverex try to asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex try to asserterror new testexception throw new runtimeexception should have thrown catch assertionerror ex try to asserterror functions throwable alwaystrue throw new runtimeexception should have thrown catch assertionerror ex try to asserterrormessage throw new runtimeexception should have thrown catch assertionerror exc try to assertsubscribed throw new runtimeexception should have thrown catch assertionerror exc try to assertterminated throw new runtimeexception should have thrown catch assertionerror exc to onsubscribe disposable empty to assertsubscribed to assertnoerrors testexception ex new testexception forced failure to onerror ex to asserterror ex to asserterror testexception class to asserterror functions throwable alwaystrue to asserterror new predicate throwable override public boolean test throwable t throws exception return t getmessage null t getmessage contains forced to asserterrormessage forced failure try to asserterrormessage throw new runtimeexception should have thrown catch assertionerror exc try to asserterror new runtimeexception throw new runtimeexception should have thrown catch assertionerror exc try to asserterror ioexception class throw new runtimeexception should have thrown catch assertionerror exc try to asserterror functions throwable alwaysfalse throw new runtimeexception should have thrown catch assertionerror exc try to assertnoerrors throw new runtimeexception should have thrown catch assertionerror exc to assertterminated to assertvaluecount 0 to assertnovalues 
assertequals 1 testobserverex emptyobserver values length assertnotnull testobserverex emptyobserver valueof instance 
assertequals null testobserver valueandclass null assertequals 1 class integer testobserver valueandclass 1 
testobserverex integer to new testobserverex to onsubscribe disposable empty to onerror new testexception forced failure to assertfailure testexception class to assertfailure functions throwable alwaystrue to testexception class forced failure to onnext 1 to assertfailure testexception class 1 to assertfailure functions throwable alwaystrue 1 to testexception class forced failure 1 
testobserverex integer to new testobserverex to onsubscribe disposable empty to assertnotfuseable try to assertfuseable throw new runtimeexception should have thrown catch assertionerror ex try to assertfusionmode queuefuseable sync throw new runtimeexception should have thrown catch assertionerror ex to new testobserverex to setinitialfusionmode queuefuseable any to onsubscribe new scalardisposable to 1 to assertfuseable to assertfusionmode queuefuseable sync try to assertfusionmode queuefuseable none throw new runtimeexception should have thrown catch assertionerror ex try to assertnotfuseable throw new runtimeexception should have thrown catch assertionerror ex 
testobserverex integer to new testobserverex to assertnotterminated to onerror null try to assertnotterminated throw new runtimeexception should have thrown catch assertionerror ex 
testobserverex integer to new testobserverex to onsubscribe disposable empty to oncomplete to assertresult try to assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex to onnext 1 to assertresult 1 try to assertresult 2 throw new runtimeexception should have thrown catch assertionerror ex try to assertresult throw new runtimeexception should have thrown catch assertionerror ex 
testobserverex integer to new testobserverex to onsubscribe disposable empty assertfalse to await 100 timeunit milliseconds to awaitdone 100 timeunit milliseconds asserttrue to isdisposed to assertnotterminated to oncomplete asserttrue to await 100 timeunit milliseconds to await to awaitdone 5 timeunit seconds to assertnoerrors assertcomplete final testobserverex integer to1 new testobserverex to1 onsubscribe disposable empty schedulers single scheduledirect new runnable override public void run to1 oncomplete 200 timeunit milliseconds to1 await 
testobserverex integer to new testobserverex to onsubscribe disposable empty assertequals 0 to errors size to onerror new testexception assertequals 1 to errors size testhelper asserterror to errors 0 testexception class 
testobserverex integer to new testobserverex to onsubscribe disposable empty to assertvaluecount 0 assertequals collections emptylist to values to onnext 1 assertequals collections singletonlist 1 to values to dispose asserttrue to isdisposed to assertvalue 1 to oncomplete 
assertequals none testobserverex fusionmodetostring queuefuseable none assertequals sync testobserverex fusionmodetostring queuefuseable sync assertequals async testobserverex fusionmodetostring queuefuseable async assertequals unknown 100 testobserverex fusionmodetostring 100 
testobserverex integer to new testobserverex to onsubscribe disposable empty to assertnotcomplete to oncomplete try to assertnotcomplete throw new runtimeexception should have thrown catch throwable ex to assertterminated to oncomplete try to assertcomplete throw new runtimeexception should have thrown catch throwable ex try to assertterminated throw new runtimeexception should have thrown catch throwable ex try to assertnotcomplete throw new runtimeexception should have thrown catch throwable ex 
testobserverex integer to new testobserverex to onsubscribe disposable empty try to assertvalue 1 throw new runtimeexception should have thrown catch throwable ex to onnext 1 to assertvalue 1 try to assertvalue 2 throw new runtimeexception should have thrown catch throwable ex to onnext 2 try to assertvalue 1 throw new runtimeexception should have thrown catch throwable ex 
testobserverex integer to new testobserverex to onnext 1 to asserterror class to new testobserverex to onsubscribe disposable empty to onnext null to assertfailure nullpointerexception class integer null 
testobserverex integer to new testobserverex to onsubscribe disposable empty to assertnotterminated to onerror new testexception to assertterminated to onerror new ioexception try to assertterminated throw new runtimeexception should have thrown catch assertionerror ex try to asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex to new testobserverex to onsubscribe disposable empty to onerror new testexception to oncomplete try to assertterminated throw new runtimeexception should have thrown catch assertionerror ex 
testobserverex integer to new testobserverex to onsubscribe null to asserterror nullpointerexception class to new testobserverex to onsubscribe disposable empty disposable d1 disposable empty to onsubscribe d1 asserttrue d1 isdisposed to asserterror class to new testobserverex to dispose d1 disposable empty to onsubscribe d1 asserttrue d1 isdisposed 
testobserverex integer to new testobserverex to onsubscribe disposable empty to onnext 1 to onnext 2 try to assertvaluesequence collections integer emptylist throw new runtimeexception should have thrown catch assertionerror expected asserttrue expected getmessage expected getmessage startswith more values received than expected 0 try to assertvaluesequence collections singletonlist 1 throw new runtimeexception should have thrown catch assertionerror expected asserttrue expected getmessage expected getmessage startswith more values received than expected 1 to assertvaluesequence arrays aslist 1 2 try to assertvaluesequence arrays aslist 1 2 3 throw new runtimeexception should have thrown catch assertionerror expected asserttrue expected getmessage expected getmessage startswith fewer values received than expected 2 
testobserverex integer to new testobserverex try to assertempty throw new runtimeexception should have thrown catch assertionerror ex to onsubscribe disposable empty to assertempty to onnext 1 try to assertempty throw new runtimeexception should have thrown catch assertionerror ex 
testobserverex integer to new testobserverex thread currentthread interrupt try to awaitdone 5 timeunit seconds catch runtimeexception ex asserttrue ex tostring ex getcause instanceof interruptedexception 
testobserverex integer to new testobserverex to assertnotsubscribed to errors add new testexception try to assertnotsubscribed throw new runtimeexception should have thrown catch assertionerror ex 
testobserverex integer to new testobserverex testexception e new testexception to errors add e to errors add new testexception try to asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex try to asserterror e throw new runtimeexception should have thrown catch assertionerror ex try to asserterror functions throwable alwaystrue throw new runtimeexception should have thrown catch assertionerror ex try to asserterrormessage throw new runtimeexception should have thrown catch assertionerror ex 
testobserverex object to new testobserverex to onerror new runtimeexception try to asserterror new predicate throwable override public boolean test throwable throwable throws exception throw new testexception catch testexception ex return fail error in predicate but not thrown 
testobserverex integer to new testobserverex to onsubscribe disposable empty try to assertcomplete throw new runtimeexception should have thrown catch assertionerror ex to oncomplete to assertcomplete to oncomplete try to assertcomplete throw new runtimeexception should have thrown catch assertionerror ex 
testobserverex integer to new testobserverex to oncomplete to asserterror class 
testobserverex integer to new testobserverex new observer integer override public void onsubscribe disposable d override public void onnext integer value override public void onerror throwable e throw new testexception override public void oncomplete throw new testexception to onsubscribe disposable empty try to oncomplete throw new runtimeexception should have thrown catch testexception ex to assertterminated 
testobserverex integer to new testobserverex new observer integer override public void onsubscribe disposable d override public void onnext integer value override public void onerror throwable e throw new testexception override public void oncomplete throw new testexception to onsubscribe disposable empty try to onerror new ioexception throw new runtimeexception should have thrown catch testexception ex to assertterminated 
testobserverex object to new testobserverex to setinitialfusionmode queuefuseable sync observable range 1 5 map new function integer object override public object apply integer v throws exception throw new testexception subscribe to to assertsubscribed assertfuseable assertfusionmode queuefuseable sync assertfailure testexception class 
testobserverex object to new testobserverex to setinitialfusionmode queuefuseable any unicastsubject integer us unicastsubject create us map new function integer object override public object apply integer v throws exception throw new testexception subscribe to us onnext 1 to assertsubscribed assertfuseable assertfusionmode queuefuseable async assertfailure testexception class 
assertfalse observable just 1 test assertresult 1 isdisposed 
assertfalse observable error new testexception test assertfailure testexception class isdisposed 
testobserverex object to new testobserverex to setinitialfusionmode queuefuseable any unicastsubject integer us unicastsubject create us subscribe to us onnext 1 us oncomplete to assertsubscribed assertfuseable assertfusionmode queuefuseable async assertresult 1 
assertthrows no values assertionerror class testobserverex object to new testobserverex observable empty subscribe to to assertvalue new predicate object override public boolean test final object o throws exception return false 
testobserverex integer to new testobserverex observable just 1 subscribe to to assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
assertthrows value not present assertionerror class testobserverex integer to new testobserverex observable just 1 subscribe to to assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
assertthrows value present but other values as well assertionerror class testobserverex integer to new testobserverex observable just 1 2 subscribe to to assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
assertthrows no values assertionerror class testobserverex object to new testobserverex observable empty subscribe to to assertvalueat 0 new predicate object override public boolean test final object o throws exception return false 
testobserverex integer to new testobserverex observable just 1 2 subscribe to to assertvalueat 1 new predicate integer override public boolean test final integer o throws exception return o 2 
assertthrows value not present assertionerror class testobserverex integer to new testobserverex observable just 1 2 3 subscribe to to assertvalueat 2 new predicate integer override public boolean test final integer o throws exception return o 3 
assertthrows invalid index 2 latch 0 values 2 errors 0 completions 1 assertionerror class testobserverex integer to new testobserverex observable just 1 2 subscribe to to assertvalueat 2 new predicate integer override public boolean test final integer o throws exception return o 1 
assertthrows no values assertionerror class testobserverex object to new testobserverex observable empty subscribe to to assertvalueat 0 a 
testobserverex string to new testobserverex observable just a b subscribe to to assertvalueat 1 b 
assertthrows nexpected b class string ngot c class string latch 0 values 3 errors 0 completions 1 assertionerror class testobserverex string to new testobserverex observable just a b c subscribe to to assertvalueat 2 b 
assertthrows invalid index 2 latch 0 values 2 errors 0 completions 1 assertionerror class testobserverex string to new testobserverex observable just a b subscribe to to assertvalueat 2 c 
try for int i 1 i 3 i observable just i test withtag testing with item i assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex asserttrue ex tostring ex tostring contains testing with item 2 
testobserverex integer to new testobserverex to onsubscribe disposable empty to assertvaluesonly to onnext 5 to assertvaluesonly 5 to onnext 1 to assertvaluesonly 5 1 
testobserverex integer to new testobserverex to onsubscribe disposable empty to assertvaluesonly to onnext 5 to assertvaluesonly 5 to onnext 1 try to assertvaluesonly 5 throw new runtimeexception catch assertionerror ex 
testobserverex integer to new testobserverex to onsubscribe disposable empty to oncomplete try to assertvaluesonly throw new runtimeexception catch assertionerror ex 
testobserverex integer to new testobserverex to onsubscribe disposable empty to onerror new testexception try to assertvaluesonly throw new runtimeexception catch assertionerror ex 
$EMPTY$
return false 
return this now unit 
return new timesteppingworker 
if stepenabled return time return time 
lastthread thread currentthread if s null errors add new nullpointerexception onsubscribe received a null subscription return if upstream compareandset null s s cancel if upstream get subscriptionhelper cancelled errors add new onsubscribe received multiple subscriptions s return if initialfusionmode 0 if s instanceof queuesubscription qs queuesubscription t s int m qs requestfusion initialfusionmode m if m queuefuseable sync true lastthread thread currentthread try t t while t qs poll null values add t completions catch throwable ex errors add ex return downstream onsubscribe s long mr missedrequested getandset 0l if mr 0l s request mr onstart 
$EMPTY$
if true if upstream get null errors add new nullpointerexception onsubscribe not called in proper order try lastthread thread currentthread errors add t if t null errors add new onerror received a null throwable downstream onerror t finally done countdown 
if true if upstream get null errors add new onsubscribe not called in proper order try lastthread thread currentthread completions downstream oncomplete finally done countdown 
if cancelled cancelled true subscriptionhelper cancel upstream 
return cancelled 
cancel 
return cancelled 
return upstream get null 
if upstream get null throw fail not subscribed return this 
if upstream get null throw fail subscribed else if errors isempty throw fail not subscribed but errors found return this 
if qs null throw new assertionerror upstream is not fuseable return this 
if qs null throw new assertionerror upstream is fuseable return this 
$EMPTY$
$EMPTY$
$EMPTY$
$EMPTY$
return lastthread 
int s values size for int i 0 i s i t v this values get i try if valuepredicate test v throw fail value at position i matches predicate valuepredicate tostring which was not expected catch throwable ex throw exceptionhelper wraporthrow ex return u this 
if done getcount 0 throw fail subscriber still running long c completions if c 1 throw fail terminated with multiple completions c int s errors size if s 1 throw fail terminated with multiple errors s if c 0 s 0 throw fail terminated with multiple completions and errors c return u this 
if done getcount 0 throw fail subscriber terminated return u this 
int s errors size if s 0 throw fail no errors else if s 1 throwable e errors get 0 string errormessage e getmessage if objects equals message errormessage throw fail nexpected message ngot errormessage error message differs else throw fail multiple errors return u this 
return timeout 
timeout false return u this 
if timeout throw fail no timeout return u this 
if timeout throw fail timeout return u this 
return errors 
return done getcount 0 
return completions 
return fail message 
flowable integer oi flowable fromiterable arrays aslist 1 2 testsubscriberex integer ts new testsubscriberex oi subscribe ts ts assertvalues 1 2 ts assertvaluecount 2 ts assertterminated 
assertthrows assertionerror class flowable integer oi flowable fromiterable arrays aslist 1 2 testsubscriberex integer ts new testsubscriberex oi subscribe ts ts assertvalues 1 ts assertvaluecount 2 ts assertterminated 
assertthrows assertionerror class flowable integer oi flowable fromiterable arrays aslist 1 2 testsubscriberex integer ts new testsubscriberex oi subscribe ts ts assertvalues 1 3 ts assertvaluecount 2 ts assertterminated 
flowable integer oi flowable fromiterable arrays aslist 1 2 testsubscriberex integer ts new testsubscriberex oi subscribe ts ts assertnever 3 ts assertvaluecount 2 ts assertterminated 
assertthrows assertionerror class flowable integer oi flowable fromiterable arrays aslist 1 2 testsubscriberex integer ts new testsubscriberex oi subscribe ts ts assertvalues 1 2 ts assertnever 2 ts assertvaluecount 2 ts assertterminated 
assertthrows assertionerror class testsubscriberex integer ts new testsubscriberex flowable just 1 2 subscribe ts ts assertvalues 1 2 ts assertnever new predicate integer override public boolean test final integer o throws exception return o 1 
testsubscriberex integer ts new testsubscriberex flowable just 2 3 subscribe ts ts assertnever new predicate integer override public boolean test final integer o throws exception return o 1 
assertthrows assertionerror class publishprocessor integer p publishprocessor create testsubscriberex integer ts new testsubscriberex p subscribe ts p onnext 1 p onnext 2 ts assertvalues 1 2 ts assertvaluecount 2 ts assertterminated 
flowable integer oi flowable fromiterable arrays aslist 1 2 subscriber integer mocksubscriber testhelper mocksubscriber oi subscribe new testsubscriberex mocksubscriber inorder inorder inorder mocksubscriber inorder verify mocksubscriber times 1 onnext 1 inorder verify mocksubscriber times 1 onnext 2 inorder verify mocksubscriber times 1 oncomplete inorder 
flowable integer oi flowable fromiterable arrays aslist 1 2 3 4 5 6 7 8 9 take 2 subscriber integer mocksubscriber testhelper mocksubscriber oi subscribe new testsubscriberex mocksubscriber inorder inorder inorder mocksubscriber inorder verify mocksubscriber times 1 onnext 1 inorder verify mocksubscriber times 1 onnext 2 inorder verify mocksubscriber times 1 oncomplete inorder 
runtimeexception e new runtimeexception oops testsubscriberex object subscriber new testsubscriberex flowable error e subscribe subscriber subscriber asserterror e 
testsubscriberex object ts new testsubscriberex final atomicboolean unsub new atomicboolean false flowable just 1 dooncancel new action override public void run unsub set true delay 1000 timeunit milliseconds subscribe ts ts awaitdone 100 timeunit milliseconds ts dispose asserttrue unsub get 
testsubscriberex integer ts new testsubscriberex null ts oncomplete 
testsubscriberex integer ts new testsubscriberex null ts oncomplete 
testsubscriberex integer ts new testsubscriberex null 0l ts oncomplete 
testsubscriberex integer ts0 new testsubscriberex ts0 onsubscribe emptysubscription instance testsubscriberex integer ts new testsubscriberex ts0 ts oncomplete ts0 assertterminated 
testsubscriberex integer ts1 new testsubscriberex testsubscriberex integer ts2 new testsubscriberex ts1 ts2 oncomplete ts1 assertcomplete 
testsubscriberex integer ts1 new testsubscriberex testsubscriberex integer ts2 new testsubscriberex ts1 0l ts2 oncomplete ts1 assertcomplete 
testsubscriberex integer ts new testsubscriberex assertfalse ts iscancelled 
testsubscriberex integer ts new testsubscriberex ts onerror new testexception try ts assertnoerrors catch assertionerror ex return fail error present but no assertion error 
testsubscriberex integer ts new testsubscriberex try ts assertcomplete catch assertionerror ex return fail not completed and no assertion error 
testsubscriberex integer ts new testsubscriberex ts oncomplete ts oncomplete try ts assertcomplete catch assertionerror ex return fail multiple completions and no assertion error 
testsubscriberex integer ts new testsubscriberex ts oncomplete try ts assertnotcomplete catch assertionerror ex return fail completed and no assertion error 
testsubscriberex integer ts new testsubscriberex ts oncomplete ts oncomplete try ts assertnotcomplete catch assertionerror ex return fail multiple completions and no assertion error 
testsubscriberex integer ts new testsubscriberex ts onsubscribe emptysubscription instance ts onerror new testexception ts onerror new testexception try ts assertnoerrors catch assertionerror ex throwable e ex getcause if e instanceof compositeexception fail multiple error present but the reported error doesn t have a composite cause compositeexception ce compositeexception e if ce size 2 ce printstacktrace assertequals 2 ce size return fail multiple error present but no assertion error 
testsubscriberex integer ts new testsubscriberex ts onsubscribe emptysubscription instance ts onerror new testexception ts onerror new testexception try ts asserterror testexception class catch assertionerror ex throwable e ex getcause if e instanceof compositeexception fail multiple error present but the reported error doesn t have a composite cause compositeexception ce compositeexception e assertequals 2 ce size return fail multiple error present but no assertion error 
testsubscriberex integer ts new testsubscriberex ts onsubscribe emptysubscription instance ts onerror new testexception ts onerror new testexception try ts asserterror new testexception catch assertionerror ex throwable e ex getcause if e instanceof compositeexception fail multiple error present but the reported error doesn t have a composite cause compositeexception ce compositeexception e assertequals 2 ce size return fail multiple error present but no assertion error 
testsubscriberex integer ts new testsubscriberex ts onsubscribe emptysubscription instance ts onerror new testexception ts onerror new testexception try ts asserterror functions throwable alwaystrue catch assertionerror ex throwable e ex getcause if e instanceof compositeexception fail multiple error present but the reported error doesn t have a composite cause compositeexception ce compositeexception e assertequals 2 ce size return fail multiple error present but no assertion error 
testsubscriberex integer ts new testsubscriberex ts onerror new testexception try ts asserterror new testexception catch assertionerror ex return fail different error present but no assertion error 
testsubscriberex integer ts new testsubscriberex ts onerror new runtimeexception try ts asserterror new testexception catch assertionerror ex return fail different error present but no assertion error 
testsubscriberex integer ts new testsubscriberex ts onerror new runtimeexception try ts asserterror testexception class catch assertionerror ex return fail different error present but no assertion error 
testsubscriberex integer ts new testsubscriberex ts onerror new runtimeexception try ts asserterror functions throwable alwaysfalse catch assertionerror ex return fail different error present but no assertion error 
testsubscriberex integer ts new testsubscriberex ts onerror new runtimeexception try ts asserterror new predicate throwable override public boolean test throwable throwable throws exception throw new testexception catch testexception ex return fail error in predicate but not thrown 
testsubscriberex integer ts new testsubscriberex try ts asserterror testexception class catch assertionerror ex return fail no present but no assertion error 
testsubscriberex integer ts new testsubscriberex try ts asserterror new testexception catch assertionerror ex return fail no present but no assertion error 
testsubscriberex integer ts new testsubscriberex try ts asserterror functions throwable alwaystrue catch assertionerror ex return fail no present but no assertion error 
testsubscriberex integer ts new testsubscriberex final thread t0 thread currentthread worker w schedulers computation createworker try w schedule new runnable override public void run t0 interrupt 200 timeunit milliseconds try if ts await 5 timeunit seconds fail did not interrupt wait catch interruptedexception expected finally w dispose 
testsubscriberex integer ts new testsubscriberex final thread t0 thread currentthread worker w schedulers computation createworker try w schedule new runnable override public void run t0 interrupt 200 timeunit milliseconds try if ts await 5 timeunit seconds fail did not interrupt wait catch interruptedexception expected finally thread interrupted w dispose 
testsubscriberex integer ts new testsubscriberex final thread t0 thread currentthread worker w schedulers computation createworker try w schedule new runnable override public void run t0 interrupt 200 timeunit milliseconds try ts awaitdone 5 timeunit seconds catch runtimeexception allowed asserttrue allowed tostring allowed getcause instanceof interruptedexception ts dispose if ts iscancelled fail did not unsubscribe finally w dispose 
testsubscriberex integer ts new testsubscriberex ts oncomplete try ts assertnotterminated throw new runtimeexception failed to report there were terminal event s catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts onerror new testexception try ts assertnotterminated throw new runtimeexception failed to report there were terminal event s catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts oncomplete ts onerror new testexception try ts assertnotterminated throw new runtimeexception failed to report there were terminal event s catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts onsubscribe emptysubscription instance ts onerror new testexception ts onerror new testexception try ts assertnotterminated throw new runtimeexception failed to report there were terminal event s catch assertionerror ex throwable e ex getcause if e instanceof compositeexception fail multiple error present but the reported error doesn t have a composite cause compositeexception ce compositeexception e assertequals 2 ce size 
testsubscriberex integer ts new testsubscriberex ts onnext 1 try ts assertnovalues throw new runtimeexception failed to report there were values catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts onnext 1 ts onnext 2 try ts assertvaluecount 3 throw new runtimeexception failed to report there were values catch assertionerror ex 
testsubscriberex integer ts0 new testsubscriberex integer override public void oncomplete throw new testexception testsubscriberex integer ts new testsubscriberex ts0 try ts oncomplete catch testexception ex ts awaitdone 5 timeunit seconds 
testsubscriberex integer ts0 new testsubscriberex integer override public void onerror throwable e throw new testexception testsubscriberex integer ts new testsubscriberex ts0 try ts onerror new runtimeexception catch testexception ex ts awaitdone 5 timeunit seconds 
testsubscriberex integer ts1 new testsubscriberex testsubscriberex integer ts new testsubscriberex ts1 ts assertnotsubscribed assertfalse ts hassubscription ts onsubscribe new booleansubscription try ts assertnotsubscribed throw new runtimeexception should have thrown catch assertionerror ex asserttrue ts hassubscription assertfalse ts isdisposed ts onnext 1 ts onerror new testexception ts oncomplete ts1 assertvalue 1 asserterror testexception class assertcomplete ts dispose asserttrue ts isdisposed assertsame thread currentthread ts lastthread try ts assertnovalues throw new runtimeexception should have thrown catch assertionerror exc try ts assertvaluecount 0 throw new runtimeexception should have thrown catch assertionerror exc ts assertvaluesequence collections singletonlist 1 try ts assertvaluesequence collections singletonlist 2 throw new runtimeexception should have thrown catch assertionerror exc 
testsubscriberex integer ts new testsubscriberex try ts asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex try ts asserterror new testexception throw new runtimeexception should have thrown catch assertionerror ex try ts asserterrormessage throw new runtimeexception should have thrown catch assertionerror exc try ts asserterror functions throwable alwaystrue throw new runtimeexception should have thrown catch assertionerror ex try ts assertsubscribed throw new runtimeexception should have thrown catch assertionerror exc try ts assertterminated throw new runtimeexception should have thrown catch assertionerror exc ts onsubscribe new booleansubscription ts assertsubscribed ts assertnoerrors testexception ex new testexception forced failure ts onerror ex ts asserterror ex ts asserterror testexception class ts asserterrormessage forced failure ts asserterror functions throwable alwaystrue ts asserterror new predicate throwable override public boolean test throwable t return t getmessage null t getmessage contains forced try ts asserterrormessage throw new runtimeexception should have thrown catch assertionerror exc try ts asserterror new runtimeexception throw new runtimeexception should have thrown catch assertionerror exc try ts asserterror ioexception class throw new runtimeexception should have thrown catch assertionerror exc try ts assertnoerrors throw new runtimeexception should have thrown catch assertionerror exc try ts asserterror functions throwable alwaysfalse throw new runtimeexception should have thrown catch assertionerror exc ts assertterminated ts assertvaluecount 0 ts assertnovalues 
assertequals 1 testsubscriberex emptysubscriber values length assertnotnull testsubscriberex emptysubscriber valueof instance 
assertequals null testsubscriberex valueandclass null assertequals 1 class integer testsubscriberex valueandclass 1 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription ts onerror new testexception forced failure ts assertfailure testexception class ts assertfailure functions throwable alwaystrue ts testexception class forced failure ts onnext 1 ts assertfailure testexception class 1 ts assertfailure functions throwable alwaystrue 1 ts testexception class forced failure 1 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription ts assertnotfuseable try ts assertfuseable throw new runtimeexception should have thrown catch assertionerror ex try ts assertfusionmode queuefuseable sync throw new runtimeexception should have thrown catch assertionerror ex ts new testsubscriberex ts setinitialfusionmode queuefuseable any ts onsubscribe new scalarsubscription ts 1 ts assertfuseable ts assertfusionmode queuefuseable sync try ts assertfusionmode queuefuseable none throw new runtimeexception should have thrown catch assertionerror ex try ts assertnotfuseable throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts assertnotterminated ts onerror null try ts assertnotterminated throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription ts oncomplete ts assertresult try ts assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex ts onnext 1 ts assertresult 1 try ts assertresult 2 throw new runtimeexception should have thrown catch assertionerror ex try ts assertresult throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription assertfalse ts await 100 timeunit milliseconds ts awaitdone 100 timeunit milliseconds asserttrue ts isdisposed assertfalse ts await 100 timeunit milliseconds ts assertnotcomplete assertnoerrors ts oncomplete asserttrue ts await 100 timeunit milliseconds ts await ts awaitdone 5 timeunit seconds ts assertcomplete assertnoerrors asserttrue ts await 5 timeunit seconds final testsubscriberex integer ts1 new testsubscriberex ts1 onsubscribe new booleansubscription schedulers single scheduledirect new runnable override public void run ts1 oncomplete 200 timeunit milliseconds ts1 await 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription assertequals 0 ts errors size ts onerror new testexception assertequals 1 ts errors size testhelper asserterror ts errors 0 testexception class 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription ts assertnovalues assertequals collections emptylist ts values ts onnext 1 assertequals collections singletonlist 1 ts values ts cancel asserttrue ts iscancelled asserttrue ts isdisposed ts assertvalue 1 ts oncomplete 
assertequals none testsubscriberex fusionmodetostring queuefuseable none assertequals sync testsubscriberex fusionmodetostring queuefuseable sync assertequals async testsubscriberex fusionmodetostring queuefuseable async assertequals unknown 100 testsubscriberex fusionmodetostring 100 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription ts assertnotcomplete ts oncomplete try ts assertnotcomplete throw new runtimeexception should have thrown catch throwable ex ts assertterminated ts oncomplete try ts assertcomplete throw new runtimeexception should have thrown catch throwable ex try ts assertterminated throw new runtimeexception should have thrown catch throwable ex try ts assertnotcomplete throw new runtimeexception should have thrown catch throwable ex 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription try ts assertvalue 1 throw new runtimeexception should have thrown catch throwable ex ts onnext 1 ts assertvalue 1 try ts assertvalue 2 throw new runtimeexception should have thrown catch throwable ex ts onnext 2 try ts assertvalue 1 throw new runtimeexception should have thrown catch throwable ex 
testsubscriberex integer ts new testsubscriberex ts onnext 1 ts asserterror class ts new testsubscriberex ts onsubscribe new booleansubscription ts onnext null ts assertfailure nullpointerexception class integer null 
final testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription thread currentthread interrupt try ts awaitdone 5 timeunit seconds catch runtimeexception allowed asserttrue allowed tostring allowed getcause instanceof interruptedexception thread currentthread interrupt try ts awaitdone 5 timeunit seconds catch runtimeexception allowed asserttrue allowed tostring allowed getcause instanceof interruptedexception 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription ts assertnotterminated ts onerror new testexception ts assertterminated ts onerror new ioexception try ts assertterminated throw new runtimeexception should have thrown catch assertionerror ex try ts asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex ts new testsubscriberex ts onsubscribe new booleansubscription ts onerror new testexception ts oncomplete try ts assertterminated throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts onsubscribe null ts asserterror nullpointerexception class ts new testsubscriberex ts onsubscribe new booleansubscription booleansubscription bs1 new booleansubscription ts onsubscribe bs1 asserttrue bs1 iscancelled ts asserterror class ts new testsubscriberex ts dispose bs1 new booleansubscription ts onsubscribe bs1 asserttrue bs1 iscancelled 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription ts onnext 1 ts onnext 2 try ts assertvaluesequence collections integer emptylist throw new runtimeexception should have thrown catch assertionerror ex try ts assertvaluesequence collections singletonlist 1 throw new runtimeexception should have thrown catch assertionerror ex ts assertvaluesequence arrays aslist 1 2 try ts assertvaluesequence arrays aslist 1 2 3 throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex try ts assertempty throw new runtimeexception should have thrown catch assertionerror ex ts onsubscribe new booleansubscription ts assertempty ts onnext 1 try ts assertempty throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex thread currentthread interrupt try ts awaitdone 5 timeunit seconds catch runtimeexception ex asserttrue ex tostring ex getcause instanceof interruptedexception 
testsubscriberex integer ts new testsubscriberex ts assertnotsubscribed ts errors add new testexception try ts assertnotsubscribed throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex testexception e new testexception ts errors add e ts errors add new testexception try ts asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex try ts asserterror e throw new runtimeexception should have thrown catch assertionerror ex try ts asserterrormessage throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription try ts assertcomplete throw new runtimeexception should have thrown catch assertionerror ex ts oncomplete ts assertcomplete ts oncomplete try ts assertcomplete throw new runtimeexception should have thrown catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts oncomplete ts asserterror class 
testsubscriberex integer ts new testsubscriberex new flowablesubscriber integer override public void onsubscribe subscription s override public void onnext integer value override public void onerror throwable e throw new testexception override public void oncomplete throw new testexception ts onsubscribe new booleansubscription try ts oncomplete throw new runtimeexception should have thrown catch testexception ex ts assertterminated 
testsubscriberex integer ts new testsubscriberex new flowablesubscriber integer override public void onsubscribe subscription s override public void onnext integer value override public void onerror throwable e throw new testexception override public void oncomplete throw new testexception ts onsubscribe new booleansubscription try ts onerror new ioexception throw new runtimeexception should have thrown catch testexception ex ts assertterminated 
testsubscriberex object ts new testsubscriberex ts setinitialfusionmode queuefuseable sync flowable range 1 5 map new function integer object override public object apply integer v throws exception throw new testexception subscribe ts ts assertsubscribed assertfuseable assertfusionmode queuefuseable sync assertfailure testexception class 
testsubscriberex object ts new testsubscriberex ts setinitialfusionmode queuefuseable any unicastprocessor integer up unicastprocessor create up map new function integer object override public object apply integer v throws exception throw new testexception subscribe ts up onnext 1 ts assertsubscribed assertfuseable assertfusionmode queuefuseable async assertfailure testexception class 
assertthrows no values assertionerror class testsubscriberex object ts new testsubscriberex flowable empty subscribe ts ts assertvalue new predicate object override public boolean test final object o throws exception return false 
testsubscriberex integer ts new testsubscriberex flowable just 1 subscribe ts ts assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
assertthrows value not present assertionerror class testsubscriberex integer ts new testsubscriberex flowable just 1 subscribe ts ts assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
assertthrows value present but other values as well assertionerror class testsubscriberex integer ts new testsubscriberex flowable just 1 2 subscribe ts ts assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
assertthrows no values assertionerror class testsubscriberex object ts new testsubscriberex flowable empty subscribe ts ts assertvalueat 0 new predicate object override public boolean test final object o throws exception return false 
testsubscriberex integer ts new testsubscriberex flowable just 1 2 subscribe ts ts assertvalueat 1 new predicate integer override public boolean test final integer o throws exception return o 2 
assertthrows value not present assertionerror class testsubscriberex integer ts new testsubscriberex flowable just 1 2 3 subscribe ts ts assertvalueat 2 new predicate integer override public boolean test final integer o throws exception return o 3 
assertthrows invalid index 2 latch 0 values 2 errors 0 completions 1 assertionerror class testsubscriberex integer ts new testsubscriberex flowable just 1 2 subscribe ts ts assertvalueat 2 new predicate integer override public boolean test final integer o throws exception return o 1 
flowable range 1 5 test 0 requestmore 1 assertvalue 1 requestmore 2 assertvalues 1 2 3 requestmore 3 assertresult 1 2 3 4 5 
try for int i 1 i 3 i flowable just i test withtag testing with item i assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex asserttrue ex tostring ex tostring contains testing with item 2 
thread interrupted testsubscriberex object ts flowable never to testhelper object testconsumer assertfalse ts await 1 timeunit milliseconds try ts assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex asserttrue ex tostring ex tostring contains timeout 
try flowable never test awaitdone 1 timeunit milliseconds assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex asserttrue ex tostring ex tostring contains timeout 
testsubscriberex object ts flowable never to testhelper object testconsumer assertfalse ts await 1 timeunit milliseconds try ts assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex asserttrue ex tostring ex tostring contains timeout 
testsubscriberex object ts new testsubscriberex ts cancel try ts assertresult 1 throw new runtimeexception should have thrown catch throwable ex asserttrue ex tostring ex tostring contains disposed 
flowable range 1 10 delay 100 timeunit milliseconds test 5 awaitcount 5 assertvalues 1 2 3 4 5 requestmore 5 awaitdone 5 timeunit seconds assertresult 1 2 3 4 5 6 7 8 9 10 
flowable range 1 4 test awaitcount 5 assertresult 1 2 3 4 
try flowable just 1 test assertvalueat 0 new predicate integer override public boolean test integer t throws exception throw new throw new runtimeexception should have thrown catch ex 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription ts assertvaluesonly ts onnext 5 ts assertvaluesonly 5 ts onnext 1 ts assertvaluesonly 5 1 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription ts assertvaluesonly ts onnext 5 ts assertvaluesonly 5 ts onnext 1 try ts assertvaluesonly 5 throw new runtimeexception catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription ts oncomplete try ts assertvaluesonly throw new runtimeexception catch assertionerror ex 
testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription ts onerror new testexception try ts assertvaluesonly throw new runtimeexception catch assertionerror ex 
flowablesubscriber t w mock flowablesubscriber class mockito doanswer new answer object override public object answer invocationonmock a throws throwable subscription s a getargument 0 s request long max value return null when w onsubscribe subscription any return w 
return mock observer class 
return mock maybeobserver class 
return mock singleobserver class 
return mock completableobserver class 
try constructor c clazz c setaccessible true try c newinstance fail should have thrown catch ex assertequals no instances ex getcause getmessage catch exception ex assertionerror ae new assertionerror ex tostring ae initcause ex throw ae 
final list throwable list collections synchronizedlist new arraylist rxjavaplugins seterrorhandler new consumer throwable override public void accept throwable t list add t return list 
assertequals 0 e getenumconstants length try try method m0 e getdeclaredmethod values object a object m0 invoke null assertequals 0 a length method m e getdeclaredmethod valueof string class m invoke instance fail should have thrown catch ex fail ex tostring catch ex fail ex tostring catch ex catch ex fail ex tostring 
list throwable list trackpluginerrors try final countdownlatch cdl new countdownlatch 1 source subscribe new flowablesubscriber object override public void onsubscribe subscription s try s request 99 s cancel s cancel finally cdl countdown override public void onnext object t override public void onerror throwable t override public void oncomplete try asserttrue cdl await 5 timeunit seconds catch interruptedexception ex throw new assertionerror ex getmessage asserttrue list tostring list get 0 instanceof assertequals n 0 required but it was 99 list get 0 getmessage finally rxjavaplugins seterrorhandler null 
try s request 99 s cancel s cancel finally cdl countdown 
$EMPTY$
$EMPTY$
$EMPTY$
list throwable list trackpluginerrors try final countdownlatch cdl new countdownlatch 1 flowablesubscriber object bad new flowablesubscriber object override public void onsubscribe subscription s try s request 99 s cancel s cancel finally cdl countdown override public void onnext object t override public void onerror throwable t override public void oncomplete suppresswarnings unchecked flowablesubscriber object subs new flowablesubscriber source parallelism subs 0 bad for int i 1 i subs length i subs i noopconsumer instance source subscribe subs try asserttrue cdl await 5 timeunit seconds catch interruptedexception ex throw new assertionerror ex getmessage asserttrue list tostring list get 0 instanceof assertequals n 0 required but it was 99 list get 0 getmessage finally rxjavaplugins seterrorhandler null 
try s request 99 s cancel s cancel finally cdl countdown 
$EMPTY$
$EMPTY$
$EMPTY$
race r1 r2 schedulers single 
final atomicinteger count new atomicinteger 2 final countdownlatch cdl new countdownlatch 2 final throwable errors null null s scheduledirect new runnable override public void run if count decrementandget 0 while count get 0 try try r1 run catch throwable ex errors 0 ex finally cdl countdown if count decrementandget 0 while count get 0 try try r2 run catch throwable ex errors 1 ex finally cdl countdown try if cdl await 5 timeunit seconds throw new assertionerror the wait timed out catch interruptedexception ex throw new runtimeexception ex if errors 0 null errors 1 null throw exceptionhelper wraporthrow errors 0 if errors 0 null errors 1 null throw exceptionhelper wraporthrow errors 1 if errors 0 null errors 1 null throw new compositeexception errors 
if ex instanceof ex ex getcause return compositeexception ex getexceptions 
try q offer null fail should have thrown catch ex try q offer null null fail should have thrown catch ex 
try method m enumclass getmethod values m setaccessible true method e enumclass getmethod valueof string class m setaccessible true for enum e o enum e m invoke null assertsame o e invoke null o name catch throwable ex throw exceptionhelper wraporthrow ex 
list throwable errors trackpluginerrors try booleansubscription s1 new booleansubscription subscriber onsubscribe s1 booleansubscription s2 new booleansubscription subscriber onsubscribe s2 assertfalse s1 iscancelled asserttrue s2 iscancelled asserterror errors 0 class subscription already set finally rxjavaplugins reset 
list throwable errors trackpluginerrors try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 assertfalse d1 isdisposed asserttrue d2 isdisposed asserterror errors 0 class disposable already set finally rxjavaplugins reset 
list throwable errors trackpluginerrors try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 assertfalse d1 isdisposed asserttrue d2 isdisposed asserterror errors 0 class disposable already set finally rxjavaplugins reset 
list throwable errors trackpluginerrors try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 assertfalse d1 isdisposed asserttrue d2 isdisposed asserterror errors 0 class disposable already set finally rxjavaplugins reset 
list throwable errors trackpluginerrors try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 assertfalse d1 isdisposed asserttrue d2 isdisposed asserterror errors 0 class disposable already set finally rxjavaplugins reset 
assertfalse disposed upfront d isdisposed d dispose asserttrue not disposed d isdisposed d dispose asserttrue not disposed again d isdisposed 
final testsubscriber object ts new testsubscriber 0l source subscribe new flowablesubscriber object override public void onsubscribe subscription s ts onsubscribe new booleansubscription s cancel s cancel override public void onnext object t ts onnext t override public void onerror throwable t ts onerror t override public void oncomplete ts oncomplete ts assertempty 
ts onsubscribe new booleansubscription s cancel s cancel 
ts onnext t 
ts onerror t 
ts oncomplete 
final boolean b null null final countdownlatch cdl new countdownlatch 1 source subscribe new maybeobserver object override public void onsubscribe disposable d try b 0 d isdisposed d dispose b 1 d isdisposed d dispose finally cdl countdown override public void onsuccess object value override public void onerror throwable e override public void oncomplete try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals reports disposed upfront false b 0 assertequals didn t report disposed after true b 1 
try b 0 d isdisposed d dispose b 1 d isdisposed d dispose finally cdl countdown 
$EMPTY$
$EMPTY$
$EMPTY$
final boolean b null null final countdownlatch cdl new countdownlatch 1 source subscribe new observer object override public void onsubscribe disposable d try b 0 d isdisposed d dispose b 1 d isdisposed d dispose finally cdl countdown override public void onnext object value override public void onerror throwable e override public void oncomplete try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals reports disposed upfront false b 0 assertequals didn t report disposed after true b 1 
try b 0 d isdisposed d dispose b 1 d isdisposed d dispose finally cdl countdown 
$EMPTY$
final boolean b null null final countdownlatch cdl new countdownlatch 1 source subscribe new singleobserver object override public void onsubscribe disposable d try b 0 d isdisposed d dispose b 1 d isdisposed d dispose finally cdl countdown override public void onsuccess object value override public void onerror throwable e try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals reports disposed upfront false b 0 assertequals didn t report disposed after true b 1 
final boolean b null null final countdownlatch cdl new countdownlatch 1 source subscribe new completableobserver override public void onsubscribe disposable d try b 0 d isdisposed d dispose b 1 d isdisposed d dispose finally cdl countdown override public void onerror throwable e override public void oncomplete try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals reports disposed upfront false b 0 assertequals didn t report disposed after true b 1 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 maybe t source new maybe t override protected void subscribeactual maybeobserver super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown maybesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 maybe t source new maybe t override protected void subscribeactual maybeobserver super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown singlesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 maybe t source new maybe t override protected void subscribeactual maybeobserver super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown observablesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 maybe t source new maybe t override protected void subscribeactual maybeobserver super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown publisher r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 single t source new single t override protected void subscribeactual singleobserver super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown maybesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 single t source new single t override protected void subscribeactual singleobserver super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown observablesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 single t source new single t override protected void subscribeactual singleobserver super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown publisher r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 maybe t source new maybe t override protected void subscribeactual maybeobserver super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown completablesource out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 single t source new single t override protected void subscribeactual singleobserver super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown singlesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 flowable t source new flowable t override protected void subscribeactual subscriber super t subscriber try booleansubscription bs1 new booleansubscription subscriber onsubscribe bs1 booleansubscription bs2 new booleansubscription subscriber onsubscribe bs2 b 0 bs1 iscancelled b 1 bs2 iscancelled finally cdl countdown publisher r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class subscription already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
try booleansubscription bs1 new booleansubscription subscriber onsubscribe bs1 booleansubscription bs2 new booleansubscription subscriber onsubscribe bs2 b 0 bs1 iscancelled b 1 bs2 iscancelled finally cdl countdown 
list throwable errors trackpluginerrors try final boolean b null null null null final countdownlatch cdl new countdownlatch 2 parallelflowable t source new parallelflowable t override public void subscribe subscriber super t subscribers for int i 0 i subscribers length i try booleansubscription bs1 new booleansubscription subscribers i onsubscribe bs1 booleansubscription bs2 new booleansubscription subscribers i onsubscribe bs2 b i 2 0 bs1 iscancelled b i 2 1 bs2 iscancelled finally cdl countdown override public int parallelism return 2 parallelflowable out transform apply source out subscribe new subscriber noopconsumer instance noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals rail 1 first disposed false b 0 assertequals rail 1 second not disposed true b 1 assertequals rail 2 first disposed false b 2 assertequals rail 2 second not disposed true b 3 asserterror errors 0 class subscription already set asserterror errors 1 class subscription already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null null null final countdownlatch cdl new countdownlatch 2 parallelflowable t source new parallelflowable t override public void subscribe subscriber super t subscribers for int i 0 i subscribers length i try booleansubscription bs1 new booleansubscription subscribers i onsubscribe bs1 booleansubscription bs2 new booleansubscription subscribers i onsubscribe bs2 b i 2 0 bs1 iscancelled b i 2 1 bs2 iscancelled finally cdl countdown override public int parallelism return 2 flowable out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals rail 1 first disposed false b 0 assertequals rail 1 second not disposed true b 1 assertequals rail 2 first disposed false b 2 assertequals rail 2 second not disposed true b 3 asserterror errors 0 class subscription already set asserterror errors 1 class subscription already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 observable t source new observable t override protected void subscribeactual observer super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown observablesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 observable t source new observable t override protected void subscribeactual observer super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown singlesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 observable t source new observable t override protected void subscribeactual observer super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown maybesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 observable t source new observable t override protected void subscribeactual observer super t observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown completablesource out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 flowable t source new flowable t override protected void subscribeactual subscriber super t subscriber try booleansubscription bs1 new booleansubscription subscriber onsubscribe bs1 booleansubscription bs2 new booleansubscription subscriber onsubscribe bs2 b 0 bs1 iscancelled b 1 bs2 iscancelled finally cdl countdown observablesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first cancelled false b 0 assertequals second not cancelled true b 1 asserterror errors 0 class subscription already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 flowable t source new flowable t override protected void subscribeactual subscriber super t subscriber try booleansubscription bs1 new booleansubscription subscriber onsubscribe bs1 booleansubscription bs2 new booleansubscription subscriber onsubscribe bs2 b 0 bs1 iscancelled b 1 bs2 iscancelled finally cdl countdown singlesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first cancelled false b 0 assertequals second not cancelled true b 1 asserterror errors 0 class subscription already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 flowable t source new flowable t override protected void subscribeactual subscriber super t subscriber try booleansubscription bs1 new booleansubscription subscriber onsubscribe bs1 booleansubscription bs2 new booleansubscription subscriber onsubscribe bs2 b 0 bs1 iscancelled b 1 bs2 iscancelled finally cdl countdown maybesource r out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first cancelled false b 0 assertequals second not cancelled true b 1 asserterror errors 0 class subscription already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 flowable t source new flowable t override protected void subscribeactual subscriber super t subscriber try booleansubscription bs1 new booleansubscription subscriber onsubscribe bs1 booleansubscription bs2 new booleansubscription subscriber onsubscribe bs2 b 0 bs1 iscancelled b 1 bs2 iscancelled finally cdl countdown completable out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first cancelled false b 0 assertequals second not cancelled true b 1 asserterror errors 0 class subscription already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 completable source new completable override protected void subscribeactual completableobserver observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown completablesource out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 completable source new completable override protected void subscribeactual completableobserver observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown maybesource t out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 completable source new completable override protected void subscribeactual completableobserver observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown singlesource t out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 completable source new completable override protected void subscribeactual completableobserver observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown publisher out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
list throwable errors trackpluginerrors try final boolean b null null final countdownlatch cdl new countdownlatch 1 completable source new completable override protected void subscribeactual completableobserver observer try disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 b 0 d1 isdisposed b 1 d2 isdisposed finally cdl countdown observablesource out transform apply source out subscribe noopconsumer instance try asserttrue timed out cdl await 5 timeunit seconds catch interruptedexception ex throw exceptionhelper wraporthrow ex assertequals first disposed false b 0 assertequals second not disposed true b 1 asserterror errors 0 class disposable already set catch throwable ex throw exceptionhelper wraporthrow ex finally rxjavaplugins reset 
publishprocessor t pp publishprocessor create testsubscriber u ts new testsubscriber try new maybetoflowable composer apply pp singleelement subscribe ts catch throwable ex throw exceptionhelper wraporthrow ex asserttrue not subscribed to source pp hassubscribers ts cancel assertfalse dispose not propagated pp hassubscribers 
publishprocessor integer pp publishprocessor create testsubscriber integer ts new testsubscriber try new integer composer apply pp ignoreelements subscribe ts catch throwable ex throw exceptionhelper wraporthrow ex asserttrue not subscribed to source pp hassubscribers ts cancel assertfalse dispose not propagated pp hassubscribers 
publishprocessor t pp publishprocessor create testsubscriber u ts new testsubscriber try new singletoflowable composer apply pp singleelement subscribe ts catch throwable ex throw exceptionhelper wraporthrow ex asserttrue pp hassubscribers ts cancel assertfalse pp hassubscribers 
publishprocessor t pp publishprocessor create testsubscriber u ts new testsubscriber try new maybetoflowable composer apply pp singleorerror subscribe ts catch throwable ex throw exceptionhelper wraporthrow ex asserttrue pp hassubscribers ts cancel assertfalse pp hassubscribers 
final countdownlatch cdl new countdownlatch 1 final boolean state null null null null source subscribe new observer t override public void onsubscribe disposable d try if d instanceof queuedisposable suppresswarnings unchecked queuedisposable object qd queuedisposable object d state 0 true int m qd requestfusion queuefuseable any if m queuefuseable none state 1 true state 2 qd isempty qd clear state 3 qd isempty cdl countdown finally d dispose override public void onnext t value override public void onerror throwable e override public void oncomplete try asserttrue cdl await 5 timeunit seconds asserttrue not fuseable state 0 asserttrue fusion rejected state 1 assertnotnull state 2 asserttrue did not empty state 3 catch interruptedexception ex throw new runtimeexception ex 
final countdownlatch cdl new countdownlatch 1 final boolean state null null null null source subscribe new flowablesubscriber t override public void onsubscribe subscription s try if s instanceof queuesubscription suppresswarnings unchecked queuesubscription object qs queuesubscription object s state 0 true int m qs requestfusion queuefuseable any if m queuefuseable none state 1 true state 2 qs isempty qs clear state 3 qs isempty cdl countdown finally s cancel override public void onnext t value override public void onerror throwable e override public void oncomplete try asserttrue cdl await 5 timeunit seconds asserttrue not fuseable state 0 asserttrue fusion rejected state 1 assertnotnull state 2 asserttrue did not empty state 3 catch interruptedexception ex throw new runtimeexception ex 
return compositelist to errors get 0 
return compositelist ts errors get 0 
int n source parallelism suppresswarnings unchecked testsubscriber object tss new testsubscriber n 1 for int i 0 i n i tss i new testsubscriber withtag i source subscribe tss for int i 0 i n i tss i assertfailure class 
return new observable t override protected void subscribeactual observer super t observer observer onsubscribe new queuedisposable t override public int requestfusion int mode return 0 override public boolean offer t value throw new override public boolean offer t v1 t v2 throw new override public t poll throws exception return null override public boolean isempty return true override public void clear override public void dispose override public boolean isdisposed return false 
return null 
return true 
$EMPTY$
$EMPTY$
return false 
return new flowable t override protected void subscribeactual subscriber super t subscriber subscriber onsubscribe new queuesubscription t override public int requestfusion int mode return 0 override public boolean offer t value throw new override public boolean offer t v1 t v2 throw new override public t poll throws exception return null override public boolean isempty return true override public void clear override public void cancel override public void request long n 
return null 
return true 
$EMPTY$
$EMPTY$
return new upstream 
return qs poll 
qs clear 
return qs isempty 
upstream cancel 
return new null 
return new upstream 
return new null 
return new false 0 
testsubscriberex t tse new testsubscriberex initialrequest if cancelled tse cancel tse setinitialfusionmode fusionmode return f subscribewith tse 
testobserverex void toe new testobserverex if cancelled toe dispose toe setinitialfusionmode fusionmode return upstream subscribewith toe 
testobserverex t toe new testobserverex if cancelled toe dispose toe setinitialfusionmode fusionmode return upstream subscribewith toe 
testobserverex t toe new testobserverex if cancelled toe dispose toe setinitialfusionmode fusionmode return upstream subscribewith toe 
testobserverex t toe new testobserverex if cancelled toe dispose toe setinitialfusionmode fusionmode return upstream subscribewith toe 
testsubscriberex t tse new testsubscriberex if cancelled tse dispose tse setinitialfusionmode fusionmode return upstream subscribewith tse 
return findsource baseclassname io reactivex rxjava3 core 
url u testhelper class getresource testhelper class getsimplename class string path new file u touri tostring replace parentpackage parentpackage replace string p null while true int idx path lastindexof if idx 0 break path path substring 0 idx string check path src main java if new file check exists p check parentpackage baseclassname java break if p null system err println unable to locate the rxjava sources return null file f new file p if f canread return f system out println can t read p return null 
list throwable errors testhelper trackpluginerrors try final serialdisposable disposable new serialdisposable t result flowable just 1 map new function integer integer override public integer apply integer v throws throwable disposable dispose throw new testexception to transform if result instanceof maybesource testobserverex object to new testobserverex disposable set to maybesource result subscribe to to assertempty else if result instanceof singlesource testobserverex object to new testobserverex disposable set to singlesource result subscribe to to assertempty else if result instanceof completablesource testobserverex object to new testobserverex disposable set to completablesource result subscribe to to assertempty else if result instanceof observablesource testobserverex object to new testobserverex disposable set to observablesource result subscribe to to assertempty else if result instanceof publisher testsubscriberex object ts new testsubscriberex disposable set disposable fromsubscription ts publisher result subscribe ts ts assertempty else fail unsupported transformation output result of class result null result getclass null assertfalse no undeliverable errors received errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try final serialdisposable disposable new serialdisposable t result observable just 1 map new function integer integer override public integer apply integer v throws throwable disposable dispose throw new testexception to transform if result instanceof maybesource testobserverex object to new testobserverex disposable set to maybesource result subscribe to to assertempty else if result instanceof singlesource testobserverex object to new testobserverex disposable set to singlesource result subscribe to to assertempty else if result instanceof completablesource testobserverex object to new testobserverex disposable set to completablesource result subscribe to to assertempty else if result instanceof observablesource testobserverex object to new testobserverex disposable set to observablesource result subscribe to to assertempty else if result instanceof publisher testsubscriberex object ts new testsubscriberex disposable set disposable fromsubscription ts publisher result subscribe ts ts assertempty else fail unsupported transformation output result of class result null result getclass null assertfalse no undeliverable errors received errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors trackpluginerrors try action accept errors finally rxjavaplugins reset 
try cf get fail should have thrown catch throwable ex if error isinstance ex getcause ex printstacktrace fail wrong cause ex getcause 
atomicinteger sync new atomicinteger 2 schedulers single scheduledirect if sync decrementandget 0 while sync get 0 run run resume countdown if sync decrementandget 0 while sync get 0 
return f new flowable t override protected void subscribeactual nonnull subscriber nonnull super t subscriber f subscribe new subscriber 
lastthread thread currentthread if d null errors add new nullpointerexception onsubscribe received a null subscription return if upstream compareandset null d d dispose if upstream get disposablehelper disposed errors add new onsubscribe received multiple subscriptions d return if initialfusionmode 0 if d instanceof queuedisposable qd queuedisposable t d int m qd requestfusion initialfusionmode m if m queuefuseable sync true lastthread thread currentthread try t t while t qd poll null values add t completions upstream lazyset disposablehelper disposed catch throwable ex errors add ex return downstream onsubscribe d 
if true if upstream get null errors add new onsubscribe not called in proper order try lastthread thread currentthread if t null errors add new nullpointerexception onerror received a null throwable else errors add t downstream onerror t finally done countdown 
if true if upstream get null errors add new onsubscribe not called in proper order try lastthread thread currentthread completions downstream oncomplete finally done countdown 
disposablehelper dispose upstream 
return disposablehelper isdisposed upstream get 
return upstream get null 
if upstream get null throw fail not subscribed return this 
if upstream get null throw fail subscribed else if errors isempty throw fail not subscribed but errors found return this 
if qd null throw new assertionerror upstream is not fuseable return this 
if qd null throw new assertionerror upstream is fuseable return this 
$EMPTY$
$EMPTY$
$EMPTY$
$EMPTY$
single integer cache single just 1 cache cache test assertresult 1 cache test assertresult 1 
single object cache single error new testexception cache cache test assertfailure testexception class cache test assertfailure testexception class 
publishsubject integer ps publishsubject create single integer cache ps single 99 cache testobserver integer to1 cache test testobserver integer to2 cache test ps onnext 1 ps oncomplete to1 assertresult 1 to2 assertresult 1 
publishsubject integer ps publishsubject create single integer cache ps single 99 cache testobserver integer to1 cache test testobserver integer to2 cache test to1 dispose ps onnext 1 ps oncomplete to1 assertnovalues assertnoerrors assertnotcomplete to2 assertresult 1 
publishsubject integer ps publishsubject create single integer cache ps single 99 cache final testsubscriber integer ts1 new testsubscriber testsubscriber integer ts2 new testsubscriber integer override public void onnext integer t super onnext t ts1 cancel cache toflowable subscribe ts2 cache toflowable subscribe ts1 ps onnext 1 ps oncomplete ts1 assertnovalues assertnoerrors assertnotcomplete ts2 assertresult 1 
publishsubject integer ps publishsubject create single integer cache ps single 99 cache final testsubscriber integer ts1 new testsubscriber testsubscriber integer ts2 new testsubscriber integer override public void onerror throwable t super onerror t ts1 cancel cache toflowable subscribe ts2 cache toflowable subscribe ts1 ps onerror new testexception ts1 assertnovalues assertnoerrors assertnotcomplete ts2 assertfailure testexception class 
testsubscriber string ts new testsubscriber single just hello world toflowable subscribe ts ts assertvaluesequence arrays aslist hello world 
final atomicreference string v new atomicreference single just hello world subscribe new singleobserver string override public void onsubscribe disposable d override public void onsuccess string value v set value override public void onerror throwable error assertequals hello world v get 
testsubscriber string ts new testsubscriber single just a map new function string string override public string apply string s return s b toflowable subscribe ts ts assertvaluesequence arrays aslist ab 
testsubscriber string ts new testsubscriber single string a single just a single string b single just b single zip a b new bifunction string string string override public string apply string a1 string b1 return a1 b1 toflowable subscribe ts ts assertvaluesequence arrays aslist ab 
testsubscriber string ts new testsubscriber single just a zipwith single just b new bifunction string string string override public string apply string a1 string b1 return a1 b1 toflowable subscribe ts ts assertvaluesequence arrays aslist ab 
testsubscriber string ts new testsubscriber single string a single just a single string b single just b single merge a b subscribe ts ts assertvaluesequence arrays aslist a b 
testsubscriber string ts new testsubscriber single just a mergewith single just b subscribe ts ts assertvaluesequence arrays aslist a b 
testsubscriber object ts new testsubscriber single unsafecreate new singlesource object override public void subscribe singleobserver super object observer observer onsubscribe disposable empty observer onsuccess hello toflowable subscribe ts ts assertvaluesequence arrays aslist hello 
testsubscriberex object ts new testsubscriberex single unsafecreate new singlesource object override public void subscribe singleobserver super object observer observer onsubscribe disposable empty observer onerror new runtimeexception fail toflowable subscribe ts ts asserterror runtimeexception class ts asserterrormessage fail 
testsubscriber string ts new testsubscriber single just hello subscribeon schedulers io map new function string string override public string apply string v system out println subscribeon thread thread currentthread return v observeon schedulers computation map new function string string override public string apply string v system out println observeon thread thread currentthread return v toflowable subscribe ts ts awaitdone 5 timeunit seconds ts assertvaluesequence arrays aslist hello 
testsubscriberex string ts new testsubscriberex single just hello flatmap new function string single string override public single string apply string s return single just s world subscribeon schedulers computation toflowable subscribe ts if ts await 5 timeunit seconds ts cancel assert fail testsubscriber timed out ts assertvaluesequence arrays aslist hello world 
testsubscriber string ts new testsubscriber single string s1 single string unsafecreate new singlesource string override public void subscribe singleobserver super string observer observer onsubscribe disposable empty try thread sleep 5000 catch interruptedexception e observer onsuccess success subscribeon schedulers io s1 timeout 100 timeunit milliseconds toflowable subscribe ts ts awaitdone 5 timeunit seconds ts asserterror timeoutexception class 
testsubscriber string ts new testsubscriber single string s1 single string unsafecreate new singlesource string override public void subscribe singleobserver super string observer observer onsubscribe disposable empty try thread sleep 5000 catch interruptedexception e observer onsuccess success subscribeon schedulers io s1 timeout 100 timeunit milliseconds single just hello toflowable subscribe ts ts awaitdone 5 timeunit seconds ts assertnoerrors ts assertvalue hello 
testsubscriber string ts new testsubscriber final atomicboolean unsubscribed new atomicboolean final atomicboolean interrupted new atomicboolean final countdownlatch latch new countdownlatch 2 single string s1 single string unsafecreate new singlesource string override public void subscribe final singleobserver super string observer serialdisposable sd new serialdisposable observer onsubscribe sd final thread t new thread new runnable override public void run try thread sleep 5000 observer onsuccess success catch interruptedexception e interrupted set true latch countdown sd replace disposable fromrunnable new runnable override public void run unsubscribed set true t interrupt latch countdown t start s1 toflowable subscribe ts thread sleep 100 ts cancel if latch await 1000 timeunit milliseconds asserttrue unsubscribed get asserttrue interrupted get else fail timed out waiting for latch 
final serialdisposable sd new serialdisposable singleobserver string ts new singleobserver string override public void onsubscribe disposable d sd replace d override public void onsuccess string value override public void onerror throwable error final atomicboolean unsubscribed new atomicboolean final atomicboolean interrupted new atomicboolean final countdownlatch latch new countdownlatch 2 single string s1 single unsafecreate new singlesource string override public void subscribe final singleobserver super string observer serialdisposable sd new serialdisposable observer onsubscribe sd final thread t new thread new runnable override public void run try thread sleep 5000 observer onsuccess success catch interruptedexception e interrupted set true latch countdown sd replace disposable fromrunnable new runnable override public void run unsubscribed set true t interrupt latch countdown t start s1 subscribe ts thread sleep 100 sd dispose if latch await 1000 timeunit milliseconds asserttrue unsubscribed get asserttrue interrupted get else fail timed out waiting for latch 
final atomicboolean unsubscribed new atomicboolean final atomicboolean interrupted new atomicboolean final countdownlatch latch new countdownlatch 2 single string s1 single unsafecreate new singlesource string override public void subscribe final singleobserver super string observer serialdisposable sd new serialdisposable observer onsubscribe sd final thread t new thread new runnable override public void run try thread sleep 5000 observer onsuccess success catch interruptedexception e interrupted set true latch countdown sd replace disposable fromrunnable new runnable override public void run unsubscribed set true t interrupt latch countdown t start disposable subscription s1 subscribe thread sleep 100 subscription dispose if latch await 1000 timeunit milliseconds asserttrue unsubscribed get asserttrue interrupted get else fail timed out waiting for latch 
single string s single unsafecreate new singlesource string override public void subscribe singleobserver super string t t onsubscribe disposable empty t onsuccess hello testsubscriber string ts new testsubscriber 0l s toflowable subscribe ts ts assertnovalues ts request 1 ts assertvalue hello 
flowable string a single just a toflowable testsubscriber string ts new testsubscriber a subscribe ts ts assertvalue a ts assertnoerrors ts assertcomplete 
single just 1 doonevent null 
final atomicinteger atomicinteger new atomicinteger 0 single just 1 doonevent new biconsumer integer throwable override public void accept final integer integer final throwable throwable throws exception if integer null atomicinteger incrementandget subscribe assertequals 1 atomicinteger get 
final atomicinteger atomicinteger new atomicinteger 0 single error new runtimeexception doonevent new biconsumer object throwable override public void accept final object o final throwable throwable throws exception if throwable null atomicinteger incrementandget subscribe assertequals 1 atomicinteger get 
assertequals 1 single just 1 tofuture get intvalue 
try single error new testexception tofuture get catch executionexception ex asserttrue ex tostring ex getcause instanceof testexception 
iterable extends flowable integer f singleinternalhelper iterabletoflowable arrays aslist single just 1 iterator extends flowable integer iterator f iterator iterator next iterator remove 
final list single integer singles arrays aslist single just 1 single just 4 single zip singles new function object object override public object apply final object o throws exception int sum 0 for object i o sum integer i return sum test assertresult 5 
single just 1 to new singleconverter integer flowable integer override public flowable integer apply single integer v return v toflowable test assertresult 1 
single fromobservable null 
single fromobservable observable empty test assertfailure class 
single fromobservable observable just 1 2 to testhelper integer testconsumer assertfailure class asserterrormessage sequence contains more than one element 
single fromobservable observable just 1 test assertresult 1 
single fromobservable observable error new runtimeexception some error to testhelper testconsumer assertfailure runtimeexception class asserterrormessage some error 
new single integer override protected void subscribeactual singleobserver super integer observer throw new nullpointerexception test 
final testscheduler testscheduler new testscheduler final atomiclong atomiclong new atomiclong single timer 2 timeunit seconds testscheduler subscribe new consumer long override public void accept final long value throws exception atomiclong incrementandget assertequals 0 atomiclong get testscheduler advancetimeby 1 timeunit seconds assertequals 0 atomiclong get testscheduler advancetimeby 1 timeunit seconds assertequals 1 atomiclong get 
final integer value null single just 1 subscribe new consumer integer override public void accept integer v throws exception value 0 v assertequals integer 1 value 0 
final object value null null single just 1 subscribe new biconsumer integer throwable override public void accept integer v throwable e throws exception value 0 v value 1 e assertequals 1 value 0 assertnull value 1 
final object value null null testexception ex new testexception single error ex subscribe new biconsumer object throwable override public void accept object v throwable e throws exception value 0 v value 1 e assertnull value 0 assertequals ex value 1 
try new single integer override protected void subscribeactual singleobserver super integer observer throw new test catch nullpointerexception ex if ex getcause instanceof fail ex tostring should have thrown npe iae 
publishsubject integer ps publishsubject create disposable d ps single 99 subscribe new biconsumer object object override public void accept object t1 object t2 throws exception assertfalse d isdisposed d dispose asserttrue d isdisposed assertfalse ps hasobservers 
publishsubject integer ps publishsubject create disposable d ps single 99 subscribe functions integer emptyconsumer assertfalse d isdisposed d dispose asserttrue d isdisposed assertfalse ps hasobservers 
list throwable list testhelper trackpluginerrors try single just 1 subscribe new consumer integer override public void accept integer t throws exception throw new testexception testhelper assertundeliverable list 0 testexception class finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try single integer error new testexception outer failure subscribe functions integer emptyconsumer new consumer throwable override public void accept throwable t throws exception throw new testexception inner failure testhelper asserterror list 0 compositeexception class list throwable cel testhelper compositelist list get 0 testhelper asserterror cel 0 testexception class outer failure testhelper asserterror cel 1 testexception class inner failure finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try single just 1 subscribe new biconsumer integer throwable override public void accept integer t throwable e throws exception throw new testexception testhelper assertundeliverable list 0 testexception class finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try single integer error new testexception outer failure subscribe new biconsumer integer throwable override public void accept integer a throwable t throws exception throw new testexception inner failure testhelper asserterror list 0 compositeexception class list throwable cel testhelper compositelist list get 0 testhelper asserterror cel 0 testexception class outer failure testhelper asserterror cel 1 testexception class inner failure finally rxjavaplugins reset 
publishsubject integer ps publishsubject create ps single 99 test false asserttrue ps hasobservers 
asserttrue single just 1 subscribe isdisposed 
asserttrue single error new testexception subscribe functions emptyconsumer functions emptyconsumer isdisposed 
final object result null null disposable d single just 1 subscribe new biconsumer integer throwable override public void accept integer t1 throwable t2 throws exception result 0 t1 result 1 t2 asserttrue not disposed d isdisposed assertequals 1 result 0 assertnull result 1 
final object result null null disposable d single integer error new ioexception subscribe new biconsumer integer throwable override public void accept integer t1 throwable t2 throws exception result 0 t1 result 1 t2 asserttrue not disposed d isdisposed assertnull result 0 asserttrue result 1 result 1 instanceof ioexception 
single amb new iterable single object override public iterator single object iterator return null test asserterror nullpointerexception class 
single amb arrays aslist null just1 test asserterror nullpointerexception class 
single ambarray null just1 test asserterror nullpointerexception class 
single concat new iterable single object override public iterator single object iterator return null blockingsubscribe 
single concat arrays aslist just1 null blockingsubscribe 
int maxargs 4 suppresswarnings rawtypes class single clazz single class for int argcount 2 argcount maxargs argcount for int argnull 1 argnull argcount argnull class params new class argcount arrays fill params singlesource class object values new object argcount arrays fill values just1 values argnull 1 null method m clazz getmethod concat params try m invoke null values assert fail no exception for argcount argcount argnull argnull catch ex if ex getcause instanceof nullpointerexception assert fail unexpected exception for argcount argcount argnull argnull ex 
single defer functions single object nullsupplier blockingget 
single error functions throwable nullsupplier blockingget 
single fromcallable new callable object override public object call throws exception return null blockingget 
futuretask object f new futuretask functions empty runnable null f run single fromfuture f blockingget 
futuretask object f new futuretask functions empty runnable null f run single fromfuture f 1 timeunit seconds blockingget 
single merge new iterable single object override public iterator single object iterator return null blockingsubscribe 
single merge arrays aslist null just1 blockingsubscribe 
int maxargs 4 suppresswarnings rawtypes class single clazz single class for int argcount 2 argcount maxargs argcount for int argnull 1 argnull argcount argnull class params new class argcount arrays fill params singlesource class object values new object argcount arrays fill values just1 values argnull 1 null method m clazz getmethod merge params try m invoke null values assert fail no exception for argcount argcount argnull argnull catch ex if ex getcause instanceof nullpointerexception assert fail unexpected exception for argcount argcount argnull argnull ex 
single using new supplier object override public object get return 1 new function object single object override public single object apply object d return null functions emptyconsumer blockingget 
single zip new iterable single object override public iterator single object iterator return null new function object object override public object apply object v return 1 blockingget 
single zip arrays aslist null just1 new function object object override public object apply object v return 1 blockingget 
single zip arrays aslist just1 just1 new function object object override public object apply object v return null blockingget 
suppresswarnings rawtypes class single clazz single class for int argcount 3 argcount 10 argcount for int argnull 1 argnull argcount argnull class params new class argcount 1 arrays fill params singlesource class class fniclass class forname io reactivex rxjava3 functions function argcount params argcount fniclass object values new object argcount 1 arrays fill values just1 values argnull 1 null values argcount proxy newproxyinstance getclass getclassloader new class fniclass new invocationhandler override public object invoke object o method m object a throws throwable return 1 method m clazz getmethod zip params try m invoke null values assert fail no exception for argcount argcount argnull argnull catch ex if ex getcause instanceof nullpointerexception assert fail unexpected exception for argcount argcount argnull argnull ex values argcount proxy newproxyinstance getclass getclassloader new class fniclass new invocationhandler override public object invoke object o method m1 object a throws throwable return null try single object m invoke null values blockingget assert fail no exception for argcount argcount argnull argnull catch ex if ex getcause instanceof nullpointerexception assert fail unexpected exception for argcount argcount argnull argnull ex class params new class argcount 1 arrays fill params singlesource class class fniclass class forname io reactivex rxjava3 functions function argcount params argcount fniclass object values new object argcount 1 arrays fill values just1 values argcount null method m clazz getmethod zip params try m invoke null values assert fail no exception for argcount argcount zipper function catch ex if ex getcause instanceof nullpointerexception assert fail unexpected exception for argcount argcount zipper function ex 
single zip arrays aslist just1 null new function object object override public object apply object v return 1 blockingget 
single ziparray new function object object override public object apply object v return 1 just1 null blockingget 
single ziparray new function object object override public object apply object v return null just1 just1 blockingget 
just1 flatmap new function integer single object override public single object apply integer v return null blockingget 
just1 flatmappublisher new function integer publisher object override public publisher object apply integer v return null blockingsubscribe 
just1 lift new singleoperator object integer override public singleobserver super integer apply singleobserver super object observer return null blockingget 
error onerrorreturn new function throwable integer override public integer apply throwable t throws exception return null blockingget 
try error onerrorresumenext new function throwable single integer override public single integer apply throwable e return null blockingget catch compositeexception ex asserttrue ex tostring ex getexceptions get 1 instanceof nullpointerexception 
error repeatwhen new function flowable object publisher object override public publisher object apply flowable object v return null blockingsubscribe 
error retrywhen new function flowable extends throwable publisher object override public publisher object apply flowable extends throwable e return null blockingget 
just1 subscribe null new consumer throwable override public void accept throwable e 
just1 zipwith just1 new bifunction integer integer object override public object apply integer a integer b return null blockingget 
final atomicinteger atomicinteger new atomicinteger 3 final atomicinteger new atomicinteger 0 single fromcallable new callable boolean override public boolean call throws exception incrementandget if atomicinteger decrementandget 0 throw new runtimeexception throw new retry integer max value new predicate throwable override public boolean test final throwable throwable throws exception return throwable instanceof test assertfailure class assertequals 3 get 
final atomicinteger atomicinteger new atomicinteger 3 final atomicinteger new atomicinteger 0 single fromcallable new callable boolean override public boolean call throws exception incrementandget if atomicinteger decrementandget 0 throw new runtimeexception return true retry 2 functions alwaystrue test assertresult true assertequals 3 get 
final atomicinteger atomicinteger new atomicinteger 3 final atomicinteger new atomicinteger 0 single fromcallable new callable boolean override public boolean call throws exception incrementandget if atomicinteger decrementandget 0 throw new runtimeexception return true retry 1 functions alwaystrue test assertfailure runtimeexception class assertequals 2 get 
final atomicinteger atomicinteger new atomicinteger 2 final atomicinteger new atomicinteger 0 single fromcallable new callable boolean override public boolean call throws exception incrementandget if atomicinteger decrementandget 0 throw new runtimeexception return true retry 0 functions alwaystrue test assertfailure runtimeexception class assertequals 1 get 
single just 1 retryuntil true test assertresult 1 
single just 1 retryuntil false test assertresult 1 
single error new testexception retryuntil true test assertfailure testexception class 
atomicinteger counter new atomicinteger single defer if counter getandincrement 0 return single error new testexception return single just 1 retryuntil false test assertresult 1 
observer testhelper mockobserver 
return new serializedobserver o 
onsubscribe new one two three observable string w observable unsafecreate onsubscribe observer string aw serializedobserver observer w subscribe aw onsubscribe waittofinish verify observer times 1 onnext one verify observer times 1 onnext two verify observer times 1 onnext three verify observer never onerror any throwable class verify observer times 1 oncomplete 
onsubscribe new one two three observable string w observable unsafecreate onsubscribe busyobserver busysubscriber new busyobserver observer string aw serializedobserver busysubscriber w subscribe aw onsubscribe waittofinish assertequals 3 busysubscriber onnextcount get assertfalse busysubscriber onerror asserttrue busysubscriber oncomplete asserttrue onsubscribe maxconcurrentthreads get 1 assertequals 1 busysubscriber maxconcurrentthreads get 
onsubscribe new one two three null observable string w observable unsafecreate onsubscribe busyobserver busysubscriber new busyobserver observer string aw serializedobserver busysubscriber w subscribe aw onsubscribe waittofinish busysubscriber terminalevent await system out println onsubscribe maxconcurrentthreads onsubscribe maxconcurrentthreads get observer maxconcurrentthreads busysubscriber maxconcurrentthreads get asserttrue busysubscriber onnextcount get 4 asserttrue busysubscriber onerror assertfalse busysubscriber oncomplete asserttrue onsubscribe maxconcurrentthreads get 1 assertequals 1 busysubscriber maxconcurrentthreads get 
int n 10 for int i 0 i n i onsubscribe new one two three null four five six seven eight nine observable string w observable unsafecreate onsubscribe busyobserver busysubscriber new busyobserver observer string aw serializedobserver busysubscriber w subscribe aw onsubscribe waittofinish system out println onsubscribe maxconcurrentthreads onsubscribe maxconcurrentthreads get observer maxconcurrentthreads busysubscriber maxconcurrentthreads get asserttrue onsubscribe maxconcurrentthreads get 1 assertequals 1 busysubscriber maxconcurrentthreads get system out println onnext count busysubscriber onnextcount get assertfalse busysubscriber oncomplete asserttrue busysubscriber onerror asserttrue busysubscriber onnextcount get 9 
executorservice tp executors newfixedthreadpool 20 list throwable errors testhelper trackpluginerrors try tw new observer string w serializedobserver new safeobserver tw future f1 tp submit new onnextthread w future f2 tp submit new onnextthread w 5000 future f3 tp submit new onnextthread w future f4 tp submit new onnextthread w future f5 tp submit new onnextthread w future f6 tp submit new onnextthread w future f7 tp submit new onnextthread w 7500 future f8 tp submit new onnextthread w future f10 tp submit new completionthread w oncomplete f1 f2 f3 f4 try thread sleep 1 catch interruptedexception e future f11 tp submit new completionthread w oncomplete f4 f6 f7 future f12 tp submit new completionthread w oncomplete f4 f6 f7 future f13 tp submit new completionthread w oncomplete f4 f6 f7 future f14 tp submit new completionthread w oncomplete f4 f6 f7 future f15 tp submit new completionthread w onerror f1 f2 f3 f4 future f16 tp submit new completionthread w onerror f1 f2 f3 f4 future f17 tp submit new completionthread w onerror f1 f2 f3 f4 future f18 tp submit new completionthread w onerror f1 f2 f3 f4 waitonthreads f1 f2 f3 f4 f5 f6 f7 f8 f10 f11 f12 f13 f14 f15 f16 f17 f18 suppresswarnings unused int numnextevents tw assertevents null for int i 0 i errors size i testhelper assertundeliverable errors i runtimeexception class catch throwable e fail concurrency test failed e getmessage e printstacktrace finally tp shutdown try tp awaittermination 5000 timeunit milliseconds catch interruptedexception e e printstacktrace rxjavaplugins reset 
executorservice tp executors newfixedthreadpool 20 try tw new observer string w serializedobserver new safeobserver tw w onsubscribe disposable empty future f1 tp submit new onnextthread w future f2 tp submit new onnextthread w 5000 future f3 tp submit new onnextthread w future f4 tp submit new onnextthread w future f5 tp submit new onnextthread w future f6 tp submit new onnextthread w future f7 tp submit new onnextthread w 7500 future f8 tp submit new onnextthread w future f10 tp submit new completionthread w oncomplete f1 f2 f3 f4 f5 f6 f7 f8 try thread sleep 1 catch interruptedexception e waitonthreads f1 f2 f3 f4 f5 f6 f7 f8 f10 int numnextevents tw assertevents null assertequals numnextevents catch throwable e fail concurrency test failed e getmessage e printstacktrace finally tp shutdown try tp awaittermination timeunit milliseconds catch interruptedexception e e printstacktrace 
executorservice tp1 executors newfixedthreadpool 1 executorservice tp2 executors newfixedthreadpool 1 try int n 10 for int i 0 i n i final countdownlatch firstonnext new countdownlatch 1 final countdownlatch onnextcount new countdownlatch 2 final countdownlatch latch new countdownlatch 1 final countdownlatch running new countdownlatch 2 testobserverex string to new testobserverex new defaultobserver string override public void oncomplete override public void onerror throwable e override public void onnext string t firstonnext countdown try latch await catch interruptedexception e observer string o serializedobserver to future f1 tp1 submit new onnextthread o 1 onnextcount running future f2 tp2 submit new onnextthread o 1 onnextcount running running await firstonnext await thread t1 to lastthread system out println first onnext on thread t1 latch countdown waitonthreads f1 f2 assertequals 2 to values size thread t2 to lastthread system out println second onnext on thread t2 assertsame t1 t2 system out println to values o oncomplete system out println to values finally tp1 shutdown tp2 shutdown 
$EMPTY$
$EMPTY$
firstonnext countdown try latch await catch interruptedexception e 
testobserver string to new testobserver new defaultobserver string override public void oncomplete override public void onerror throwable e override public void onnext string t try thread sleep 1 catch interruptedexception e final observer string o serializedobserver to atomicinteger p1 new atomicinteger atomicinteger p2 new atomicinteger o onsubscribe disposable empty disposableobserver string as1 new disposableobserver string override public void onnext string t o onnext t override public void onerror throwable t rxjavaplugins onerror t override public void oncomplete disposableobserver string as2 new disposableobserver string override public void onnext string t o onnext t override public void onerror throwable t rxjavaplugins onerror t override public void oncomplete infinite p1 subscribe as1 infinite p2 subscribe as2 thread sleep 100 system out println p1 p1 get p2 p2 get should be close to each other unless we have thread starvation assertequals p1 get p2 get as1 dispose as2 dispose 
$EMPTY$
$EMPTY$
try thread sleep 1 catch interruptedexception e 
return observable unsafecreate new observablesource string override public void subscribe observer super string observer disposable bs disposable empty observer onsubscribe bs while bs isdisposed observer onnext onnext produced incrementandget subscribeon schedulers newthread 
disposable bs disposable empty observer onsubscribe bs while bs isdisposed observer onnext onnext produced incrementandget 
if running null running countdown for int i 0 i numstringstosend i observer onnext thread currentthread getid i if latch null latch countdown produced incrementandget 
if waitonthese null for future f waitonthese try f get catch throwable e system err println error while waiting on future in completionthread if event onerror observer onerror new runtimeexception mocked exception else if event oncomplete observer oncomplete else throw new expecting either onerror or oncomplete 
observer onsubscribe disposable empty system out println subscribed to t new thread new runnable override public void run try system out println running thread for string s values system out println onnext s observer onnext s observer oncomplete catch throwable e throw new runtimeexception e system out println starting thread t start system out println done starting thread 
try t join catch interruptedexception e throw new runtimeexception e 
try t join catch interruptedexception e throw new runtimeexception e 
int concurrentthreads threadsrunning get int maxthreads maxconcurrentthreads get if concurrentthreads maxthreads maxconcurrentthreads compareandset maxthreads concurrentthreads if concurrentthreads 1 new runtimeexception should not be greater than 1 printstacktrace 
list throwable errors testhelper trackpluginerrors try final atomicreference observer integer serial new atomicreference testobserver integer to new testobserver integer override public void onnext integer v serial get onerror new testexception serial get onerror new testexception super onnext v serializedobserver integer sobs new serializedobserver to sobs onsubscribe disposable empty serial set sobs sobs onnext 1 to assertvalue 1 to asserterror testexception class testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
final atomicreference observer integer serial new atomicreference testobserver integer to new testobserver integer override public void onnext integer v serial get oncomplete serial get oncomplete super onnext v serializedobserver integer sobs new serializedobserver to sobs onsubscribe disposable empty serial set sobs sobs onnext 1 to assertvalue 1 to assertcomplete to assertnoerrors 
testobserver integer to new testobserver serializedobserver integer so new serializedobserver to disposable d disposable empty so onsubscribe d assertfalse so isdisposed to dispose asserttrue so isdisposed asserttrue d isdisposed 
for int i 0 i testhelper race default loops i testobserver integer to new testobserver final serializedobserver integer so new serializedobserver to disposable d disposable empty so onsubscribe d runnable r new runnable override public void run so oncomplete testhelper race r r to awaitdone 5 timeunit seconds assertresult 
for int i 0 i testhelper race default loops i testobserver integer to new testobserver final serializedobserver integer so new serializedobserver to disposable d disposable empty so onsubscribe d runnable r1 new runnable override public void run so oncomplete runnable r2 new runnable override public void run so onnext 1 testhelper race r1 r2 to awaitdone 5 timeunit seconds assertnoerrors assertcomplete asserttrue to values size 1 
for int i 0 i testhelper race default loops i testobserver integer to new testobserver final serializedobserver integer so new serializedobserver to disposable d disposable empty so onsubscribe d final throwable ex new testexception runnable r1 new runnable override public void run so onerror ex runnable r2 new runnable override public void run so onnext 1 testhelper race r1 r2 to awaitdone 5 timeunit seconds asserterror ex assertnotcomplete asserttrue to values size 1 
for int i 0 i testhelper race default loops i testobserver integer to new testobserver final serializedobserver integer so new serializedobserver to true disposable d disposable empty so onsubscribe d final throwable ex new testexception runnable r1 new runnable override public void run so onerror ex runnable r2 new runnable override public void run so onnext 1 testhelper race r1 r2 to awaitdone 5 timeunit seconds asserterror ex assertnotcomplete asserttrue to values size 1 
list throwable error testhelper trackpluginerrors try testobserver integer to new testobserver final serializedobserver integer so new serializedobserver to so onsubscribe disposable empty disposable d disposable empty so onsubscribe d asserttrue d isdisposed testhelper asserterror error 0 class disposable already set finally rxjavaplugins reset 
for int i 0 i testhelper race default loops i list throwable errors testhelper trackpluginerrors try testobserverex integer to new testobserverex final serializedobserver integer so new serializedobserver to disposable d disposable empty so onsubscribe d final throwable ex new testexception runnable r1 new runnable override public void run so onerror ex runnable r2 new runnable override public void run so oncomplete testhelper race r1 r2 to awaitdone 5 timeunit seconds if to completions 0 to assertresult else to assertfailure testexception class asserterror ex for throwable e errors asserttrue e tostring e getcause instanceof testexception finally rxjavaplugins reset 
testobserverex integer to new testobserverex final serializedobserver integer so new serializedobserver to disposable d disposable empty so onsubscribe d so onnext null to nullpointerexception class exceptionhelper nullwarning onnext called with a null value 
atomicreference serializedobserver integer soref new atomicreference testobserverex integer to new testobserverex integer override public void onnext integer t super onnext t soref get onnext 2 soref get onerror new testexception final serializedobserver integer so new serializedobserver to true soref set so disposable d disposable empty so onsubscribe d so onnext 1 to assertfailure testexception class 1 2 
assertequals message assertthrows clazz run getmessage 
asserttrue assertthrows clazz run getmessage matches regex 
flowable integer oi flowable fromiterable arrays aslist 1 2 testsubscriber integer subscriber new testsubscriber oi subscribe subscriber subscriber assertvalues 1 2 subscriber assertvaluecount 2 subscriber assertcomplete assertnoerrors 
assertthrows assertionerror class flowable integer oi flowable fromiterable arrays aslist 1 2 testsubscriber integer subscriber new testsubscriber oi subscribe subscriber subscriber assertvalue 1 subscriber assertvaluecount 2 subscriber assertcomplete assertnoerrors 
assertthrows assertionerror class flowable integer oi flowable fromiterable arrays aslist 1 2 testsubscriber integer subscriber new testsubscriber oi subscribe subscriber subscriber assertvalues 1 3 subscriber assertvaluecount 2 subscriber assertcomplete assertnoerrors 
assertthrows assertionerror class publishprocessor integer p publishprocessor create testsubscriber integer subscriber new testsubscriber p subscribe subscriber p onnext 1 p onnext 2 subscriber assertvalues 1 2 subscriber assertvaluecount 2 subscriber assertcomplete assertnoerrors 
flowable integer oi flowable fromiterable arrays aslist 1 2 subscriber integer mocksubscriber testhelper mocksubscriber oi subscribe new testsubscriber mocksubscriber inorder inorder inorder mocksubscriber inorder verify mocksubscriber times 1 onnext 1 inorder verify mocksubscriber times 1 onnext 2 inorder verify mocksubscriber times 1 oncomplete inorder 
flowable integer oi flowable fromiterable arrays aslist 1 2 3 4 5 6 7 8 9 take 2 subscriber integer mocksubscriber testhelper mocksubscriber oi subscribe new testsubscriber mocksubscriber inorder inorder inorder mocksubscriber inorder verify mocksubscriber times 1 onnext 1 inorder verify mocksubscriber times 1 onnext 2 inorder verify mocksubscriber times 1 oncomplete inorder 
flowable error new runtimeexception subscribe new testsubscriber 
testsubscriber integer ts new testsubscriber ts onnext 1 try ts assertvalue integer null catch assertionerror ex return fail null element check assertion didn t happen 
testsubscriber integer ts new testsubscriber ts onnext null try ts assertvalue 1 catch assertionerror ex return fail null element check assertion didn t happen 
testobserver integer to1 testobserver create testobserver integer to testobserver create to1 assertfalse to hassubscription to onsubscribe disposable empty asserttrue to hassubscription assertfalse to isdisposed to onnext 1 to onerror new testexception to oncomplete to1 assertvalue 1 asserterror testexception class assertcomplete to dispose asserttrue to isdisposed try to assertnovalues throw new runtimeexception should have thrown catch assertionerror exc try to assertvaluecount 0 throw new runtimeexception should have thrown catch assertionerror exc to assertvaluesequence collections singletonlist 1 try to assertvaluesequence collections singletonlist 2 throw new runtimeexception should have thrown catch assertionerror exc 
testobserver integer to testobserver create try to asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex try to asserterror new testexception throw new runtimeexception should have thrown catch assertionerror ex try to asserterror functions throwable alwaystrue throw new runtimeexception should have thrown catch assertionerror ex try to assertsubscribed throw new runtimeexception should have thrown catch assertionerror exc to onsubscribe disposable empty to assertsubscribed to assertnoerrors testexception ex new testexception forced failure to onerror ex to asserterror ex to asserterror testexception class to asserterror functions throwable alwaystrue to asserterror new predicate throwable override public boolean test throwable t throws exception return t getmessage null t getmessage contains forced try to asserterror new runtimeexception throw new runtimeexception should have thrown catch assertionerror exc try to asserterror ioexception class throw new runtimeexception should have thrown catch assertionerror exc try to asserterror functions throwable alwaysfalse throw new runtimeexception should have thrown catch assertionerror exc try to assertnoerrors throw new runtimeexception should have thrown catch assertionerror exc to assertvaluecount 0 to assertnovalues 
assertequals 1 testobserver emptyobserver values length assertnotnull testobserver emptyobserver valueof instance 
assertequals null testobserver valueandclass null assertequals 1 class integer testobserver valueandclass 1 
testobserver integer to testobserver create to onsubscribe disposable empty to onerror new testexception forced failure to assertfailure testexception class to onnext 1 to assertfailure testexception class 1 
testobserver integer to testobserver create to onsubscribe disposable empty to testobserver create to onsubscribe new scalardisposable to 1 
testobserver integer to testobserver create to onsubscribe disposable empty to oncomplete to assertresult try to assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex to onnext 1 to assertresult 1 try to assertresult 2 throw new runtimeexception should have thrown catch assertionerror ex try to assertresult throw new runtimeexception should have thrown catch assertionerror ex 
testobserver integer to testobserver create to onsubscribe disposable empty assertfalse to await 100 timeunit milliseconds to awaitdone 100 timeunit milliseconds asserttrue to isdisposed assertfalse to await 100 timeunit milliseconds to assertnotcomplete to assertnoerrors to oncomplete asserttrue to await 100 timeunit milliseconds to await to awaitdone 5 timeunit seconds to assertcomplete to assertnoerrors asserttrue to await 5 timeunit seconds final testobserver integer to1 testobserver create to1 onsubscribe disposable empty schedulers single scheduledirect new runnable override public void run to1 oncomplete 200 timeunit milliseconds to1 await 
testobserver integer to testobserver create to onsubscribe disposable empty assertequals 0 to values size assertequals collections emptylist to values to onnext 1 assertequals collections singletonlist 1 to values to dispose asserttrue to isdisposed to assertvalue 1 to oncomplete 
testobserver integer to testobserver create to onsubscribe disposable empty to assertnotcomplete to oncomplete try to assertnotcomplete throw new runtimeexception should have thrown catch throwable ex to oncomplete try to assertcomplete throw new runtimeexception should have thrown catch throwable ex try to assertnotcomplete throw new runtimeexception should have thrown catch throwable ex 
testobserver integer to testobserver create to onsubscribe disposable empty try to assertvalue 1 throw new runtimeexception should have thrown catch throwable ex to onnext 1 to assertvalue 1 try to assertvalue 2 throw new runtimeexception should have thrown catch throwable ex to onnext 2 try to assertvalue 1 throw new runtimeexception should have thrown catch throwable ex 
testobserver integer to testobserver create to onnext 1 to asserterror class to testobserver create to onsubscribe disposable empty to onnext null to assertfailure nullpointerexception class integer null 
final testobserver integer to testobserver create to onsubscribe disposable empty thread currentthread interrupt try to awaitdone 5 timeunit seconds catch runtimeexception allowed asserttrue allowed tostring allowed getcause instanceof interruptedexception thread currentthread interrupt try to awaitdone 5 timeunit seconds catch runtimeexception allowed asserttrue allowed tostring allowed getcause instanceof interruptedexception 
testobserver integer to testobserver create to onsubscribe disposable empty to onerror new testexception to onerror new ioexception try to asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex to testobserver create to onsubscribe disposable empty to onerror new testexception to oncomplete 
testobserver integer to testobserver create to onsubscribe null to asserterror nullpointerexception class to testobserver create to onsubscribe disposable empty disposable d1 disposable empty to onsubscribe d1 asserttrue d1 isdisposed to asserterror class to testobserver create to dispose d1 disposable empty to onsubscribe d1 asserttrue d1 isdisposed 
testobserver integer to testobserver create to onsubscribe disposable empty to onnext 1 to onnext 2 try to assertvaluesequence collections integer emptylist throw new runtimeexception should have thrown catch assertionerror expected asserttrue expected getmessage expected getmessage startswith more values received than expected 0 try to assertvaluesequence collections singletonlist 1 throw new runtimeexception should have thrown catch assertionerror expected asserttrue expected getmessage expected getmessage startswith more values received than expected 1 to assertvaluesequence arrays aslist 1 2 try to assertvaluesequence arrays aslist 1 2 3 throw new runtimeexception should have thrown catch assertionerror expected asserttrue expected getmessage expected getmessage startswith fewer values received than expected 2 
testobserver integer to new testobserver try to assertempty throw new runtimeexception should have thrown catch assertionerror ex to onsubscribe disposable empty to assertempty to onnext 1 try to assertempty throw new runtimeexception should have thrown catch assertionerror ex 
testobserver integer to new testobserver thread currentthread interrupt try to awaitdone 5 timeunit seconds catch runtimeexception ex asserttrue ex tostring ex getcause instanceof interruptedexception 
testobserver integer to new testobserver testexception e new testexception to onerror e to onerror new testexception try to asserterror testexception class throw new runtimeexception should have thrown catch assertionerror ex try to asserterror e throw new runtimeexception should have thrown catch assertionerror ex try to asserterror functions throwable alwaystrue throw new runtimeexception should have thrown catch assertionerror ex 
testobserver object to new testobserver to onerror new runtimeexception try to asserterror new predicate throwable override public boolean test throwable throwable throws exception throw new testexception catch testexception ex return fail error in predicate but not thrown 
testobserver integer to new testobserver to onsubscribe disposable empty try to assertcomplete throw new runtimeexception should have thrown catch assertionerror ex to oncomplete to assertcomplete to oncomplete try to assertcomplete throw new runtimeexception should have thrown catch assertionerror ex 
testobserver integer to new testobserver to oncomplete to asserterror class 
testobserver integer to new testobserver new observer integer override public void onsubscribe disposable d override public void onnext integer value override public void onerror throwable e throw new testexception override public void oncomplete throw new testexception to onsubscribe disposable empty try to oncomplete throw new runtimeexception should have thrown catch testexception ex to assertcomplete assertnoerrors 
testobserver integer to new testobserver new observer integer override public void onsubscribe disposable d override public void onnext integer value override public void onerror throwable e throw new testexception override public void oncomplete throw new testexception to onsubscribe disposable empty try to onerror new ioexception throw new runtimeexception should have thrown catch testexception ex to assertnotcomplete asserterror throwable class 
assertfalse observable just 1 test assertresult 1 isdisposed 
assertfalse observable error new testexception test assertfailure testexception class isdisposed 
no values latch 0 values 0 errors 0 completions 1 assertionerror class testobserver object to new testobserver observable empty subscribe to to assertvalue new predicate object override public boolean test final object o throws exception return false 
testobserver integer to new testobserver observable just 1 subscribe to to assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
value 1 class integer at position 0 did not pass the predicate latch 0 values 1 errors 0 completions 1 assertionerror class testobserver integer to new testobserver observable just 1 subscribe to to assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
the first value passed the predicate but this consumer received more than one value latch 0 values 2 errors 0 completions 1 assertionerror class testobserver integer to new testobserver observable just 1 2 subscribe to to assertvalue new predicate integer override public boolean test final integer o throws exception return o 1 
no values latch 0 values 0 errors 0 completions 1 assertionerror class testobserver object to new testobserver observable empty subscribe to to assertvalueat 0 new predicate object override public boolean test final object o throws exception return false 
testobserver integer to new testobserver observable just 1 2 subscribe to to assertvalueat 1 new predicate integer override public boolean test final integer o throws exception return o 2 
value 3 class integer at position 2 did not pass the predicate latch 0 values 3 errors 0 completions 1 assertionerror class testobserver integer to new testobserver observable just 1 2 3 subscribe to to assertvalueat 2 new predicate integer override public boolean test final integer o throws exception return o 3 
index 2 is out of range 0 2 latch 0 values 2 errors 0 completions 1 assertionerror class testobserver integer to new testobserver observable just 1 2 subscribe to to assertvalueat 2 new predicate integer override public boolean test final integer o throws exception return o 1 
index 2 is out of range 0 2 latch 0 values 2 errors 0 completions 1 assertionerror class testobserver integer to new testobserver observable just 1 2 subscribe to to assertvalueat 2 new predicate integer override public boolean test final integer o throws exception return o 1 
no values latch 0 values 0 errors 0 completions 1 assertionerror class testobserver object to new testobserver observable empty subscribe to to assertvalueat 0 a 
testobserver string to new testobserver observable just a b subscribe to to assertvalueat 1 b 
nexpected b class string ngot c class string value at position 2 differ latch 0 values 3 errors 0 completions 1 assertionerror class testobserver string to new testobserver observable just a b c subscribe to to assertvalueat 2 b 
assert message regex assertionerror class testobserver string to new testobserver observable just a b c subscribe to to assertvalueat 2 b 
nexpected 2 a b ngot 3 a b c value count differs latch 0 values 3 errors 0 completions 1 assertionerror class testobserver string to new testobserver observable just a b c subscribe to to assertvalues a b 
assert message regex assertionerror class testobserver string to new testobserver observable just a b c subscribe to to assertvalues a b 
nexpected d class string ngot c class string value at position 2 differ latch 0 values 3 errors 0 completions 1 assertionerror class testobserver string to new testobserver observable just a b c subscribe to to assertvalues a b d 
assert message regex assertionerror class testobserver string to new testobserver observable just a b c subscribe to to assertvalues a b d 
nexpected 2 ngot 3 value counts differ latch 0 values 3 errors 0 completions 1 assertionerror class testobserver string to new testobserver observable just a b c subscribe to to assertvaluecount 2 
assert message regex assertionerror class testobserver string to new testobserver observable just a b c subscribe to to assertvaluecount 2 
nexpected d class string ngot c class string value at position 2 differ latch 0 values 3 errors 0 completions 1 assertionerror class testobserver string to new testobserver observable just a b c subscribe to to assertvaluesequence arrays aslist a b d 
assert message regex assertionerror class testobserver string to new testobserver observable just a b c subscribe to to assertvaluesequence arrays aslist a b d 
index 2 is out of range 0 2 latch 0 values 2 errors 0 completions 1 assertionerror class testobserver string to new testobserver observable just a b subscribe to to assertvalueat 2 c 
index 2 is out of range 0 2 latch 0 values 2 errors 0 completions 1 assertionerror class testobserver string to new testobserver observable just a b subscribe to to assertvalueat 2 c 
try for int i 1 i 3 i observable just i test withtag testing with item i assertresult 1 throw new runtimeexception should have thrown catch assertionerror ex asserttrue ex tostring ex tostring contains testing with item 2 
testobserver integer to testobserver create to onsubscribe disposable empty to assertvaluesonly to onnext 5 to assertvaluesonly 5 to onnext 1 to assertvaluesonly 5 1 
testobserver integer to testobserver create to onsubscribe disposable empty to assertvaluesonly to onnext 5 to assertvaluesonly 5 to onnext 1 try to assertvaluesonly 5 throw new runtimeexception catch assertionerror ex 
testobserver integer to testobserver create to onsubscribe disposable empty to oncomplete try to assertvaluesonly throw new runtimeexception catch assertionerror ex 
testobserver integer to testobserver create to onsubscribe disposable empty to onerror new testexception try to assertvaluesonly throw new runtimeexception catch assertionerror ex 
testobserver integer to testobserver create to onsubscribe disposable empty to onerror null to assertfailure nullpointerexception class 
testobserver integer to testobserver create to onsubscribe disposable empty to awaitcount 1 asserttrue to timeout 
try testobserver integer to testobserver create to onsubscribe disposable empty thread currentthread interrupt to awaitcount 1 finally thread interrupted 
super onstart start 
complete dispose 
errors add e dispose 
integer rmo new rmo add null 
integer rmo new assertfalse rmo isdisposed disposable d disposable empty rmo add d assertfalse d isdisposed rmo dispose asserttrue rmo isdisposed asserttrue d isdisposed rmo dispose asserttrue rmo isdisposed asserttrue d isdisposed 
integer rmo new assertfalse rmo isdisposed disposable d disposable empty rmo add d assertfalse d isdisposed rmo oncomplete asserttrue rmo isdisposed asserttrue d isdisposed 
integer rmo new assertfalse rmo isdisposed disposable d disposable empty rmo add d assertfalse d isdisposed rmo onsuccess 1 asserttrue rmo isdisposed asserttrue d isdisposed 
integer rmo new assertfalse rmo isdisposed disposable d disposable empty rmo add d assertfalse d isdisposed rmo onerror new testexception asserttrue rmo isdisposed asserttrue d isdisposed 
integer rmo new assertfalse rmo isdisposed assertequals 0 rmo start assertnull rmo value asserttrue rmo errors isempty maybe just 1 subscribe rmo asserttrue rmo isdisposed assertequals 1 rmo start assertequals integer valueof 1 rmo value assertequals 0 rmo complete asserttrue rmo errors isempty 
integer rmo new assertfalse rmo isdisposed assertequals 0 rmo start assertnull rmo value asserttrue rmo errors isempty maybe integer empty subscribe rmo asserttrue rmo isdisposed assertequals 1 rmo start assertnull rmo value assertequals 1 rmo complete asserttrue rmo errors isempty 
integer rmo new assertfalse rmo isdisposed assertequals 0 rmo start assertnull rmo value asserttrue rmo errors isempty final runtimeexception error new runtimeexception error maybe integer error error subscribe rmo asserttrue rmo isdisposed assertequals 1 rmo start assertnull rmo value assertequals 0 rmo complete assertequals 1 rmo errors size asserttrue rmo errors contains error 
list throwable error testhelper trackpluginerrors try integer rmo new rmo onsubscribe disposable empty disposable d disposable empty rmo onsubscribe d asserttrue d isdisposed assertequals 1 rmo start testhelper asserterror error 0 class endconsumerhelper composemessage rmo getclass getname finally rxjavaplugins reset 
integer rmo new rmo dispose disposable d disposable empty rmo onsubscribe d asserttrue d isdisposed assertequals 0 rmo start 
super onstart start 
errors add e 
testsingle integer tc new testsingle assertfalse tc isdisposed assertequals 0 tc start asserttrue tc values isempty asserttrue tc errors isempty single just 1 subscribe tc assertfalse tc isdisposed assertequals 1 tc start assertequals 1 tc values get 0 intvalue asserttrue tc errors isempty 
list throwable error testhelper trackpluginerrors try testsingle integer tc new testsingle tc onsubscribe disposable empty disposable d disposable empty tc onsubscribe d asserttrue d isdisposed assertequals 1 tc start testhelper asserterror error 0 class endconsumerhelper composemessage tc getclass getname finally rxjavaplugins reset 
testsingle integer tc new testsingle tc dispose asserttrue tc isdisposed disposable d disposable empty tc onsubscribe d asserttrue d isdisposed assertequals 0 tc start 
super onstart start 
complete dispose 
errors add e dispose 
rco new rco add null 
rco new assertfalse rco isdisposed disposable d disposable empty rco add d assertfalse d isdisposed rco dispose asserttrue rco isdisposed asserttrue d isdisposed rco dispose asserttrue rco isdisposed asserttrue d isdisposed 
rco new assertfalse rco isdisposed disposable d disposable empty rco add d assertfalse d isdisposed rco oncomplete asserttrue rco isdisposed asserttrue d isdisposed 
rco new assertfalse rco isdisposed disposable d disposable empty rco add d assertfalse d isdisposed rco onerror new testexception asserttrue rco isdisposed asserttrue d isdisposed 
rco new assertfalse rco isdisposed assertequals 0 rco start asserttrue rco errors isempty completable complete subscribe rco asserttrue rco isdisposed assertequals 1 rco start assertequals 1 rco complete asserttrue rco errors isempty 
rco new assertfalse rco isdisposed assertequals 0 rco start asserttrue rco errors isempty final runtimeexception error new runtimeexception error completable error error subscribe rco asserttrue rco isdisposed assertequals 1 rco start assertequals 0 rco complete assertequals 1 rco errors size asserttrue rco errors contains error 
list throwable error testhelper trackpluginerrors try rco new rco onsubscribe disposable empty disposable d disposable empty rco onsubscribe d asserttrue d isdisposed assertequals 1 rco start testhelper asserterror error 0 class endconsumerhelper composemessage rco getclass getname finally rxjavaplugins reset 
rco new rco dispose disposable d disposable empty rco onsubscribe d asserttrue d isdisposed assertequals 0 rco start 
super onstart start 
errors add e 
completions 
integer tc new assertfalse tc isdisposed assertequals 0 tc start asserttrue tc values isempty asserttrue tc errors isempty observable just 1 subscribe tc assertfalse tc isdisposed assertequals 1 tc start assertequals 1 tc values get 0 intvalue asserttrue tc errors isempty 
list throwable error testhelper trackpluginerrors try integer tc new tc onsubscribe disposable empty disposable d disposable empty tc onsubscribe d asserttrue d isdisposed assertequals 1 tc start testhelper asserterror error 0 class endconsumerhelper composemessage tc getclass getname finally rxjavaplugins reset 
integer tc new assertfalse tc isdisposed tc dispose asserttrue tc isdisposed disposable d disposable empty tc onsubscribe d asserttrue d isdisposed assertequals 0 tc start 
super onstart start 
errors add e 
complete 
testmaybe integer tc new testmaybe assertfalse tc isdisposed assertequals 0 tc start asserttrue tc values isempty asserttrue tc errors isempty assertequals 0 tc complete maybe just 1 subscribe tc assertfalse tc isdisposed assertequals 1 tc start assertequals 1 tc values get 0 intvalue asserttrue tc errors isempty assertequals 0 tc complete 
list throwable error testhelper trackpluginerrors try testmaybe integer tc new testmaybe tc onsubscribe disposable empty disposable d disposable empty tc onsubscribe d asserttrue d isdisposed assertequals 1 tc start testhelper asserterror error 0 class endconsumerhelper composemessage tc getclass getname finally rxjavaplugins reset 
testmaybe integer tc new testmaybe tc dispose asserttrue tc isdisposed disposable d disposable empty tc onsubscribe d asserttrue d isdisposed assertequals 0 tc start 
atomicreference throwable onerror new atomicreference try observer onnext fail onerror onnext one fail expects exception to be thrown catch exception e assertnull onerror get asserttrue e instanceof assertequals onnextfail e getmessage 
atomicreference throwable onerror new atomicreference try safeobserver string safeobserver new safeobserver observer onnext fail onerror safeobserver onsubscribe disposable empty safeobserver onnext one assertnotnull onerror get asserttrue onerror get instanceof assertequals onnextfail onerror get getmessage catch exception e fail expects exception to be passed to onerror 
atomicreference throwable onerror new atomicreference try observer oncompleted fail onerror oncomplete fail expects exception to be thrown catch exception e assertnull onerror get asserttrue e instanceof assertequals oncompletefail e getmessage 
try observer onerror fail onerror new error fail expects exception to be thrown catch exception e asserttrue e instanceof assertequals onerrorfail e getmessage 
try observer onnext onerror fail onnext one fail expects exception to be thrown catch exception e e printstacktrace asserttrue e instanceof assertequals onnextfail e getmessage 
return new defaultobserver string override public void oncomplete override public void onerror throwable e onerror set e override public void onnext string args throw new onnextfail 
$EMPTY$
onerror set e 
return new defaultobserver string override public void oncomplete override public void onerror throwable e throw new onerrorfail override public void onnext string args throw new onnextfail 
return new defaultobserver string override public void oncomplete override public void onerror throwable e throw new onerrorfail override public void onnext string args 
return new defaultobserver string override public void oncomplete throw new oncompletefail override public void onerror throwable e onerror set e override public void onnext string args 
observer integer actual new defaultobserver integer override public void onnext integer t override public void onerror throwable e override public void oncomplete safeobserver integer observer new safeobserver actual assertsame actual observer downstream 
testobserver integer to new testobserver safeobserver integer so new safeobserver to disposable d disposable empty so onsubscribe d to dispose asserttrue d isdisposed asserttrue so isdisposed 
testobserver integer to new testobserver safeobserver integer so new safeobserver to disposable d disposable empty so onsubscribe d so oncomplete so onnext 1 so onerror new testexception so oncomplete to assertresult 
testobserver integer to new testobserver safeobserver integer so new safeobserver to disposable d disposable empty so onsubscribe d so onnext null to assertfailure nullpointerexception class 
testobserverex integer to new testobserverex safeobserver integer so new safeobserver to so onnext 1 to nullpointerexception class subscription not set 
testobserverex integer to new testobserverex safeobserver integer so new safeobserver to so onerror new testexception to assertfailure compositeexception class testhelper asserterror to 0 testexception class testhelper asserterror to 1 nullpointerexception class subscription not set 
testobserverex integer to new testobserverex safeobserver integer so new safeobserver to so oncomplete to nullpointerexception class subscription not set 
testobserver integer to new testobserver safeobserver integer so new safeobserver to disposable d disposable empty so onsubscribe d so onnext 1 so oncomplete to assertresult 1 
if crashdispose throw new testexception dispose 
return false 
if crashonsubscribe throw new testexception onsubscribe 
if crashonnext 0 throw new testexception onnext value 
return new safeobserver this 
if clazz isinstance error throw new assertionerror different error error return this 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 true false false safeobserver object so cd tosafe so onsubscribe cd so onnext 1 testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 testexception class onnext 1 testhelper asserterror ce 1 testexception class onerror io reactivex rxjava3 exceptions testexception onnext 1 finally rxjavaplugins reset 
crashdummy cd new crashdummy false 1 false false true safeobserver object so cd tosafe so onsubscribe cd so onnext 1 cd asserterror compositeexception class cd assertinnererror 0 testexception class onnext 1 cd assertinnererror 1 testexception class dispose 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 false false false safeobserver object so cd tosafe so onsubscribe cd so onsubscribe cd testhelper asserterror list 0 class finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy true 1 false false false safeobserver object so cd tosafe so onsubscribe cd testhelper assertundeliverable list 0 testexception class onsubscribe finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy true 1 false false true safeobserver object so cd tosafe so onsubscribe cd testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 testexception class onsubscribe testhelper asserterror ce 1 testexception class dispose finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy true 1 false false false safeobserver object so cd tosafe so onnext 1 testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 nullpointerexception class subscription not set testhelper asserterror ce 1 testexception class onsubscribe finally rxjavaplugins reset 
crashdummy cd new crashdummy false 1 false false true safeobserver object so cd tosafe so onsubscribe cd so onnext null cd assertinnererror 0 nullpointerexception class cd assertinnererror 1 testexception class dispose 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 true false false safeobserver object so cd tosafe so onnext 1 testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 nullpointerexception class subscription not set testhelper asserterror ce 1 testexception class onerror java lang nullpointerexception subscription not set finally rxjavaplugins reset 
crashdummy cd new crashdummy false 1 false false false safeobserver object so cd tosafe so onsubscribe cd so onerror null cd asserterror nullpointerexception class 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy true 1 false false false safeobserver object so cd tosafe so onerror new testexception testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 testexception class testhelper asserterror ce 1 nullpointerexception class subscription not set finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 true false false safeobserver object so cd tosafe so onerror new testexception testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 testexception class testhelper asserterror ce 1 nullpointerexception class subscription not set testhelper asserterror ce 2 testexception class finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 false true false safeobserver object so cd tosafe so onsubscribe cd so oncomplete testhelper assertundeliverable list 0 testexception class oncomplete finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy true 1 false true false safeobserver object so cd tosafe so oncomplete testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 nullpointerexception class subscription not set testhelper asserterror ce 1 testexception class onsubscribe finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try crashdummy cd new crashdummy false 1 true true false safeobserver object so cd tosafe so oncomplete testhelper asserterror list 0 compositeexception class list throwable ce testhelper compositelist list get 0 testhelper asserterror ce 0 nullpointerexception class subscription not set testhelper asserterror ce 1 testexception class finally rxjavaplugins reset 
super onstart start 
errors add e dispose 
complete dispose 
testresourceobserver integer ro new testresourceobserver ro add null 
testresourceobserver integer ro new testresourceobserver assertfalse ro isdisposed disposable d disposable empty ro add d assertfalse d isdisposed ro dispose asserttrue ro isdisposed asserttrue d isdisposed ro dispose asserttrue ro isdisposed asserttrue d isdisposed 
testresourceobserver integer ro new testresourceobserver assertfalse ro isdisposed disposable d disposable empty ro add d assertfalse d isdisposed ro oncomplete asserttrue ro isdisposed asserttrue d isdisposed 
testresourceobserver integer ro new testresourceobserver assertfalse ro isdisposed disposable d disposable empty ro add d assertfalse d isdisposed ro onerror new testexception asserttrue ro isdisposed asserttrue d isdisposed 
testresourceobserver integer tc new testresourceobserver assertfalse tc isdisposed assertequals 0 tc start asserttrue tc values isempty asserttrue tc errors isempty observable just 1 subscribe tc asserttrue tc isdisposed assertequals 1 tc start assertequals 1 tc values get 0 intvalue asserttrue tc errors isempty 
testresourceobserver integer tc new testresourceobserver assertfalse tc isdisposed assertequals 0 tc start asserttrue tc values isempty asserttrue tc errors isempty final runtimeexception error new runtimeexception error observable integer error error subscribe tc asserttrue tc isdisposed assertequals 1 tc start asserttrue tc values isempty assertequals 1 tc errors size asserttrue tc errors contains error 
list throwable error testhelper trackpluginerrors try testresourceobserver integer tc new testresourceobserver tc onsubscribe disposable empty disposable d disposable empty tc onsubscribe d asserttrue d isdisposed assertequals 1 tc start testhelper asserterror error 0 class endconsumerhelper composemessage tc getclass getname finally rxjavaplugins reset 
testresourceobserver integer tc new testresourceobserver tc dispose disposable d disposable empty tc onsubscribe d asserttrue d isdisposed assertequals 0 tc start 
super onstart start 
errors add e dispose 
integer rso new rso add null 
integer rso new assertfalse rso isdisposed disposable d disposable empty rso add d assertfalse d isdisposed rso dispose asserttrue rso isdisposed asserttrue d isdisposed rso dispose asserttrue rso isdisposed asserttrue d isdisposed 
integer rso new assertfalse rso isdisposed disposable d disposable empty rso add d assertfalse d isdisposed rso onsuccess 1 asserttrue rso isdisposed asserttrue d isdisposed 
integer rso new assertfalse rso isdisposed disposable d disposable empty rso add d assertfalse d isdisposed rso onerror new testexception asserttrue rso isdisposed asserttrue d isdisposed 
integer rso new assertfalse rso isdisposed assertequals 0 rso start assertnull rso value asserttrue rso errors isempty single just 1 subscribe rso asserttrue rso isdisposed assertequals 1 rso start assertequals integer valueof 1 rso value asserttrue rso errors isempty 
integer rso new assertfalse rso isdisposed assertequals 0 rso start assertnull rso value asserttrue rso errors isempty final runtimeexception error new runtimeexception error single integer error error subscribe rso asserttrue rso isdisposed assertequals 1 rso start assertnull rso value assertequals 1 rso errors size asserttrue rso errors contains error 
list throwable error testhelper trackpluginerrors try integer rso new rso onsubscribe disposable empty disposable d disposable empty rso onsubscribe d asserttrue d isdisposed assertequals 1 rso start testhelper asserterror error 0 class endconsumerhelper composemessage rso getclass getname finally rxjavaplugins reset 
integer rso new rso dispose disposable d disposable empty rso onsubscribe d asserttrue d isdisposed assertequals 0 rso start 
super onstart start 
complete 
errors add e 
testcompletable tc new testcompletable assertfalse tc isdisposed assertequals 0 tc start assertequals 0 tc complete asserttrue tc errors isempty completable complete subscribe tc assertfalse tc isdisposed assertequals 1 tc start assertequals 1 tc complete asserttrue tc errors isempty 
list throwable error testhelper trackpluginerrors try testcompletable tc new testcompletable tc onsubscribe disposable empty disposable d disposable empty tc onsubscribe d asserttrue d isdisposed assertequals 1 tc start testhelper asserterror error 0 class endconsumerhelper composemessage tc getclass getname finally rxjavaplugins reset 
testcompletable tc new testcompletable tc dispose asserttrue tc isdisposed disposable d disposable empty tc onsubscribe d asserttrue d isdisposed assertequals 0 tc start 
count caught e completed countdown 
final atomicinteger atomicinteger new atomicinteger 3 final atomicinteger new atomicinteger 0 completable fromaction new action override public void run throws exception incrementandget if atomicinteger decrementandget 0 throw new runtimeexception throw new retry integer max value new predicate throwable override public boolean test final throwable throwable throws exception return throwable instanceof test assertfailure class assertequals 3 get 
final atomicinteger atomicinteger new atomicinteger 3 final atomicinteger new atomicinteger 0 completable fromaction new action override public void run throws exception incrementandget if atomicinteger decrementandget 0 throw new runtimeexception retry 2 functions alwaystrue test assertresult assertequals 3 get 
final atomicinteger atomicinteger new atomicinteger 3 final atomicinteger new atomicinteger 0 completable fromaction new action override public void run throws exception incrementandget if atomicinteger decrementandget 0 throw new runtimeexception retry 1 functions alwaystrue test assertfailure runtimeexception class assertequals 2 get 
final atomicinteger atomicinteger new atomicinteger 2 final atomicinteger new atomicinteger 0 completable fromaction new action override public void run throws exception incrementandget if atomicinteger decrementandget 0 throw new runtimeexception retry 0 functions alwaystrue test assertfailure runtimeexception class assertequals 1 get 
completable complete retryuntil true test assertresult 
completable complete retryuntil false test assertresult 
completable error new testexception retryuntil true test assertfailure testexception class 
atomicinteger counter new atomicinteger completable defer if counter getandincrement 0 return completable error new testexception return completable complete retryuntil false test assertresult 
return new iterator completable override public boolean hasnext return true override public completable next throw new testexception override public void remove 
return new iterator completable override public boolean hasnext throw new testexception override public completable next return null override public void remove 
completable c completable complete c blockingawait 
completable c completable concatarray c blockingawait 
completable c completable concatarray normal completable c blockingawait normal assertsubscriptions 1 
completable c completable concatarray error completable c blockingawait 
completable c completable concatarray normal completable normal completable normal completable c blockingawait normal assertsubscriptions 3 
completable c completable concatarray normal completable error completable normal completable c blockingawait 
completable c completable concatarray normal completable null c blockingawait 
completable c completable concat collections completable emptylist c blockingawait 
completable c completable concat new iterable completable override public iterator completable iterator return null c blockingawait 
completable c completable concat collections singleton normal completable c blockingawait normal assertsubscriptions 1 
completable c completable concat arrays aslist normal completable normal completable normal completable c blockingawait normal assertsubscriptions 3 
completable c completable concat collections singleton error completable c blockingawait 
completable c completable concat arrays aslist normal completable error completable c blockingawait 
completable c completable concat new iterable completable override public iterator completable iterator throw new testexception c blockingawait 
completable c completable concat new c blockingawait 
completable c completable concat new c blockingawait 
completable c completable concat flowable completable empty c blockingawait 
completable c completable concat flowable completable error new supplier throwable override public throwable get return new testexception c blockingawait 
completable c completable concat flowable just normal completable c blockingawait normal assertsubscriptions 1 
completable c completable concat flowable just error completable c blockingawait 
completable c completable concat flowable just normal completable repeat 3 c blockingawait normal assertsubscriptions 3 
completable c completable concat flowable just normal completable error completable c blockingawait 
final list long requested new arraylist flowable completable cs flowable just normal completable repeat 10 doonrequest new longconsumer override public void accept long v requested add v completable c completable concat cs 5 c blockingawait assert assertequals arrays aslist 5l 4l 4l requested 
completable c completable unsafecreate new completablesource override public void subscribe completableobserver observer throw new nullpointerexception c blockingawait 
list throwable errors testhelper trackpluginerrors try completable c completable unsafecreate new completablesource override public void subscribe completableobserver observer throw new testexception c blockingawait assert fail did not throw exception catch nullpointerexception ex if ex getcause instanceof testexception ex printstacktrace assert fail did not wrap the testexception but it returned ex testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
completable c completable defer new supplier completable override public completable get return normal completable normal assertsubscriptions 0 c blockingawait normal assertsubscriptions 1 
completable c completable defer new supplier completable override public completable get return null c blockingawait 
completable c completable defer new supplier completable override public completable get throw new testexception c blockingawait 
completable c completable defer new supplier completable override public completable get return error completable c blockingawait 
completable c completable error new supplier throwable override public throwable get return new testexception c blockingawait 
completable c completable error new supplier throwable override public throwable get return null c blockingawait 
completable c completable error new supplier throwable override public throwable get throw new testexception c blockingawait 
completable c completable error new testexception c blockingawait 
final atomicinteger calls new atomicinteger completable c completable fromcallable new callable object override public object call throws exception return calls getandincrement c blockingawait assert assertequals 1 calls get 
completable c completable fromcallable new callable object override public object call throws exception throw new testexception c blockingawait 
completable c completable frompublisher flowable empty c blockingawait 
for int n 1 n n 10 completable c completable frompublisher flowable range 1 n c blockingawait 
completable c completable frompublisher flowable error new supplier throwable override public throwable get return new testexception c blockingawait 
completable c completable fromobservable observable empty c blockingawait 
for int n 1 n n 10 completable c completable fromobservable observable range 1 n c blockingawait 
completable c completable fromobservable observable error new supplier throwable override public throwable get return new testexception c blockingawait 
final atomicinteger calls new atomicinteger completable c completable fromaction new action override public void run calls getandincrement c blockingawait assert assertequals 1 calls get 
completable c completable fromaction new action override public void run throw new testexception c blockingawait 
completable c completable fromsingle single just 1 c blockingawait 
completable c completable fromsingle single error new supplier throwable override public throwable get return new testexception c blockingawait 
completable c completable mergearray c blockingawait 
completable c completable mergearray normal completable c blockingawait normal assertsubscriptions 1 
completable c completable mergearray error completable c blockingawait 
completable c completable mergearray normal completable normal completable normal completable c blockingawait normal assertsubscriptions 3 
completable c completable mergearray normal completable error completable normal completable c blockingawait 
completable c completable mergearray normal completable null c blockingawait 
completable c completable merge collections completable emptylist c blockingawait 
completable c completable merge new iterable completable override public iterator completable iterator return null c blockingawait 
completable c completable merge collections singleton normal completable c blockingawait normal assertsubscriptions 1 
completable c completable merge arrays aslist normal completable normal completable normal completable c blockingawait normal assertsubscriptions 3 
completable c completable merge collections singleton error completable c blockingawait 
completable c completable merge arrays aslist normal completable error completable c blockingawait 
completable c completable merge new iterable completable override public iterator completable iterator throw new testexception c blockingawait 
completable c completable merge new c blockingawait 
completable c completable merge new c blockingawait 
completable c completable merge flowable completable empty c blockingawait 
completable c completable merge flowable completable error new supplier throwable override public throwable get return new testexception c blockingawait 
completable c completable merge flowable just normal completable c blockingawait normal assertsubscriptions 1 
completable c completable merge flowable just error completable c blockingawait 
completable c completable merge flowable just normal completable repeat 3 c blockingawait normal assertsubscriptions 3 
completable c completable merge flowable just normal completable error completable c blockingawait 
final list long requested new arraylist flowable completable cs flowable just normal completable repeat 10 doonrequest new longconsumer override public void accept long v requested add v completable c completable merge cs 5 c blockingawait assert assertequals arrays aslist 5l 1l 1l 1l 1l 1l 1l 1l 1l 1l 1l requested 
completable c completable mergearraydelayerror c blockingawait 
completable c completable mergearraydelayerror normal completable c blockingawait normal assertsubscriptions 1 
completable c completable mergearraydelayerror error completable c blockingawait 
completable c completable mergearraydelayerror normal completable normal completable normal completable c blockingawait normal assertsubscriptions 3 
completable c completable mergearraydelayerror normal completable error completable normal completable try c blockingawait catch testexception ex normal assertsubscriptions 2 
completable c completable mergearraydelayerror normal completable null c blockingawait 
completable c completable mergedelayerror collections completable emptylist c blockingawait 
completable c completable mergedelayerror new iterable completable override public iterator completable iterator return null c blockingawait 
completable c completable mergedelayerror collections singleton normal completable c blockingawait normal assertsubscriptions 1 
completable c completable mergedelayerror arrays aslist normal completable normal completable normal completable c blockingawait normal assertsubscriptions 3 
completable c completable mergedelayerror collections singleton error completable c blockingawait 
completable c completable mergedelayerror arrays aslist normal completable error completable normal completable try c blockingawait catch testexception ex normal assertsubscriptions 2 
completable c completable mergedelayerror new iterable completable override public iterator completable iterator throw new testexception c blockingawait 
completable c completable mergedelayerror new c blockingawait 
completable c completable mergedelayerror new c blockingawait 
completable c completable mergedelayerror flowable completable empty c blockingawait 
completable c completable mergedelayerror flowable completable error new supplier throwable override public throwable get return new testexception c blockingawait 
completable c completable mergedelayerror flowable just normal completable c blockingawait normal assertsubscriptions 1 
completable c completable mergedelayerror flowable just error completable c blockingawait 
completable c completable mergedelayerror flowable just normal completable repeat 3 c blockingawait normal assertsubscriptions 3 
completable c completable mergedelayerror flowable just normal completable error completable c blockingawait 
final list long requested new arraylist flowable completable cs flowable just normal completable repeat 10 doonrequest new longconsumer override public void accept long v requested add v completable c completable mergedelayerror cs 5 c blockingawait assert assertequals arrays aslist 5l 1l 1l 1l 1l 1l 1l 1l 1l 1l 1l requested 
final atomicboolean onsubscribecalled new atomicboolean final atomicinteger calls new atomicinteger completable never subscribe new completableobserver override public void onsubscribe disposable d onsubscribecalled set true override public void onerror throwable e calls getandincrement override public void oncomplete calls getandincrement assert asserttrue onsubscribe not called onsubscribecalled get assert assertequals there were calls to onxxx methods 0 calls get 
completable c completable timer 500 timeunit milliseconds c blockingawait 
completable c completable timer 500 timeunit milliseconds schedulers newthread c blockingawait 
testscheduler scheduler new testscheduler completable c completable timer 250 timeunit milliseconds scheduler final atomicinteger calls new atomicinteger c subscribe new completableobserver override public void onsubscribe disposable d override public void oncomplete calls getandincrement override public void onerror throwable e rxjavaplugins onerror e scheduler advancetimeby 100 timeunit milliseconds assert assertequals 0 calls get scheduler advancetimeby 200 timeunit milliseconds assert assertequals 1 calls get 
completable c completable timer 250 timeunit milliseconds final sequentialdisposable sd new sequentialdisposable final atomicinteger calls new atomicinteger c subscribe new completableobserver override public void onsubscribe disposable d sd replace d override public void onerror throwable e calls getandincrement override public void oncomplete calls getandincrement thread sleep 100 sd dispose thread sleep 200 assert assertequals 0 calls get 
final atomicinteger dispose new atomicinteger completable c completable using new supplier integer override public integer get return 1 new function object completable override public completable apply object v return normal completable new consumer integer override public void accept integer d dispose set d final atomicboolean disposedfirst new atomicboolean final atomicreference throwable error new atomicreference c subscribe new completableobserver override public void onsubscribe disposable d override public void onerror throwable e error lazyset e override public void oncomplete disposedfirst set dispose get 0 assert assertequals 1 dispose get assert asserttrue not disposed first disposedfirst get assert assertnull error get 
final atomicinteger dispose new atomicinteger completable c completable using new supplier integer override public integer get return 1 new function integer completable override public completable apply integer v return normal completable new consumer integer override public void accept integer d dispose set d false final atomicboolean disposedfirst new atomicboolean final atomicreference throwable error new atomicreference c subscribe new completableobserver override public void onsubscribe disposable d override public void onerror throwable e error lazyset e override public void oncomplete disposedfirst set dispose get 0 assert assertequals 1 dispose get assert assertfalse disposed first disposedfirst get assert assertnull error get 
final atomicinteger dispose new atomicinteger completable c completable using new supplier integer override public integer get return 1 new function integer completable override public completable apply integer v return error completable new consumer integer override public void accept integer d dispose set d final atomicboolean disposedfirst new atomicboolean final atomicboolean complete new atomicboolean c subscribe new completableobserver override public void onsubscribe disposable d override public void onerror throwable e disposedfirst set dispose get 0 override public void oncomplete complete set true assert assertequals 1 dispose get assert asserttrue not disposed first disposedfirst get assert assertfalse complete get 
final atomicinteger dispose new atomicinteger completable c completable using new supplier integer override public integer get return 1 new function integer completable override public completable apply integer v return error completable new consumer integer override public void accept integer d dispose set d false final atomicboolean disposedfirst new atomicboolean final atomicboolean complete new atomicboolean c subscribe new completableobserver override public void onsubscribe disposable d override public void onerror throwable e disposedfirst set dispose get 0 override public void oncomplete complete set true assert assertequals 1 dispose get assert assertfalse disposed first disposedfirst get assert assertfalse complete get 
completable c completable using new supplier object override public object get return 1 new function object completable override public completable apply object v return null new consumer object override public void accept object v c blockingawait 
completable c completable using new supplier object override public object get throw new testexception new function object completable override public completable apply object v return normal completable new consumer object override public void accept object v c blockingawait 
completable c completable using new supplier object override public object get return 1 new function object completable override public completable apply object v throw new testexception new consumer object override public void accept object v c blockingawait 
completable c completable using new supplier object override public object get return 1 new function object completable override public completable apply object v return normal completable new consumer object override public void accept object v throw new testexception c blockingawait 
completable c error completable compose new override public completable apply completable n return n onerrorcomplete c blockingawait 
completable c normal completable concatwith normal completable c blockingawait normal assertsubscriptions 2 
completable c normal completable concatwith error completable c blockingawait 
completable c normal completable delay 250 timeunit milliseconds final atomicboolean done new atomicboolean final atomicreference throwable error new atomicreference c subscribe new completableobserver override public void onsubscribe disposable d override public void onerror throwable e error set e override public void oncomplete done set true thread sleep 100 assert assertfalse already done done get int timeout 10 while timeout 0 done get thread sleep 100 assert asserttrue not done done get assert assertnull error get 
final testscheduler scheduler new testscheduler final completable c error completable delay 250 timeunit milliseconds scheduler final atomicboolean done new atomicboolean final atomicreference throwable error new atomicreference c subscribe new completableobserver override public void onsubscribe disposable d override public void onerror throwable e error set e override public void oncomplete done set true scheduler advancetimeby 100 timeunit milliseconds assert asserttrue error get tostring error get instanceof testexception assert assertfalse already done done get scheduler advancetimeby 100 timeunit milliseconds assert assertfalse already done done get 
completable c error completable delay 250 timeunit milliseconds schedulers computation true final atomicboolean done new atomicboolean final atomicreference throwable error new atomicreference c subscribe new completableobserver override public void onsubscribe disposable d override public void onerror throwable e error set e override public void oncomplete done set true thread sleep 100 assert assertfalse already done done get assert assertnull error get thread sleep 200 assert assertfalse already done done get assert asserttrue error get instanceof testexception 
final atomicinteger calls new atomicinteger completable c normal completable dooncomplete new action override public void run calls getandincrement c blockingawait assert assertequals 1 calls get 
final atomicinteger calls new atomicinteger completable c error completable dooncomplete new action override public void run calls getandincrement try c blockingawait assert fail failed to throw testexception catch testexception ex assert assertequals 0 calls get 
completable c normal completable dooncomplete new action override public void run throw new testexception c blockingawait 
final atomicinteger calls new atomicinteger completable c normal completable doondispose new action override public void run calls getandincrement c blockingawait assert assertequals 0 calls get 
final atomicinteger calls new atomicinteger completable c error completable doondispose new action override public void run calls getandincrement try c blockingawait assert fail no exception thrown catch testexception ex assert assertequals 0 calls get 
final atomicinteger calls new atomicinteger completable c normal completable doondispose new action override public void run calls getandincrement c subscribe new completableobserver override public void onsubscribe disposable d d dispose override public void onerror throwable e override public void oncomplete assert assertequals 1 calls get 
list throwable errors testhelper trackpluginerrors try completable c normal completable doondispose new action override public void run throw new testexception c subscribe new completableobserver override public void onsubscribe disposable d d dispose override public void onerror throwable e override public void oncomplete testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
final atomicreference throwable error new atomicreference completable c normal completable doonerror new consumer throwable override public void accept throwable e error set e c blockingawait assert assertnull error get 
final atomicreference throwable err new atomicreference completable c error completable doonerror new consumer throwable override public void accept throwable e err set e try c blockingawait assert fail did not throw exception catch throwable e assert asserttrue err get instanceof testexception 
completable c error completable doonerror new consumer throwable override public void accept throwable e throw new try c blockingawait catch compositeexception ex list throwable a ex getexceptions assert assertequals 2 a size assert asserttrue a get 0 instanceof testexception assert asserttrue a get 1 instanceof 
final atomicinteger calls new atomicinteger completable c normal completable doonsubscribe new consumer disposable override public void accept disposable d calls getandincrement for int i 0 i 10 i c blockingawait assert assertequals 10 calls get 
completable c normal completable doonsubscribe new consumer disposable override public void accept disposable d throw new testexception c blockingawait 
final atomicinteger calls new atomicinteger completable c normal completable doonterminate new action override public void run calls getandincrement c blockingawait assert assertequals 1 calls get 
final atomicinteger calls new atomicinteger completable c error completable doonterminate new action override public void run calls getandincrement try c blockingawait assert fail did dot throw exception catch testexception ex assert assertequals 1 calls get 
completable c normal completable lift new completableoperator override public completableobserver apply completableobserver v return null c blockingawait 
return null 
completable c normal completable lift new c blockingawait 
completable c error completable lift new c blockingawait 
completable c normal completable mergewith normal completable c blockingawait normal assertsubscriptions 2 
final atomicreference string name new atomicreference final atomicreference throwable err new atomicreference final countdownlatch cdl new countdownlatch 1 completable c normal completable observeon schedulers computation c subscribe new completableobserver override public void onsubscribe disposable d override public void oncomplete name set thread currentthread getname cdl countdown override public void onerror throwable e err set e cdl countdown cdl await assert assertnull err get assert asserttrue name get startswith rxcomputation 
final atomicreference string name new atomicreference final atomicreference throwable err new atomicreference final countdownlatch cdl new countdownlatch 1 completable c error completable observeon schedulers computation c subscribe new completableobserver override public void onsubscribe disposable d override public void oncomplete name set thread currentthread getname cdl countdown override public void onerror throwable e name set thread currentthread getname err set e cdl countdown cdl await assert asserttrue err get instanceof testexception assert asserttrue name get startswith rxcomputation 
completable c error completable onerrorcomplete c blockingawait 
completable c error completable onerrorcomplete new predicate throwable override public boolean test throwable e return e instanceof c blockingawait 
completable c error completable onerrorresumenext new function throwable completable override public completable apply throwable e return null try c blockingawait assert fail did not throw an exception catch compositeexception ex list throwable errors ex getexceptions testhelper asserterror errors 0 testexception class testhelper asserterror errors 1 nullpointerexception class assertequals 2 errors size 
completable c error completable onerrorresumenext new function throwable completable override public completable apply throwable e throw new testexception try c blockingawait assert fail did not throw an exception catch compositeexception ex list throwable a ex getexceptions assert assertequals 2 a size assert asserttrue a get 0 instanceof testexception assert asserttrue a get 1 instanceof testexception 
completable c error completable onerrorresumenext new function throwable completable override public completable apply throwable v return normal completable c blockingawait 
completable c error completable onerrorresumenext new function throwable completable override public completable apply throwable v return error completable c blockingawait 
final atomicreference throwable err new atomicreference final atomicinteger calls new atomicinteger completable c completable fromcallable new callable object override public object call throws exception calls getandincrement thread sleep 100 return null repeat c subscribe new completableobserver override public void onsubscribe final disposable d schedulers single scheduledirect new runnable override public void run d dispose 550 timeunit milliseconds override public void onerror throwable e err set e override public void oncomplete assert assertequals 6 calls get assert assertnull err get 
completable c error completable repeat c blockingawait 
final atomicinteger calls new atomicinteger completable c completable fromcallable new callable object override public object call throws exception calls getandincrement return null repeat 5 c blockingawait assert assertequals 5 calls get 
final atomicinteger calls new atomicinteger completable c completable fromcallable new callable object override public object call throws exception calls getandincrement return null repeat 1 c blockingawait assert assertequals 1 calls get 
final atomicinteger calls new atomicinteger completable c completable fromcallable new callable object override public object call throws exception calls getandincrement return null repeat 0 c blockingawait assert assertequals 0 calls get 
final atomicinteger calls new atomicinteger final atomicinteger times new atomicinteger 5 completable c completable fromcallable new callable object override public object call throws exception calls getandincrement return null repeatuntil new booleansupplier override public boolean getasboolean return times decrementandget 0 c blockingawait assert assertequals 5 calls get 
completable c normal completable retry c blockingawait normal assertsubscriptions 1 
final atomicinteger calls new atomicinteger 5 completable c completable fromaction new action override public void run if calls decrementandget 0 throw new testexception retry c blockingawait 
completable c error completable retry new bipredicate integer throwable override public boolean test integer n throwable e return n 5 c blockingawait 
completable c error completable retry 5 c blockingawait 
final atomicinteger calls new atomicinteger completable c completable fromaction new action override public void run if calls incrementandget 6 throw new testexception retry 5 c blockingawait assertequals 6 calls get 
normal completable retry 1 
completable c error completable retry new predicate throwable override public boolean test throwable e return false c blockingawait 
final atomicinteger calls new atomicinteger 5 completable c completable fromaction new action override public void run if calls decrementandget 0 throw new testexception retry new predicate throwable override public boolean test throwable e return true c blockingawait 
final atomicinteger calls new atomicinteger 5 completable c completable fromaction new action override public void run if calls decrementandget 0 throw new testexception retrywhen new function flowable extends throwable publisher object suppresswarnings rawtypes unchecked override public publisher object apply flowable extends throwable f return publisher f c blockingawait 
final atomicboolean complete new atomicboolean completable c normal completable delay 100 timeunit milliseconds dooncomplete new action override public void run complete set true disposable d c subscribe assertfalse d isdisposed thread sleep 150 assert asserttrue not completed complete get asserttrue d isdisposed 
final atomicboolean complete new atomicboolean completable c normal completable delay 200 timeunit milliseconds dooncomplete new action override public void run complete set true disposable d c subscribe thread sleep 100 d dispose thread sleep 150 assert assertfalse completed complete get 
final atomicreference throwable err new atomicreference final atomicboolean complete new atomicboolean normal completable subscribe new action override public void run complete set true new consumer throwable override public void accept throwable e err set e assert assertnull err get assert asserttrue not completed complete get 
final atomicreference throwable err new atomicreference final atomicboolean complete new atomicboolean error completable subscribe new action override public void run complete set true new consumer throwable override public void accept throwable e err set e assert asserttrue err get instanceof testexception assert assertfalse not completed complete get 
list throwable errors testhelper trackpluginerrors try final atomicreference throwable err new atomicreference normal completable subscribe new action override public void run throw new testexception new consumer throwable override public void accept throwable e err set e assert assertnull err get testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try error completable subscribe new action override public void run new consumer throwable override public void accept throwable e throw new testexception testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
testobserver object to new testobserver normal completable toobservable subscribe to to assertcomplete to assertnovalues to assertnoerrors 
testobserver object to new testobserver error completable toobservable subscribe to to assertnotcomplete to assertnovalues to asserterror testexception class 
final atomicboolean run new atomicboolean normal completable subscribe new action override public void run run set true assert asserttrue not completed run get 
list throwable errors testhelper trackpluginerrors try final atomicboolean run new atomicboolean error completable subscribe new action override public void run run set true assert assertfalse completed run get testhelper asserterror errors 0 class finally rxjavaplugins reset 
testsubscriber object ts new testsubscriber normal completable toflowable subscribe ts ts assertcomplete ts assertnovalues ts assertnoerrors 
testsubscriber object ts new testsubscriber error completable toflowable subscribe ts ts assertnotcomplete ts assertnovalues ts asserterror testexception class 
final atomicreference string name new atomicreference completable c completable unsafecreate new completablesource override public void subscribe completableobserver observer name set thread currentthread getname emptydisposable complete observer subscribeon schedulers computation c blockingawait assert asserttrue name get startswith rxcomputation 
final atomicreference string name new atomicreference completable c completable unsafecreate new completablesource override public void subscribe completableobserver observer name set thread currentthread getname emptydisposable error new testexception observer subscribeon schedulers computation try c blockingawait assert fail no exception thrown catch testexception ex assert asserttrue name get startswith rxcomputation 
completable c completable never timeout 100 timeunit milliseconds normal completable c blockingawait normal assertsubscriptions 1 
completable c completable fromcallable new callable object override public object call throws exception thread sleep 50 return null timeout 100 timeunit milliseconds normal completable c blockingawait thread sleep 100 normal assertsubscriptions 0 
normal completable to new completableconverter flowable object override public flowable object apply completable c return c toflowable test assertcomplete assertnovalues 
normal completable to new completableconverter flowable object override public flowable object apply completable c return c toflowable test assertcomplete assertnovalues 
completable complete to new completableconverter flowable integer override public flowable integer apply completable v return v toflowable test assertcomplete 
normal completable toflowable blockingforeach functions emptyconsumer 
error completable toflowable blockingforeach functions emptyconsumer 
normal completable toobservable blockingforeach functions emptyconsumer 
error completable toobservable blockingforeach functions emptyconsumer 
assert assertequals 1 normal completable tosingle new supplier object override public object get return 1 blockingget 
error completable tosingle new supplier object override public object get return 1 blockingget 
normal completable tosingle new supplier object override public object get return null blockingget 
normal completable tosingle new supplier object override public object get throw new testexception blockingget 
error completable tosingledefault 1 blockingget 
assert assertequals integer 1 normal completable tosingledefault 1 blockingget 
final atomicreference string name new atomicreference final countdownlatch cdl new countdownlatch 1 normal completable delay 1 timeunit seconds doondispose new action override public void run name set thread currentthread getname cdl countdown unsubscribeon schedulers computation subscribe new completableobserver override public void onsubscribe final disposable d schedulers single scheduledirect new runnable override public void run d dispose 100 timeunit milliseconds override public void onerror throwable e override public void oncomplete cdl await assert asserttrue name get startswith rxcomputation 
completable c completable ambarray c blockingawait 
completable c completable ambarray normal completable c blockingawait 
completable ambarray error completable test asserterror testexception class 
publishprocessor object pp1 publishprocessor create publishprocessor object pp2 publishprocessor create completable c1 completable frompublisher pp1 completable c2 completable frompublisher pp2 completable c completable ambarray c1 c2 final atomicboolean complete new atomicboolean c subscribe new action override public void run complete set true assert asserttrue first subject no subscribers pp1 hassubscribers assert asserttrue second subject no subscribers pp2 hassubscribers pp1 oncomplete assert assertfalse first subject has subscribers pp1 hassubscribers assert assertfalse second subject has subscribers pp2 hassubscribers assert asserttrue not completed complete get 
publishprocessor object pp1 publishprocessor create publishprocessor object pp2 publishprocessor create completable c1 completable frompublisher pp1 completable c2 completable frompublisher pp2 completable c completable ambarray c1 c2 final atomicreference throwable complete new atomicreference c subscribe functions empty action new consumer throwable override public void accept throwable v complete set v assert asserttrue first subject no subscribers pp1 hassubscribers assert asserttrue second subject no subscribers pp2 hassubscribers pp1 onerror new testexception assert assertfalse first subject has subscribers pp1 hassubscribers assert assertfalse second subject has subscribers pp2 hassubscribers assert asserttrue not completed complete get instanceof testexception 
publishprocessor object pp1 publishprocessor create publishprocessor object pp2 publishprocessor create completable c1 completable frompublisher pp1 completable c2 completable frompublisher pp2 completable c completable ambarray c1 c2 final atomicboolean complete new atomicboolean c subscribe new action override public void run complete set true assert asserttrue first subject no subscribers pp1 hassubscribers assert asserttrue second subject no subscribers pp2 hassubscribers pp2 oncomplete assert assertfalse first subject has subscribers pp1 hassubscribers assert assertfalse second subject has subscribers pp2 hassubscribers assert asserttrue not completed complete get 
publishprocessor object pp1 publishprocessor create publishprocessor object pp2 publishprocessor create completable c1 completable frompublisher pp1 completable c2 completable frompublisher pp2 completable c completable ambarray c1 c2 final atomicreference throwable complete new atomicreference c subscribe functions empty action new consumer throwable override public void accept throwable v complete set v assert asserttrue first subject no subscribers pp1 hassubscribers assert asserttrue second subject no subscribers pp2 hassubscribers pp2 onerror new testexception assert assertfalse first subject has subscribers pp1 hassubscribers assert assertfalse second subject has subscribers pp2 hassubscribers assert asserttrue not completed complete get instanceof testexception 
completable ambarray null normal completable test asserterror nullpointerexception class 
completable c completable amb collections completable emptylist c blockingawait 
completable amb new iterable completable override public iterator completable iterator return null test asserterror nullpointerexception class 
completable amb arrays aslist null normal completable test asserterror nullpointerexception class 
completable c completable amb collections singleton normal completable c blockingawait normal assertsubscriptions 1 
completable c completable amb arrays aslist normal completable normal completable normal completable c blockingawait normal assertsubscriptions 1 
completable amb collections singleton error completable test asserterror testexception class 
completable amb arrays aslist error completable normal completable test asserterror testexception class 
completable amb new iterable completable override public iterator completable iterator throw new testexception test asserterror testexception class 
completable amb new test asserterror testexception class 
completable amb new test asserterror testexception class 
publishprocessor object pp1 publishprocessor create publishprocessor object pp2 publishprocessor create completable c1 completable frompublisher pp1 completable c2 completable frompublisher pp2 completable c c1 ambwith c2 final atomicboolean complete new atomicboolean c subscribe new action override public void run complete set true assert asserttrue first subject no subscribers pp1 hassubscribers assert asserttrue second subject no subscribers pp2 hassubscribers pp1 oncomplete assert assertfalse first subject has subscribers pp1 hassubscribers assert assertfalse second subject has subscribers pp2 hassubscribers assert asserttrue not completed complete get 
publishprocessor object pp1 publishprocessor create publishprocessor object pp2 publishprocessor create completable c1 completable frompublisher pp1 completable c2 completable frompublisher pp2 completable c c1 ambwith c2 final atomicreference throwable complete new atomicreference c subscribe functions empty action new consumer throwable override public void accept throwable v complete set v assert asserttrue first subject no subscribers pp1 hassubscribers assert asserttrue second subject no subscribers pp2 hassubscribers pp1 onerror new testexception assert assertfalse first subject has subscribers pp1 hassubscribers assert assertfalse second subject has subscribers pp2 hassubscribers assert asserttrue not completed complete get instanceof testexception 
publishprocessor object pp1 publishprocessor create publishprocessor object pp2 publishprocessor create completable c1 completable frompublisher pp1 completable c2 completable frompublisher pp2 completable c c1 ambwith c2 final atomicboolean complete new atomicboolean c subscribe new action override public void run complete set true assert asserttrue first subject no subscribers pp1 hassubscribers assert asserttrue second subject no subscribers pp2 hassubscribers pp2 oncomplete assert assertfalse first subject has subscribers pp1 hassubscribers assert assertfalse second subject has subscribers pp2 hassubscribers assert asserttrue not completed complete get 
publishprocessor object pp1 publishprocessor create publishprocessor object pp2 publishprocessor create completable c1 completable frompublisher pp1 completable c2 completable frompublisher pp2 completable c c1 ambwith c2 final atomicreference throwable complete new atomicreference c subscribe functions empty action new consumer throwable override public void accept throwable v complete set v assert asserttrue first subject no subscribers pp1 hassubscribers assert asserttrue second subject no subscribers pp2 hassubscribers pp2 onerror new testexception assert assertfalse first subject has subscribers pp1 hassubscribers assert assertfalse second subject has subscribers pp2 hassubscribers assert asserttrue not completed complete get instanceof testexception 
final atomicboolean run new atomicboolean completable c normal completable startwith completable fromcallable new callable object override public object call throws exception run set normal get 0 return null c blockingawait assert asserttrue did not start with other run get normal assertsubscriptions 1 
completable c normal completable startwith error completable try c blockingawait assert fail did not throw testexception catch testexception ex normal assertsubscriptions 0 error assertsubscriptions 1 
final atomicboolean run new atomicboolean flowable object c normal completable startwith flowable fromcallable new callable object override public object call throws exception run set normal get 0 return 1 testsubscriber object ts new testsubscriber c subscribe ts assert asserttrue did not start with other run get normal assertsubscriptions 1 ts assertvalue 1 ts assertcomplete ts assertnoerrors 
flowable object c normal completable startwith flowable error new testexception testsubscriber object ts new testsubscriber c subscribe ts normal assertsubscriptions 0 ts assertnovalues ts asserterror testexception class ts assertnotcomplete 
final atomicboolean run new atomicboolean observable object o normal completable startwith observable fromcallable new callable object override public object call throws exception run set normal get 0 return 1 testobserver object to new testobserver o subscribe to assert asserttrue did not start with other run get normal assertsubscriptions 1 to assertvalue 1 to assertcomplete to assertnoerrors 
observable object o normal completable startwith observable error new testexception testobserver object to new testobserver o subscribe to normal assertsubscriptions 0 to assertnovalues to asserterror testexception class to assertnotcomplete 
testsubscriber string ts new testsubscriber 0 completable complete andthen flowable just foo subscribe ts ts request 1 ts assertvalue foo ts assertcomplete ts assertnoerrors testobserver string to new testobserver completable complete andthen observable just foo subscribe to to assertvalue foo to assertcomplete to assertnoerrors 
thread originalhandler thread handler new thread handler rxjavaplugins seterrorhandler new consumer throwable override public void accept throwable error throws exception thread currentthread uncaughtexception thread currentthread error try action run assertequals should have received exactly 1 exception 1 handler count throwable caught handler caught while caught null if caught instanceof testexception break if caught caught getcause break caught caught getcause asserttrue a testexception should have been delivered to the handler caught instanceof testexception catch throwable ex throw exceptionhelper wraporthrow ex finally thread originalhandler rxjavaplugins seterrorhandler null 
new action override public void run normal completable subscribe new action override public void run throw new testexception 
new action override public void run error completable subscribe new action override public void run new consumer throwable override public void accept throwable throwable throw new testexception 
new action override public void run error completable tosingledefault 1 subscribe new consumer integer override public void accept integer integer 
consumer integer ondispose new consumer integer override public void accept integer t throw new testexception testsubscriberex integer ts new testsubscriberex completable using new supplier integer override public integer get return 1 new function integer completable override public completable apply integer t return null ondispose integer toflowable subscribe ts ts assertnovalues ts assertnotcomplete ts asserterror compositeexception class compositeexception ex compositeexception ts errors get 0 list throwable listex ex getexceptions assertequals 2 listex size asserttrue listex get 0 tostring listex get 0 instanceof nullpointerexception asserttrue listex get 1 tostring listex get 1 instanceof testexception 
list throwable errors testhelper trackpluginerrors try publishsubject string stringsubject publishsubject create completable completable stringsubject ignoreelements disposable completable subscribe stringsubject onerror new testexception asserttrue not unsubscribed isdisposed testhelper asserterror errors 0 class finally rxjavaplugins reset 
publishsubject string stringsubject publishsubject create completable completable stringsubject ignoreelements disposable completable subscribe new action override public void run stringsubject oncomplete asserttrue not unsubscribed isdisposed 
publishsubject string stringsubject publishsubject create completable completable stringsubject ignoreelements final atomicreference disposable disposableref new atomicreference disposable completable subscribe new action override public void run if disposableref get isdisposed disposableref set null disposableref set stringsubject oncomplete asserttrue not unsubscribed isdisposed assertnotnull unsubscribed before the call to oncomplete disposableref get 
list throwable errors testhelper trackpluginerrors try publishsubject string stringsubject publishsubject create completable completable stringsubject ignoreelements disposable completable subscribe new action override public void run stringsubject onerror new testexception asserttrue not unsubscribed isdisposed testhelper asserterror errors 0 class finally rxjavaplugins reset 
publishsubject string stringsubject publishsubject create completable completable stringsubject ignoreelements disposable completable subscribe new action override public void run new consumer throwable override public void accept throwable t stringsubject oncomplete asserttrue not unsubscribed isdisposed 
publishsubject string stringsubject publishsubject create completable completable stringsubject ignoreelements disposable completable subscribe new action override public void run new consumer throwable override public void accept throwable e stringsubject onerror new testexception asserttrue not unsubscribed isdisposed 
testsubscriberex string ts new testsubscriberex 0 testscheduler scheduler new testscheduler completable complete andthen flowable just foo delay 1 timeunit seconds scheduler subscribe ts ts request 1 ts assertnovalues ts assertnotterminated scheduler advancetimeby 1 timeunit seconds ts assertvalue foo ts assertcomplete ts assertnoerrors 
testsubscriberex string ts new testsubscriberex 0 completable never andthen single just foo toflowable subscribe ts ts request 1 ts assertnovalues ts assertnotterminated 
testsubscriber string ts new testsubscriber 0 final atomicboolean hasrun new atomicboolean false final exception e new exception completable error e andthen new single string override public void subscribeactual singleobserver super string observer hasrun set true observer onsuccess foo toflowable subscribe ts ts assertnovalues ts asserterror e assert assertfalse should not have subscribed to single when completable errors hasrun get 
testsubscriberex string ts new testsubscriberex 0 testscheduler scheduler new testscheduler completable complete andthen single just foo delay 1 timeunit seconds scheduler toflowable subscribe ts ts request 1 ts assertnovalues ts assertnotterminated scheduler advancetimeby 1 timeunit seconds ts assertvalue foo ts assertcomplete ts assertnoerrors 
oncreate spy new function completable completable override public completable apply completable t return t rxjavaplugins oncreate onstart spy new bifunction completable completableobserver completableobserver override public completableobserver apply completable t1 completableobserver t2 return t2 rxjavaplugins onstart 
rxjavaplugins reset 
completablesource subscriber mock completablesource class completable create completable unsafecreate subscriber verify oncreate times 1 apply create 
final atomicinteger calls new atomicinteger completable c normal completable dooncomplete new action override public void run calls getandincrement c blockingawait assert assertequals 1 calls get 
final atomicinteger calls new atomicinteger completable c error completable dooncomplete new action override public void run calls getandincrement try c blockingawait assert fail failed to throw testexception catch testexception ex assert assertequals 0 calls get 
completable c normal completable dooncomplete new action override public void run throw new testexception c blockingawait 
final atomicboolean doneafter new atomicboolean final atomicboolean complete new atomicboolean completable c normal completable doafterterminate new action override public void run doneafter set complete get c subscribe new completableobserver override public void onsubscribe disposable d override public void onerror throwable e override public void oncomplete complete set true c blockingawait assert asserttrue not completed complete get assert asserttrue closure called before oncomplete doneafter get 
final atomicboolean doneafter new atomicboolean completable c error completable doafterterminate new action override public void run doneafter set true try c blockingawait 5 timeunit seconds assert fail did not throw testexception catch testexception ex assert asserttrue closure not called doneafter get 
new action override public void run error completable subscribe 
new action override public void run error completable subscribe new action override public void run 
new action override public void run error completable tosingledefault 0 subscribe 
final atomicboolean run new atomicboolean completable c normal completable andthen completable fromcallable new callable object override public object call throws exception run set normal get 0 return null c blockingawait assert assertfalse start with other run get normal assertsubscriptions 1 
completable c normal completable andthen error completable try c blockingawait assert fail did not throw testexception catch testexception ex normal assertsubscriptions 1 error assertsubscriptions 1 
final atomicboolean run new atomicboolean flowable object c normal completable andthen flowable fromcallable new callable object override public object call throws exception run set normal get 0 return 1 testsubscriber object ts new testsubscriber c subscribe ts assert assertfalse start with other run get normal assertsubscriptions 1 ts assertvalue 1 ts assertcomplete ts assertnoerrors 
flowable object c normal completable andthen flowable error new testexception testsubscriber object ts new testsubscriber c subscribe ts normal assertsubscriptions 1 ts assertnovalues ts asserterror testexception class ts assertnotcomplete 
suppresswarnings unchecked consumer integer ondispose mock consumer class testsubscriber integer ts new testsubscriber completable using new supplier integer override public integer get return 1 new function integer completable override public completable apply integer t throw new testexception ondispose integer toflowable subscribe ts verify ondispose accept 1 ts assertnovalues ts assertnotcomplete ts asserterror testexception class 
consumer integer ondispose new consumer integer override public void accept integer t throw new testexception testsubscriberex integer ts new testsubscriberex completable using new supplier integer override public integer get return 1 new function integer completable override public completable apply integer t throw new testexception ondispose integer toflowable subscribe ts ts assertnovalues ts assertnotcomplete ts asserterror compositeexception class compositeexception ex compositeexception ts errors get 0 list throwable listex ex getexceptions assertequals 2 listex size asserttrue listex get 0 tostring listex get 0 instanceof testexception asserttrue listex get 1 tostring listex get 1 instanceof testexception 
suppresswarnings unchecked consumer integer ondispose mock consumer class testsubscriber integer ts testsubscriber create completable using new supplier integer override public integer get return 1 new function integer completable override public completable apply integer t return null ondispose integer toflowable subscribe ts verify ondispose accept 1 ts assertnovalues ts assertnotcomplete ts asserterror nullpointerexception class 
publishsubject string stringsubject publishsubject create completable completable stringsubject ignoreelements disposable completable subscribe stringsubject oncomplete asserttrue not unsubscribed isdisposed 
testsubscriber string ts new testsubscriber completable completable completable unsafecreate new completablesource override public void subscribe completableobserver observer observer oncomplete completable string toflowable subscribe ts verify onstart times 1 apply eq completable any completableobserver class 
testsubscriber object ts new testsubscriber object override public void onstart onnext 1 normal completable object toflowable subscribe ts ts assertvalue 1 ts assertnoerrors ts assertcomplete 
testsubscriberex string ts new testsubscriberex error completable onerrorcomplete new predicate throwable override public boolean test throwable t throw new testexception forced inner failure string toflowable subscribe ts ts assertnovalues ts assertnotcomplete ts asserterror compositeexception class compositeexception composite compositeexception ts errors get 0 list throwable errors composite getexceptions assert assertequals 2 errors size assert asserttrue errors get 0 tostring errors get 0 instanceof testexception assert assertnull errors get 0 tostring errors get 0 getmessage assert asserttrue errors get 1 tostring errors get 1 instanceof testexception assert assertequals errors get 1 tostring forced inner failure errors get 1 getmessage 
publishsubject string stringsubject publishsubject create completable completable stringsubject ignoreelements final atomicreference disposable disposableref new atomicreference disposable completable subscribe new action override public void run if disposableref get isdisposed disposableref set null functions emptyconsumer disposableref set stringsubject oncomplete asserttrue not unsubscribed isdisposed assertnotnull unsubscribed before the call to oncomplete disposableref get 
publishsubject string stringsubject publishsubject create completable completable stringsubject ignoreelements final atomicreference disposable disposableref new atomicreference disposable completable subscribe functions empty action new consumer throwable override public void accept throwable e if disposableref get isdisposed disposableref set null disposableref set stringsubject onerror new testexception asserttrue not unsubscribed isdisposed assertnotnull unsubscribed before the call to onerror disposableref get 
new action override public void run normal completable tosingledefault 1 subscribe new consumer integer override public void accept integer integer throw new testexception 
testsubscriberex string ts new testsubscriberex 0 completable never andthen flowable just foo subscribe ts ts request 1 ts assertnovalues ts assertnotterminated 
testsubscriber string ts new testsubscriber 0 final atomicboolean hasrun new atomicboolean false final exception e new exception completable unsafecreate new completablesource override public void subscribe completableobserver co co onsubscribe disposable empty co onerror e andthen flowable string unsafecreate new publisher string override public void subscribe subscriber super string s hasrun set true s onsubscribe new booleansubscription s onnext foo s oncomplete subscribe ts ts assertnovalues ts asserterror e assert assertfalse should not have subscribed to observable when completable errors hasrun get 
testsubscriber string ts new testsubscriber 0 completable complete andthen single just foo toflowable subscribe ts ts request 1 ts assertvalue foo ts assertcomplete ts assertnoerrors 
executorservice exec executors try completable c completable fromfuture exec submit new runnable override public void run c blockingawait finally exec shutdown 
executorservice exec executors completable c completable fromfuture exec submit new runnable override public void run throw new testexception try c blockingawait assert fail failed to throw exception catch runtimeexception ex if ex getcause instanceof executionexception ex getcause getcause instanceof testexception ex printstacktrace assert fail wrong exception received finally exec shutdown 
final atomicinteger calls new atomicinteger completable c completable fromrunnable new runnable override public void run calls getandincrement c blockingawait assert assertequals 1 calls get 
completable c completable fromrunnable new runnable override public void run throw new testexception c blockingawait 
final atomicinteger atomicinteger new atomicinteger 0 completable complete doonevent new consumer throwable override public void accept final throwable throwable throws exception if throwable null atomicinteger incrementandget subscribe assertequals 1 atomicinteger get 
list throwable errors testhelper trackpluginerrors try final atomicinteger atomicinteger new atomicinteger 0 completable error new runtimeexception doonevent new consumer throwable override public void accept final throwable throwable throws exception if throwable null atomicinteger incrementandget subscribe assertequals 1 atomicinteger get testhelper asserterror errors 0 class finally rxjavaplugins reset 
publishprocessor integer pp publishprocessor create disposable d pp ignoreelements subscribe functions empty action functions emptyconsumer assertfalse d isdisposed asserttrue pp hassubscribers d dispose asserttrue d isdisposed assertfalse pp hassubscribers 
final testscheduler testscheduler new testscheduler final atomiclong atomiclong new atomiclong completable timer 2 timeunit seconds testscheduler subscribe new action override public void run throws exception atomiclong incrementandget assertequals 0 atomiclong get testscheduler advancetimeby 1 timeunit seconds assertequals 0 atomiclong get testscheduler advancetimeby 1 timeunit seconds assertequals 1 atomiclong get 
errors testhelper trackpluginerrors 
rxjavaplugins reset assertfalse errors errors isempty testhelper asserterror errors 0 class throwable c errors get 0 getcause asserttrue c c instanceof testexception 
flowable error new testexception subscribe 
flowable error new testexception subscribe functions emptyconsumer 
flowable error new testexception foreachwhile functions alwaystrue 
flowable error new testexception blockingsubscribe functions emptyconsumer 
flowable error new testexception blockingsubscribe functions emptyconsumer 128 
observable error new testexception subscribe 
observable error new testexception subscribe functions emptyconsumer 
observable error new testexception foreachwhile functions alwaystrue 
observable error new testexception blockingsubscribe functions emptyconsumer 
single error new testexception subscribe 
single error new testexception subscribe functions emptyconsumer 
maybe error new testexception subscribe 
maybe error new testexception subscribe functions emptyconsumer 
completable error new testexception subscribe 
completable error new testexception subscribe functions empty action 
testhelper checkutilityclass exceptionhelper class 
list throwable errors testhelper trackpluginerrors observable just 1 2 3 subscribe new consumer integer override public void accept integer t1 throw new runtimeexception hello testhelper asserterror errors 0 runtimeexception class asserttrue errors get 0 tostring errors get 0 getmessage contains hello rxjavaplugins reset 
final publishsubject integer a publishsubject create final publishsubject integer b publishsubject create final int max stack depth 800 final atomicinteger depth new atomicinteger a subscribe new observer integer override public void onsubscribe disposable d override public void oncomplete override public void onerror throwable e e printstacktrace override public void onnext integer n b onnext n 1 b subscribe new observer integer override public void onsubscribe disposable d override public void oncomplete override public void onerror throwable e e printstacktrace override public void onnext integer n if depth get max stack depth depth set thread currentthread getstacktrace length a onnext n 1 a onnext 1 asserttrue depth get max stack depth 
observable just 1 subscribe new observer integer override public void onsubscribe disposable d override public void oncomplete override public void onerror throwable e e printstacktrace override public void onnext integer t throw new stackoverflowerror 
observable just 1 subscribe new observer integer override public void onsubscribe disposable d override public void oncomplete override public void onerror throwable e e printstacktrace override public void onnext integer t throw new threaddeath 
testhelper checkutilityclass exceptions class 
try exceptions throwiffatal new threaddeath fail didn t throw fatal exception catch threaddeath ex try exceptions throwiffatal new linkageerror fail didn t throw fatal error catch linkageerror ex try exceptionhelper wraporthrow new linkageerror fail didn t propagate error catch linkageerror ex 
try exceptions propagate new internalerror fail didn t throw exception catch internalerror ex try throw exceptions propagate new catch ex try throw exceptionhelper wraporthrow new ioexception catch runtimeexception ex if ex getcause instanceof ioexception fail ex tostring should have thrown runtimeexception ioexception 
ex new null asserttrue ex getcause ex getcause instanceof nullpointerexception 
ex new message null asserttrue ex getcause ex getcause instanceof nullpointerexception 
ex new message new testexception forced failure asserttrue ex getcause ex getcause instanceof testexception assertequals ex getcause forced failure ex getcause getmessage 
list throwable throwables new arraylist throwables add ex1 throwables add ex2 throwables add ex3 return new compositeexception throwables 
throwable rootcause new throwable rootcause throwable e1 new throwable 1 rootcause throwable e2 new throwable 2 rootcause throwable e3 new throwable 3 rootcause compositeexception ce new compositeexception e1 e2 e3 system err println print composite stacktrace ce printstacktrace assertequals 3 ce getexceptions size ce assertnotnull getrootcause ce system err println print cause stacktrace ce getcause printstacktrace 
try new compositeexception fail compositeexception should fail if errors is empty catch e assertequals errors is empty e getmessage try new compositeexception new arraylist fail compositeexception should fail if errors is empty catch e assertequals errors is empty e getmessage 
compositeexception cex new compositeexception ex1 ex2 system err println print composite stacktrace cex printstacktrace assertequals 2 cex getexceptions size cex assertnotnull getrootcause cex system err println print cause stacktrace cex getcause printstacktrace 
compositeexception cex new compositeexception ex2 ex1 system err println print composite stacktrace cex printstacktrace assertequals 2 cex getexceptions size cex assertnotnull getrootcause cex system err println print cause stacktrace cex getcause printstacktrace 
compositeexception cex new compositeexception ex1 system err println print composite stacktrace cex printstacktrace assertequals 3 cex getexceptions size cex assertnotnull getrootcause cex system err println print cause stacktrace cex getcause printstacktrace 
compositeexception cex new compositeexception ex1 system err println print composite stacktrace cex printstacktrace assertequals 3 cex getexceptions size cex assertnotnull getrootcause cex system err println print cause stacktrace cex getcause printstacktrace 
list throwable exs new arraylist exs add exs add compositeexception cex new compositeexception exs system err println print composite stacktrace cex printstacktrace assertequals 3 cex getexceptions size cex assertnotnull getrootcause cex system err println print cause stacktrace cex getcause printstacktrace 
baos new printstream printstream new printstream baos ex printstacktrace printstream assertfalse baos tostring contains circular reference 
throwable root ex getcause if root null return null else while true if root getcause null return root else root root getcause 
compositeexception composite new compositeexception list throwable null composite getcause composite printstacktrace 
compositeexception composite new compositeexception collections singletonlist throwable null composite getcause composite printstacktrace 
throwable t new throwable private static final long serialversionuid override public synchronized throwable initcause throwable cause throw new compositeexception cex new compositeexception t ex1 system err println print composite stacktrace cex printstacktrace assertequals 2 cex getexceptions size cex assertnotnull getrootcause cex system err println print cause stacktrace cex getcause printstacktrace 
throwable t new throwable private static final long serialversionuid override public synchronized throwable initcause throwable cause return null compositeexception cex new compositeexception t ex1 system err println print composite stacktrace cex printstacktrace assertequals 2 cex getexceptions size cex assertnotnull getrootcause cex system err println print cause stacktrace cex getcause printstacktrace 
compositeexception compositeexception new compositeexception ex1 ex3 assertequals 2 exceptions occurred compositeexception getmessage 
compositeexception compositeexception new compositeexception ex1 ex2 ex3 assertequals 3 exceptions occurred compositeexception getmessage 
asserttrue new compositeexception throwable null getexceptions get 0 instanceof nullpointerexception asserttrue new compositeexception iterable throwable null getexceptions get 0 instanceof nullpointerexception asserttrue new compositeexception null new testexception getexceptions get 0 instanceof nullpointerexception 
stringwriter sw new stringwriter printwriter pw new printwriter sw new compositeexception new testexception printstacktrace pw asserttrue sw tostring contains testexception 
throwable e new badexception assertsame e new compositeexception e getcause getcause assertsame e new compositeexception new runtimeexception e getcause getcause getcause 
compositeexception composite new compositeexception new testexception ex1 new testexception ex2 new testexception ex3 new testexception ex4 string overview composite getcause getmessage asserttrue overview overview contains multiple exceptions 3 asserttrue overview overview contains io reactivex rxjava3 exceptions testexception ex1 asserttrue overview overview contains io reactivex rxjava3 exceptions testexception ex2 asserttrue overview overview contains io reactivex rxjava3 exceptions testexception ex3 asserttrue overview overview contains io reactivex rxjava3 exceptions testexception ex4 asserttrue overview overview contains at io reactivex rxjava3 exceptions exceptionoverview 
compositeexception composite new compositeexception new testexception ex1 new compositeexception exceptionoverview example string overview composite getcause getmessage asserttrue overview overview contains multiple exceptions 2 asserttrue overview overview contains io reactivex rxjava3 exceptions testexception ex1 asserttrue overview overview contains io reactivex rxjava3 exceptions compositeexception exceptionoverview example assertequals overview 2 overview split at s length 
testexception ex0 new testexception ex0 testexception ex1 new testexception ex1 ex0 compositeexception composite new compositeexception ex1 new testexception ex2 ex1 string overview composite getcause getmessage system err println overview asserttrue overview overview contains multiple exceptions 2 asserttrue overview overview contains io reactivex rxjava3 exceptions testexception ex0 asserttrue overview overview contains io reactivex rxjava3 exceptions testexception ex1 asserttrue overview overview contains io reactivex rxjava3 exceptions testexception ex2 asserttrue overview overview contains cause not expanded again io reactivex rxjava3 exceptions testexception ex0 assertequals overview 5 overview split at s length 
testexception ex1 new testexception ex1 testexception ex2 new testexception ex2 compositeexception composite1 new compositeexception ex1 ex2 testexception ex3 new testexception ex3 testexception ex4 new testexception ex4 composite1 compositeexception composite2 new compositeexception ex3 ex4 string overview composite2 getcause getmessage system err println overview asserttrue overview overview contains multiple exceptions 2 asserttrue overview overview contains io reactivex rxjava3 exceptions testexception ex1 asserttrue overview overview contains io reactivex rxjava3 exceptions testexception ex2 
testexception ex new testexception ex1 compositeexception composite new compositeexception ex assertsame composite getcause ex 
delayedrunnable dl new delayedrunnable new runnable override public void run throw new testexception dl run 
final atomicinteger count new atomicinteger delayedrunnable dl new delayedrunnable new runnable override public void run count incrementandget dl dispose dl dispose dl run assertequals 0 count get 
final int count 0 instance scheduledirect new runnable override public void run count 0 assertequals 1 count 0 
instance scheduledirect functions empty runnable 1 timeunit seconds 
instance functions empty runnable 1 1 timeunit seconds 
final int count 0 worker w instance createworker assertfalse w isdisposed w schedule new runnable override public void run count 0 assertequals 1 count 0 
instance createworker schedule functions empty runnable 1 timeunit seconds 
instance createworker scheduleperiodically functions empty runnable 1 1 timeunit seconds 
final int calls 0 runnable r new runnable override public void run calls 0 scheduler s new singlescheduler s shutdown assertequals disposable disposed s scheduledirect r assertequals disposable disposed s scheduledirect r 1 timeunit seconds assertequals disposable disposed s r 1 1 timeunit seconds worker w s createworker scheduledworker w executor shutdownnow assertequals disposable disposed w schedule r assertequals disposable disposed w schedule r 1 timeunit seconds assertequals disposable disposed w scheduleperiodically r 1 1 timeunit seconds assertequals 0 calls 0 w dispose asserttrue w isdisposed 
final scheduler s new singlescheduler for int i 0 i testhelper race default loops i s shutdown runnable r1 new runnable override public void run s start testhelper race r1 r1 
final scheduler s schedulers single disposable d s scheduledirect functions empty runnable while d isdisposed thread sleep 1 
final scheduler s schedulers single disposable d s scheduledirect new runnable override public void run throw new while d isdisposed thread sleep 1 
final scheduler s schedulers single disposable d s scheduledirect functions empty runnable 1 timeunit milliseconds while d isdisposed thread sleep 1 
return schedulers single 
testhelper witherrortracking errors scheduler s rxjavaplugins new rxthreadfactory test s shutdown runnable run mock runnable class s run 1 0 timeunit milliseconds thread sleep 100 verify run never run testhelper assertundeliverable errors 0 class 
rxthreadfactory tf new rxthreadfactory test 1 assertequals rxthreadfactory test tf tostring thread t tf newthread functions empty runnable asserttrue t isdaemon assertequals 1 t getpriority 
executorservice exec executors list throwable errors testhelper trackpluginerrors try instantperiodictask task new instantperiodictask new runnable override public void run throw new testexception exec try task call fail should have thrown catch testexception excepted testhelper assertundeliverable errors 0 testexception class finally exec shutdownnow rxjavaplugins reset 
executorservice exec executors try instantperiodictask task new instantperiodictask new runnable override public void run throw new testexception exec assertfalse task isdisposed task dispose asserttrue task isdisposed task dispose asserttrue task isdisposed finally exec shutdownnow rxjavaplugins reset 
executorservice exec executors try instantperiodictask task new instantperiodictask new runnable override public void run throw new testexception exec task setfirst new futuretask void functions empty runnable null task setrest new futuretask void functions empty runnable null assertfalse task isdisposed task dispose asserttrue task isdisposed task dispose asserttrue task isdisposed finally exec shutdownnow rxjavaplugins reset 
executorservice exec executors try instantperiodictask task new instantperiodictask new runnable override public void run throw new testexception exec task runner thread currentthread task setfirst new futuretask void functions empty runnable null task setrest new futuretask void functions empty runnable null assertfalse task isdisposed task dispose asserttrue task isdisposed task dispose asserttrue task isdisposed finally exec shutdownnow rxjavaplugins reset 
executorservice exec executors try instantperiodictask task new instantperiodictask new runnable override public void run throw new testexception exec task dispose futuretask void f1 new futuretask functions empty runnable null task setfirst f1 asserttrue f1 iscancelled futuretask void f2 new futuretask functions empty runnable null task setrest f2 asserttrue f2 iscancelled finally exec shutdownnow rxjavaplugins reset 
executorservice exec executors try instantperiodictask task new instantperiodictask new runnable override public void run throw new testexception exec task runner thread currentthread task dispose futuretask void f1 new futuretask functions empty runnable null task setfirst f1 asserttrue f1 iscancelled futuretask void f2 new futuretask functions empty runnable null task setrest f2 asserttrue f2 iscancelled finally exec shutdownnow rxjavaplugins reset 
executorservice exec executors try for int i 0 i testhelper race long loops i final instantperiodictask task new instantperiodictask new runnable override public void run throw new testexception exec final futuretask void f1 new futuretask functions empty runnable null runnable r1 new runnable override public void run task setfirst f1 runnable r2 new runnable override public void run task dispose testhelper race r1 r2 asserttrue f1 iscancelled asserttrue task isdisposed finally exec shutdownnow rxjavaplugins reset 
executorservice exec executors try for int i 0 i testhelper race long loops i final instantperiodictask task new instantperiodictask new runnable override public void run throw new testexception exec final futuretask void f1 new futuretask functions empty runnable null runnable r1 new runnable override public void run task setrest f1 runnable r2 new runnable override public void run task dispose testhelper race r1 r2 asserttrue f1 iscancelled asserttrue task isdisposed finally exec shutdownnow rxjavaplugins reset 
boolean ioscheduler use scheduled release ioscheduler use scheduled release true try flowable just item observeon schedulers io firstorerror map item for int i 0 i 50 i completable complete observeon schedulers io blockingawait return done ignoreelement test awaitdone 5 timeunit seconds assertcomplete finally ioscheduler use scheduled release 
list throwable errors testhelper trackpluginerrors try booleanrunnable task new booleanrunnable throw new testexception try task run fail should have thrown catch testexception expected testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
testscheduler tsched new testscheduler schedulerwhen sched tsched testsubscriber long tsub testsubscriber create asyncwork sched subscribe tsub tsub assertvaluecount 0 tsched advancetimeby 0 seconds tsub assertvaluecount 0 tsched advancetimeby 1 seconds tsub assertvaluecount 2 tsched advancetimeby 1 seconds tsub assertvaluecount 4 tsched advancetimeby 1 seconds tsub assertvaluecount 5 tsub assertcomplete sched dispose 
final testscheduler tsched new testscheduler schedulerwhen sched throttlescheduler tsched testsubscriber long tsub testsubscriber create asyncwork sched subscribe tsub tsub assertvaluecount 0 tsched advancetimeby 0 seconds tsub assertvaluecount 0 tsched advancetimeby 1 seconds tsub assertvaluecount 1 tsched advancetimeby 1 seconds tsub assertvaluecount 1 tsched advancetimeby 1 seconds tsub assertvaluecount 2 tsched advancetimeby 1 seconds tsub assertvaluecount 2 tsched advancetimeby 1 seconds tsub assertvaluecount 3 tsched advancetimeby 1 seconds tsub assertvaluecount 3 tsched advancetimeby 1 seconds tsub assertvaluecount 4 tsched advancetimeby 1 seconds tsub assertvaluecount 4 tsched advancetimeby 1 seconds tsub assertvaluecount 5 tsub assertcomplete sched dispose 
testscheduler tsched new testscheduler schedulerwhen sched tsched testsubscriber long tsub testsubscriber create syncwork sched subscribe tsub tsub assertvaluecount 0 tsched advancetimeby 0 seconds tsub assertvaluecount 5 tsub assertcomplete sched dispose 
final testscheduler tsched new testscheduler schedulerwhen sched throttlescheduler tsched testsubscriber long tsub testsubscriber create syncwork sched subscribe tsub tsub assertvaluecount 0 tsched advancetimeby 0 seconds tsub assertvaluecount 1 tsched advancetimeby 1 seconds tsub assertvaluecount 2 tsched advancetimeby 1 seconds tsub assertvaluecount 3 tsched advancetimeby 1 seconds tsub assertvaluecount 4 tsched advancetimeby 1 seconds tsub assertvaluecount 5 tsub assertcomplete sched dispose 
return flowable range 1 5 flatmap new function integer flowable long override public flowable long apply integer t return flowable timer 1 seconds sched 
return flowable range 1 5 flatmap new function integer flowable long override public flowable long apply integer t return flowable defer new supplier flowable long override public flowable long get return flowable just 0l subscribeon sched 
schedulerwhen sched new schedulerwhen new function flowable flowable completable completable override public completable apply flowable flowable completable workeractions flowable completable workers workeractions map new function flowable completable completable override public completable apply flowable completable actions return completable concat actions return completable merge workers 2 tsched return sched 
schedulerwhen sched new schedulerwhen new function flowable flowable completable completable override public completable apply flowable flowable completable workeractions flowable completable workers workeractions map new function flowable completable completable override public completable apply flowable completable actions return completable concat actions return completable concat workers map new function completable completable override public completable apply completable worker return worker delay 1 seconds tsched tsched return sched 
scheduler comp schedulers computation scheduler limited comp when new function flowable flowable completable completable override public completable apply flowable flowable completable t return completable merge flowable merge t 10 merge just just 1 subscribeon limited observeon comp repeat 1000 blockingsubscribe 
schedulerwhen subscribed dispose assertfalse schedulerwhen subscribed isdisposed 
new schedulerwhen new function flowable flowable completable completable override public completable apply flowable flowable completable v throws exception throw new testexception schedulers single 
schedulerwhen sw new schedulerwhen new function flowable flowable completable completable override public completable apply flowable flowable completable v throws exception return completable never schedulers single assertfalse sw isdisposed sw dispose asserttrue sw isdisposed 
for int i 0 i testhelper race long loops i final scheduledaction sa new scheduledaction private static final long serialversionuid override protected disposable callactual worker actualworker completableobserver actioncompletable return disposable empty assertfalse sa isdisposed runnable r1 new runnable override public void run sa dispose testhelper race r1 r1 asserttrue sa isdisposed 
final atomicinteger count new atomicinteger scheduledaction sa new scheduledaction private static final long serialversionuid override protected disposable callactual worker actualworker completableobserver actioncompletable count incrementandget return disposable empty assertfalse sa isdisposed sa dispose asserttrue sa isdisposed sa dispose asserttrue sa isdisposed sa call schedulers single createworker null assertequals 0 count get sa set disposable empty sa call schedulers single createworker null assertequals 0 count get sa new scheduledaction private static final long serialversionuid override protected disposable callactual worker actualworker completableobserver actioncompletable count incrementandget dispose return disposable empty sa call schedulers single createworker null assertequals 1 count get 
final atomicinteger count new atomicinteger oncompletedaction a new oncompletedaction new runnable override public void run throw new testexception new override public void oncomplete count incrementandget override public void onerror throwable e count decrementandget e printstacktrace try a run fail should have thrown catch testexception expected assertequals 1 count get 
queueworker qw new queueworker publishprocessor scheduledaction create schedulers single createworker assertfalse qw isdisposed qw dispose asserttrue qw isdisposed qw dispose asserttrue qw isdisposed 
list throwable errors testhelper trackpluginerrors try task new new runnable override public void run throw new testexception true try task run fail should have thrown catch testexception expected testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
threadworker expire new compositedisposable cd new compositedisposable cachedworkerpool evictexpiredworkers expire cd 
threadworker expire new compositedisposable cd new compositedisposable threadworker tw new threadworker new rxthreadfactory ioexpirytest try expire add tw cd add tw cachedworkerpool evictexpiredworkers expire cd asserttrue tw isdisposed asserttrue expire isempty finally tw dispose 
threadworker expire new compositedisposable cd new compositedisposable threadworker tw new threadworker new rxthreadfactory ioexpirytest tw setexpirationtime system nanotime 10 000 000 000l try expire add tw cd add tw cachedworkerpool evictexpiredworkers expire cd assertfalse tw isdisposed assertfalse expire isempty finally tw dispose 
threadworker expire new compositedisposable cd new compositedisposable threadworker tw new threadworker new rxthreadfactory ioexpirytest tw dispose for int i 0 i testhelper race default loops i expire add tw cd add tw testhelper race cachedworkerpool evictexpiredworkers expire cd expire remove tw 
thread currentthread interrupt final int calls 0 assertsame emptydisposable instance schedulers trampoline scheduledirect new runnable override public void run calls 0 1 timeunit seconds asserttrue thread interrupted assertequals 0 calls 0 
worker w schedulers trampoline createworker assertfalse w isdisposed w dispose asserttrue w isdisposed assertequals emptydisposable instance w schedule functions empty runnable 
final worker w schedulers trampoline createworker try final int calls 0 0 w schedule new runnable override public void run calls 0 w schedule new runnable override public void run calls 1 dispose assertequals 1 calls 0 assertequals 0 calls 1 finally w dispose 
final worker w schedulers trampoline createworker try final int calls 0 0 w schedule new runnable override public void run calls 0 w schedule new runnable override public void run calls 1 1 timeunit milliseconds w dispose assertequals 1 calls 0 assertequals 0 calls 1 finally w dispose 
final worker w schedulers trampoline createworker try final int calls 0 0 w schedule new runnable override public void run calls 0 w dispose assertsame emptydisposable instance w schedule new runnable override public void run calls 1 1 timeunit milliseconds assertequals 1 calls 0 assertequals 0 calls 1 finally w dispose 
final worker w schedulers trampoline createworker try final int calls 0 thread currentthread interrupt w schedule new runnable override public void run calls 0 1 timeunit days asserttrue thread interrupted assertequals 0 calls 0 finally w dispose 
trampolineworker w new trampolineworker runnable r mock runnable class sleepingrunnable run new sleepingrunnable r w 0 w dispose run run verify r never run 
trampolineworker w new trampolineworker runnable r mock runnable class sleepingrunnable run new sleepingrunnable r w 0 run run verify r run 
final trampolineworker w new trampolineworker runnable r mock runnable class sleepingrunnable run new sleepingrunnable r w system currenttimemillis 200 schedulers single scheduledirect new runnable override public void run w dispose 100 timeunit milliseconds run run verify r never run 
scheduler worker w schedulers trampoline createworker for int i 0 i testhelper race default loops i runnable run mock runnable class atomicinteger sync new atomicinteger 2 w schedule disposable d w schedule run schedulers single scheduledirect if sync decrementandget 0 while sync get 0 d dispose if sync decrementandget 0 while sync get 0 
compositedisposable set new compositedisposable scheduledrunnable run new scheduledrunnable functions empty runnable set set add run assertfalse run isdisposed set dispose asserttrue run isdisposed 
compositedisposable set new compositedisposable scheduledrunnable run new scheduledrunnable functions empty runnable set set add run assertfalse run isdisposed run dispose run dispose asserttrue run isdisposed 
for int i 0 i testhelper race default loops i compositedisposable set new compositedisposable final scheduledrunnable run new scheduledrunnable functions empty runnable set set add run final futuretask object ft new futuretask functions empty runnable 0 runnable r1 new runnable override public void run run setfuture ft runnable r2 new runnable override public void run run dispose testhelper race r1 r2 assertequals 0 set size 
for int i 0 i testhelper race default loops i compositedisposable set new compositedisposable final scheduledrunnable run new scheduledrunnable functions empty runnable set set add run final futuretask object ft new futuretask functions empty runnable 0 runnable r1 new runnable override public void run run setfuture ft runnable r2 new runnable override public void run run run testhelper race r1 r2 assertequals 0 set size 
for int i 0 i testhelper race default loops i compositedisposable set new compositedisposable final scheduledrunnable run new scheduledrunnable functions empty runnable set set add run runnable r1 new runnable override public void run run dispose testhelper race r1 r1 assertequals 0 set size 
for int i 0 i testhelper race default loops i compositedisposable set new compositedisposable final scheduledrunnable run new scheduledrunnable functions empty runnable set set add run runnable r1 new runnable override public void run run call runnable r2 new runnable override public void run run dispose testhelper race r1 r2 assertequals 0 set size 
thread currentthread new override public void uncaughtexception thread t throwable e throw new testexception second compositedisposable set new compositedisposable final scheduledrunnable run new scheduledrunnable new runnable override public void run throw new testexception first set set add run try run run fail should have thrown catch testexception ex assertequals second ex getmessage finally thread currentthread null asserttrue run isdisposed assertequals 0 set size 
list throwable errors testhelper trackpluginerrors try compositedisposable set new compositedisposable final scheduledrunnable run new scheduledrunnable new runnable override public void run throw new testexception first set set add run try run run fail should have thrown catch testexception expected asserttrue run isdisposed assertequals 0 set size testhelper assertundeliverable errors 0 testexception class first finally rxjavaplugins reset 
scheduledrunnable run new scheduledrunnable functions empty runnable null run dispose run call 
scheduledrunnable run new scheduledrunnable functions empty runnable new compositedisposable run dispose run call 
scheduledrunnable run new scheduledrunnable functions empty runnable null run setfuture new futuretask void functions empty runnable null run dispose run call 
scheduledrunnable run new scheduledrunnable functions empty runnable null run dispose run setfuture new futuretask void functions empty runnable null run call 
scheduledrunnable run new scheduledrunnable functions empty runnable null run dispose run set 2 thread currentthread run setfuture new futuretask void functions empty runnable null run call 
for int i 0 i testhelper race default loops i compositedisposable set new compositedisposable final scheduledrunnable run new scheduledrunnable functions empty runnable set set add run final futuretask void ft new futuretask functions empty runnable null runnable r1 new runnable override public void run run call runnable r2 new runnable override public void run run setfuture ft testhelper race r1 r2 
for int i 0 i testhelper race long loops i final compositedisposable set new compositedisposable final atomicboolean interrupted new atomicboolean final atomicinteger sync new atomicinteger 2 final atomicinteger syncb new atomicinteger 2 runnable r0 new runnable override public void run set dispose if sync decrementandget 0 while sync get 0 if syncb decrementandget 0 while syncb get 0 for int j 0 j 1000 j if thread currentthread isinterrupted interrupted set true break final scheduledrunnable run new scheduledrunnable r0 set set add run final futuretask void ft new futuretask run null runnable r2 new runnable override public void run if sync decrementandget 0 while sync get 0 run setfuture ft if syncb decrementandget 0 while syncb get 0 testhelper race ft r2 assertfalse the task was interrupted interrupted get 
final scheduledrunnable run new scheduledrunnable functions empty runnable null run run assertequals scheduledrunnable done run get scheduledrunnable future index run dispose assertequals scheduledrunnable done run get scheduledrunnable future index 
final scheduledrunnable run new scheduledrunnable functions empty runnable null run set scheduledrunnable thread index thread currentthread run dispose assertequals scheduledrunnable sync disposed run get scheduledrunnable future index run dispose assertequals scheduledrunnable sync disposed run get scheduledrunnable future index run run assertequals scheduledrunnable sync disposed run get scheduledrunnable future index 
final scheduledrunnable run new scheduledrunnable functions empty runnable null run dispose assertequals scheduledrunnable async disposed run get scheduledrunnable future index run dispose assertequals scheduledrunnable async disposed run get scheduledrunnable future index run run assertequals scheduledrunnable async disposed run get scheduledrunnable future index 
scheduledrunnable run new scheduledrunnable functions empty runnable null assertfalse run isdisposed run run asserttrue run isdisposed 
compositedisposable set new compositedisposable scheduledrunnable run new scheduledrunnable functions empty runnable set set add run assertfalse run isdisposed run run asserttrue run isdisposed assertfalse set remove run 
compositedisposable set new compositedisposable scheduledrunnable task new scheduledrunnable functions empty runnable set assertequals scheduledrunnable waiting task tostring task set scheduledrunnable thread index thread currentthread assertequals scheduledrunnable running on thread currentthread task tostring task dispose assertequals scheduledrunnable disposed sync task tostring task set scheduledrunnable future index scheduledrunnable done assertequals scheduledrunnable finished task tostring task new scheduledrunnable functions empty runnable set task dispose assertequals scheduledrunnable disposed async task tostring 
final list worker list new arraylist mws schedulers computation mws createworkers max 2 new workercallback override public void onworker int i worker w list add w assertequals max 2 list size 
final list worker list new arraylist computationscheduler none createworkers max 2 new workercallback override public void onworker int i worker w list add w assertequals max 2 list size for worker w list assertequals computationscheduler shutdown worker w 
for int i 0 i testhelper race default loops i final compositedisposable composite new compositedisposable try final countdownlatch cdl new countdownlatch max 2 final set string threads1 collections synchronizedset new hashset final set string threads2 collections synchronizedset new hashset runnable parallel1 new runnable override public void run final list worker list1 new arraylist mws schedulers computation mws createworkers max new workercallback override public void onworker int i worker w list1 add w composite add w runnable run new runnable override public void run threads1 add thread currentthread getname cdl countdown for worker w list1 w schedule run runnable parallel2 new runnable override public void run final list worker list2 new arraylist mws schedulers computation mws createworkers max new workercallback override public void onworker int i worker w list2 add w composite add w runnable run new runnable override public void run threads2 add thread currentthread getname cdl countdown for worker w list2 w schedule run testhelper race parallel1 parallel2 asserttrue cdl await 5 timeunit seconds assertequals threads1 tostring max threads1 size assertequals threads2 tostring max threads2 size finally composite dispose 
assertequals 8 computationscheduler cap 8 1 assertequals 8 computationscheduler cap 8 0 assertequals 4 computationscheduler cap 8 4 assertequals 8 computationscheduler cap 8 8 assertequals 8 computationscheduler cap 8 9 assertequals 8 computationscheduler cap 8 16 
assertnotnull new executorscheduler singleholder 
testhelper checkutilityclass schedulerpoolfactory class 
asserttrue schedulerpoolfactory getbooleanproperty false key false true assertfalse schedulerpoolfactory getbooleanproperty false key true false 
asserttrue schedulerpoolfactory getbooleanproperty true key true false assertfalse schedulerpoolfactory getbooleanproperty true key false true 
asserttrue schedulerpoolfactory getbooleanproperty true key true false assertfalse schedulerpoolfactory getbooleanproperty true key false true 
asserttrue schedulerpoolfactory getbooleanproperty true true true false functions string identity assertfalse schedulerpoolfactory getbooleanproperty true false false true functions string identity 
abstractdirecttask task new abstractdirecttask functions empty runnable true private static final long serialversionuid final boolean interrupted null assertfalse task isdisposed task dispose asserttrue task isdisposed task dispose asserttrue task isdisposed futuretask void ft new futuretask void functions empty runnable null override public boolean cancel boolean interrupted 0 return super cancel task setfuture ft asserttrue interrupted 0 asserttrue task isdisposed 
abstractdirecttask task new abstractdirecttask functions empty runnable true private static final long serialversionuid final boolean interrupted null assertfalse task isdisposed task runner thread currentthread task dispose asserttrue task isdisposed task dispose asserttrue task isdisposed futuretask void ft new futuretask void functions empty runnable null override public boolean cancel boolean interrupted 0 return super cancel task setfuture ft assertfalse interrupted 0 asserttrue task isdisposed 
abstractdirecttask task new abstractdirecttask functions empty runnable true private static final long serialversionuid final boolean interrupted null futuretask void ft new futuretask void functions empty runnable null override public boolean cancel boolean interrupted 0 return super cancel assertfalse task isdisposed task setfuture ft assertfalse task isdisposed task dispose asserttrue task isdisposed asserttrue interrupted 0 
abstractdirecttask task new abstractdirecttask functions empty runnable true private static final long serialversionuid final boolean interrupted null futuretask void ft new futuretask void functions empty runnable null override public boolean cancel boolean interrupted 0 return super cancel assertfalse task isdisposed task setfuture ft task runner thread currentthread assertfalse task isdisposed task dispose asserttrue task isdisposed assertfalse interrupted 0 
abstractdirecttask task new abstractdirecttask functions empty runnable true private static final long serialversionuid final boolean interrupted null futuretask void ft new futuretask void functions empty runnable null override public boolean cancel boolean interrupted 0 return super cancel task set abstractdirecttask finished task setfuture ft asserttrue task isdisposed assertnull interrupted 0 task dispose asserttrue task isdisposed assertnull interrupted 0 
abstractdirecttask task new abstractdirecttask functions empty runnable true private static final long serialversionuid final boolean interrupted null futuretask void ft new futuretask void functions empty runnable null override public boolean cancel boolean interrupted 0 return super cancel task set abstractdirecttask finished asserttrue task isdisposed task dispose asserttrue task isdisposed task setfuture ft asserttrue task isdisposed assertnull interrupted 0 asserttrue task isdisposed assertnull interrupted 0 
for int i 0 i testhelper race default loops i final abstractdirecttask task new abstractdirecttask functions empty runnable true private static final long serialversionuid final boolean interrupted null final futuretask void ft new futuretask void functions empty runnable null override public boolean cancel boolean interrupted 0 return super cancel runnable r1 new runnable override public void run task dispose runnable r2 new runnable override public void run task setfuture ft testhelper race r1 r2 
testdirecttask task new testdirecttask assertequals testdirecttask waiting task tostring task runner thread currentthread assertequals testdirecttask running on thread currentthread task tostring task dispose assertequals testdirecttask disposed task tostring task set abstractdirecttask finished assertequals testdirecttask finished task tostring 
list throwable errors testhelper trackpluginerrors try task new throw new testexception null try task run fail should have thrown catch testexception expected testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
disposable d disposable empty disposeoncancel doc new disposeoncancel d assertfalse doc cancel true assertfalse doc iscancelled assertfalse doc isdone assertnull doc get assertnull doc get 1 timeunit seconds 
integer integer fcs new integer integer new testsubscriber 0l override public void onnext integer t override public int requestfusion int mode return 0 nullable override public integer poll throws exception return null fcs onsubscribe new scalarsubscription fcs 1 testhelper assertnooffer fcs assertfalse fcs isempty fcs clear asserttrue fcs isempty 
testsubscriber integer ts new testsubscriber integer integer bfs new integer integer ts override protected boolean beforedownstream return false override public void onnext nonnull integer t ts onnext t override public int requestfusion int mode return 0 override nullable public integer poll throws throwable return null bfs onsubscribe new booleansubscription assertfalse ts hassubscription 
final list object received new arraylist lambdasubscriber object subscriber new lambdasubscriber new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception received add 100 new consumer subscription override public void accept subscription s throws exception throw new testexception assertfalse subscriber isdisposed flowable just 1 subscribe subscriber asserttrue received tostring received get 0 instanceof testexception assertequals received tostring 1 received size asserttrue subscriber isdisposed 
final list object received new arraylist lambdasubscriber object subscriber new lambdasubscriber new consumer object override public void accept object v throws exception throw new testexception new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception received add 100 new consumer subscription override public void accept subscription s throws exception s request long max value assertfalse subscriber isdisposed flowable just 1 subscribe subscriber asserttrue received tostring received get 0 instanceof testexception assertequals received tostring 1 received size asserttrue subscriber isdisposed 
list throwable errors testhelper trackpluginerrors try final list object received new arraylist lambdasubscriber object subscriber new lambdasubscriber new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception throw new testexception inner new action override public void run throws exception received add 100 new consumer subscription override public void accept subscription s throws exception s request long max value assertfalse subscriber isdisposed flowable integer error new testexception outer subscribe subscriber asserttrue received tostring received isempty asserttrue subscriber isdisposed testhelper asserterror errors 0 compositeexception class list throwable ce testhelper compositelist errors get 0 testhelper asserterror ce 0 testexception class outer testhelper asserterror ce 1 testexception class inner finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try final list object received new arraylist lambdasubscriber object subscriber new lambdasubscriber new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception throw new testexception new consumer subscription override public void accept subscription s throws exception s request long max value assertfalse subscriber isdisposed flowable integer empty subscribe subscriber asserttrue received tostring received isempty asserttrue subscriber isdisposed testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
flowable integer source flowable frompublisher new publisher integer override public void subscribe subscriber super integer s booleansubscription s1 new booleansubscription s onsubscribe s1 booleansubscription s2 new booleansubscription s onsubscribe s2 assertfalse s1 iscancelled asserttrue s2 iscancelled s onnext 1 s oncomplete final list object received new arraylist lambdasubscriber object subscriber new lambdasubscriber new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception received add 100 new consumer subscription override public void accept subscription s throws exception s request long max value source subscribe subscriber assertequals arrays aslist 1 100 received 
flowable integer source flowable frompublisher new publisher integer override public void subscribe subscriber super integer s booleansubscription s1 new booleansubscription s onsubscribe s1 s onnext 1 s oncomplete s onnext 2 s onerror new testexception s oncomplete final list object received new arraylist lambdasubscriber object subscriber new lambdasubscriber new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception received add 100 new consumer subscription override public void accept subscription s throws exception s request long max value source subscribe subscriber assertequals arrays aslist 1 100 received 
publishprocessor integer pp publishprocessor create final list throwable errors new arraylist pp subscribe new consumer integer override public void accept integer v throws exception throw new testexception new consumer throwable override public void accept throwable e throws exception errors add e asserttrue no observers pp hassubscribers asserttrue has errors already errors isempty pp onnext 1 assertfalse has observers pp hassubscribers assertfalse no errors errors isempty asserttrue errors tostring errors get 0 instanceof testexception 
publishprocessor integer pp publishprocessor create final list throwable errors new arraylist pp subscribe new lambdasubscriber new consumer integer override public void accept integer v throws exception new consumer throwable override public void accept throwable e throws exception errors add e new action override public void run throws exception new consumer subscription override public void accept subscription s throws exception throw new testexception assertfalse has observers pp hassubscribers assertfalse no errors errors isempty asserttrue errors tostring errors get 0 instanceof testexception 
lambdasubscriber integer subscriber new lambdasubscriber functions integer emptyconsumer functions on error missing functions empty action requestmax instance assertfalse subscriber hascustomonerror 
lambdasubscriber integer subscriber new lambdasubscriber functions integer emptyconsumer functions throwable emptyconsumer functions empty action requestmax instance asserttrue subscriber hascustomonerror 
for int i 0 i testhelper race default loops i final testsubscriber integer ts new testsubscriber 0l final integer integer spc new integer integer ts private static final long serialversionuid override public void onnext integer t override public void onerror throwable t override public void oncomplete complete 1 spc onsubscribe new booleansubscription runnable r1 new runnable override public void run spc oncomplete runnable r2 new runnable override public void run ts request 1 testhelper race r1 r2 ts assertresult 1 
integer support new integer override public void innernext integer inner integer value override public void innererror integer inner throwable e override public void innercomplete integer inner override public void drain integer inner new support 4 final list long requests new arraylist inner onsubscribe new subscription override public void request long n requests add n override public void cancel inner request 1 inner request 1 inner request 1 inner request 1 inner request 1 assertequals arrays aslist 4l 3l requests 
final list object list new arraylist subscriber object sub new subscriber object override public void onsubscribe subscription s s request 10 override public void onnext object t list add t override public void onerror throwable t list add t override public void oncomplete list add done new flowable object override protected void subscribeactual subscriber super object s s onsubscribe new booleansubscription s onnext s subscribe sub asserttrue list tostring list get 0 instanceof strictsubscriber 
s request 10 
list add t 
list add t 
list add done 
testsubscriberex integer ts new testsubscriberex subscriberwrapper integer wrapper new subscriberwrapper ts flowable range 1 5 subscribe wrapper ts assertresult 1 2 3 4 5 
testsubscriberex integer ts new testsubscriberex 0 subscriberwrapper integer wrapper new subscriberwrapper ts flowable range 1 5 subscribe wrapper ts assertempty requestmore 1 assertvalue 1 requestmore 2 assertvalues 1 2 3 requestmore 2 assertresult 1 2 3 4 5 
testsubscriberex integer ts new testsubscriberex subscriberwrapper integer wrapper new subscriberwrapper ts flowable range 1 5 concatwith flowable integer error new testexception subscribe wrapper ts assertfailure testexception class 1 2 3 4 5 
final list object list new arraylist subscriber object sub new subscriber object override public void onsubscribe subscription s s request 5 list add 0 override public void onnext object t list add t override public void onerror throwable t list add t override public void oncomplete list add done flowable range 1 5 subscribe sub assertequals arrays object aslist 0 1 2 3 4 5 done list 
final list object list new arraylist subscriber object sub new subscriber object override public void onsubscribe subscription s s request 0 override public void onnext object t list add t override public void onerror throwable t list add t override public void oncomplete list add done flowable range 1 5 subscribe sub asserttrue list tostring list get 0 instanceof asserttrue list tostring list get 0 tostring contains 3 9 
final list object list new arraylist subscriber object sub new subscriber object override public void onsubscribe subscription s s request 99 override public void onnext object t list add t override public void onerror throwable t list add t override public void oncomplete list add done flowable range 1 5 subscribe sub asserttrue list tostring list get 0 instanceof asserttrue list tostring list get 0 tostring contains 3 9 
final list object list new arraylist subscriber object sub new subscriber object subscription upstream override public void onsubscribe subscription s this upstream s override public void onnext object t list add t override public void onerror throwable t upstream cancel list add t override public void oncomplete upstream cancel list add done new flowable object override protected void subscribeactual subscriber super object s booleansubscription b new booleansubscription s onsubscribe b s oncomplete list add b iscancelled subscribe sub assertequals arrays object aslist done false list 
final list object list new arraylist subscriber object sub new subscriber object subscription upstream override public void onsubscribe subscription s this upstream s override public void onnext object t list add t override public void onerror throwable t upstream cancel list add t getmessage override public void oncomplete upstream cancel list add done new flowable object override protected void subscribeactual subscriber super object s booleansubscription b new booleansubscription s onsubscribe b s onerror new testexception forced failure list add b iscancelled subscribe sub assertequals arrays object aslist forced failure false list 
testsubscriberex integer ts new testsubscriberex subscriberwrapper integer wrapper new subscriberwrapper ts new flowable integer override protected void subscribeactual subscriber super integer s booleansubscription b1 new booleansubscription s onsubscribe b1 booleansubscription b2 new booleansubscription s onsubscribe b2 asserttrue b1 iscancelled asserttrue b2 iscancelled subscribe wrapper ts assertfailure class asserttrue ts errors tostring ts errors get 0 getmessage contains 2 12 
events add oncomplete 
events add t 
return source subscribe onnext onerror oncomplete composite 
disposable d subscribeautodispose processor composite this functions on error missing assertfalse d getclass tostring d hascustomonerror asserttrue composite size 0 asserttrue events tostring events isempty processor onnext 1 asserttrue composite size 0 assertequals arrays object aslist 1 events processor oncomplete assertequals arrays object aslist 1 events assertequals 0 composite size 
subscribeautodispose processor composite this this asserttrue composite size 0 asserttrue events tostring events isempty processor onnext 1 asserttrue composite size 0 assertequals arrays object aslist 1 events processor oncomplete assertequals arrays object aslist 1 events assertequals 0 composite size 
disposable d subscribeautodispose processor composite this this this asserttrue d getclass tostring d hascustomonerror asserttrue composite size 0 asserttrue events tostring events isempty processor onnext 1 asserttrue composite size 0 assertequals arrays object aslist 1 events processor onerror new ioexception assertequals events tostring 1 events get 0 asserttrue events tostring events get 1 instanceof ioexception assertequals 0 composite size 
subscribeautodispose processor composite this this this asserttrue composite size 0 asserttrue events tostring events isempty processor onnext 1 asserttrue composite size 0 assertequals arrays object aslist 1 events processor oncomplete assertequals arrays object aslist 1 oncomplete events assertequals 0 composite size 
subscribeautodispose processor composite this this this asserttrue composite size 0 asserttrue events tostring events isempty processor onnext 1 asserttrue composite size 0 assertequals arrays object aslist 1 events processor onerror new ioexception assertequals events tostring 1 events get 0 asserttrue events tostring events get 1 instanceof ioexception assertequals 0 composite size 
disposable d subscribeautodispose processor composite this this this asserttrue composite size 0 asserttrue events tostring events isempty assertfalse d isdisposed d dispose d dispose asserttrue d isdisposed assertequals 0 composite size assertfalse processor hassubscribers 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite new consumer object override public void accept object t throws exception throw new ioexception this this processor onnext 1 asserttrue errors tostring errors isempty asserttrue events tostring events get 0 instanceof ioexception finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite this new consumer throwable override public void accept throwable t throws exception throw new ioexception t this processor onerror new asserttrue events tostring events isempty testhelper asserterror errors 0 compositeexception class list throwable inners testhelper compositelist errors get 0 testhelper asserterror inners 0 class testhelper asserterror inners 1 ioexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite new consumer object override public void accept object t throws exception throw new ioexception functions on error missing processor onnext 1 asserttrue events tostring events isempty testhelper asserterror errors 0 class asserttrue errors get 0 getcause instanceof ioexception finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite this this new action override public void run throws exception throw new ioexception processor onnext 1 processor oncomplete assertequals arrays aslist 1 events testhelper assertundeliverable errors 0 ioexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s oncomplete s onsubscribe new booleansubscription s onnext 2 s oncomplete s onerror new ioexception composite this this this assertequals arrays object aslist 1 oncomplete events testhelper assertundeliverable errors 0 ioexception class finally rxjavaplugins reset 
final list object received new arraylist boundedsubscriber object subscriber new boundedsubscriber new consumer object override public void accept object o throws exception received add o new consumer throwable override public void accept throwable throwable throws exception received add throwable new action override public void run throws exception received add 1 new consumer subscription override public void accept subscription subscription throws exception throw new testexception 128 assertfalse subscriber isdisposed flowable just 1 subscribe subscriber asserttrue received tostring received get 0 instanceof testexception assertequals received tostring 1 received size asserttrue subscriber isdisposed 
final list object received new arraylist boundedsubscriber object subscriber new boundedsubscriber new consumer object override public void accept object o throws exception throw new testexception new consumer throwable override public void accept throwable throwable throws exception received add throwable new action override public void run throws exception received add 1 new consumer subscription override public void accept subscription subscription throws exception subscription request 128 128 assertfalse subscriber isdisposed flowable just 1 subscribe subscriber asserttrue received tostring received get 0 instanceof testexception assertequals received tostring 1 received size asserttrue subscriber isdisposed 
list throwable errors testhelper trackpluginerrors try final list object received new arraylist boundedsubscriber object subscriber new boundedsubscriber new consumer object override public void accept object o throws exception received add o new consumer throwable override public void accept throwable throwable throws exception throw new testexception inner new action override public void run throws exception received add 1 new consumer subscription override public void accept subscription subscription throws exception subscription request 128 128 assertfalse subscriber isdisposed flowable integer error new testexception outer subscribe subscriber asserttrue received tostring received isempty asserttrue subscriber isdisposed testhelper asserterror errors 0 compositeexception class list throwable ce testhelper compositelist errors get 0 testhelper asserterror ce 0 testexception class outer testhelper asserterror ce 1 testexception class inner finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try final list object received new arraylist boundedsubscriber object subscriber new boundedsubscriber new consumer object override public void accept object o throws exception received add o new consumer throwable override public void accept throwable throwable throws exception received add throwable new action override public void run throws exception throw new testexception new consumer subscription override public void accept subscription subscription throws exception subscription request 128 128 assertfalse subscriber isdisposed flowable integer empty subscribe subscriber asserttrue received tostring received isempty asserttrue subscriber isdisposed testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
publishprocessor integer pp publishprocessor create final list throwable errors new arraylist boundedsubscriber integer s new boundedsubscriber new consumer integer override public void accept integer v throws exception throw new testexception new consumer throwable override public void accept throwable e throws exception errors add e new action override public void run throws exception new consumer subscription override public void accept subscription subscription throws exception subscription request 128 128 pp subscribe s asserttrue no observers pp hassubscribers asserttrue has errors already errors isempty pp onnext 1 assertfalse has observers pp hassubscribers assertfalse no errors errors isempty asserttrue errors tostring errors get 0 instanceof testexception 
publishprocessor integer pp publishprocessor create final list throwable errors new arraylist boundedsubscriber integer s new boundedsubscriber new consumer integer override public void accept integer v throws exception new consumer throwable override public void accept throwable e throws exception errors add e new action override public void run throws exception new consumer subscription override public void accept subscription s throws exception throw new testexception 128 pp subscribe s assertfalse has observers pp hassubscribers assertfalse no errors errors isempty asserttrue errors tostring errors get 0 instanceof testexception 
flowable integer source flowable frompublisher new publisher integer override public void subscribe subscriber super integer s booleansubscription s1 new booleansubscription s onsubscribe s1 booleansubscription s2 new booleansubscription s onsubscribe s2 assertfalse s1 iscancelled asserttrue s2 iscancelled s onnext 1 s oncomplete final list object received new arraylist boundedsubscriber object subscriber new boundedsubscriber new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception received add 100 new consumer subscription override public void accept subscription s throws exception s request 128 128 source subscribe subscriber assertequals arrays aslist 1 100 received 
flowable integer source flowable frompublisher new publisher integer override public void subscribe subscriber super integer s booleansubscription s1 new booleansubscription s onsubscribe s1 s onnext 1 s oncomplete s onnext 2 s onerror new testexception s oncomplete final list object received new arraylist boundedsubscriber object subscriber new boundedsubscriber new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception received add 100 new consumer subscription override public void accept subscription s throws exception s request 128 128 source subscribe subscriber assertequals arrays aslist 1 100 received 
boundedsubscriber integer subscriber new boundedsubscriber functions integer emptyconsumer functions on error missing functions empty action functions subscription boundedconsumer 128 128 assertfalse subscriber hascustomonerror 
boundedsubscriber integer subscriber new boundedsubscriber functions integer emptyconsumer functions throwable emptyconsumer functions empty action functions subscription boundedconsumer 128 128 asserttrue subscriber hascustomonerror 
boundedsubscriber integer subscriber new boundedsubscriber functions integer emptyconsumer functions throwable emptyconsumer functions empty action functions subscription boundedconsumer 128 128 booleansubscription bs new booleansubscription subscriber onsubscribe bs subscriber cancel asserttrue bs iscancelled 
boundedsubscriber integer subscriber new boundedsubscriber functions integer emptyconsumer functions throwable emptyconsumer functions empty action functions subscription boundedconsumer 128 128 booleansubscription bs new booleansubscription subscriber onsubscribe bs assertfalse subscriber isdisposed subscriber dispose asserttrue bs iscancelled asserttrue subscriber isdisposed 
return new queuedrainsubscriber integer integer integer ts new spscarrayqueue 4 override public void onnext integer t fastpathemitmax t false d override public void onerror throwable t override public void oncomplete override public void onsubscribe subscription s override public boolean accept subscriber super integer a integer v super accept a v a onnext v return true 
return new queuedrainsubscriber integer integer integer ts new spscarrayqueue 4 override public void onnext integer t t false d override public void onerror throwable t override public void oncomplete override public void onsubscribe subscription s override public boolean accept subscriber super integer a integer v super accept a v a onnext v return true 
return new queuedrainsubscriber integer integer integer ts new spscarrayqueue 4 override public void onnext integer t fastpathemitmax t false d override public void onerror throwable t override public void oncomplete override public void onsubscribe subscription s override public boolean accept subscriber super integer a integer v super accept a v a onnext v return false 
return new queuedrainsubscriber integer integer integer ts new spscarrayqueue 4 override public void onnext integer t t false d override public void onerror throwable t override public void oncomplete override public void onsubscribe subscription s override public boolean accept subscriber super integer a integer v super accept a v a onnext v return false 
testsubscriber integer ts new testsubscriber 0 disposable d disposable empty queuedrainsubscriber integer integer integer qd createunordered ts d ts onsubscribe new booleansubscription qd onnext 1 ts assertfailure class asserttrue d isdisposed 
testsubscriber integer ts new testsubscriber 0 disposable d disposable empty queuedrainsubscriber integer integer integer qd createordered ts d ts onsubscribe new booleansubscription qd onnext 1 ts assertfailure class asserttrue d isdisposed 
testsubscriber integer ts new testsubscriber 0 disposable d disposable empty queuedrainsubscriber integer integer integer qd createunordered ts d ts onsubscribe new booleansubscription asserttrue qd accept ts 0 list throwable errors testhelper trackpluginerrors try qd requested 1 testhelper asserterror errors 0 class finally rxjavaplugins reset 
testsubscriber integer ts new testsubscriber 1 disposable d disposable empty queuedrainsubscriber integer integer integer qd createunordered ts d ts onsubscribe new booleansubscription qd requested 1 qd onnext 1 ts assertvaluesonly 1 
testsubscriber integer ts new testsubscriber 1 disposable d disposable empty queuedrainsubscriber integer integer integer qd createordered ts d ts onsubscribe new booleansubscription qd requested 1 qd onnext 1 ts assertvaluesonly 1 
testsubscriber integer ts new testsubscriber 1 disposable d disposable empty queuedrainsubscriber integer integer integer qd createunordered ts d ts onsubscribe new booleansubscription qd enter qd onnext 1 ts assertempty 
testsubscriber integer ts new testsubscriber 1 disposable d disposable empty queuedrainsubscriber integer integer integer qd createordered ts d ts onsubscribe new booleansubscription qd enter qd onnext 1 ts assertempty 
testsubscriber integer ts new testsubscriber 1 disposable d disposable empty queuedrainsubscriber integer integer integer qd createordered ts d ts onsubscribe new booleansubscription qd queue offer 0 qd requested 2 qd onnext 1 ts assertvaluesonly 0 1 
for int i 0 i testhelper race long loops i testsubscriber integer ts new testsubscriber 1 disposable d disposable empty final queuedrainsubscriber integer integer integer qd createunordered ts d ts onsubscribe new booleansubscription qd requested long max value runnable r1 new runnable override public void run qd onnext 1 testhelper race r1 r1 ts assertvaluesonly 1 1 
for int i 0 i testhelper race long loops i testsubscriber integer ts new testsubscriber 1 disposable d disposable empty final queuedrainsubscriber integer integer integer qd createordered ts d ts onsubscribe new booleansubscription qd requested long max value runnable r1 new runnable override public void run qd onnext 1 testhelper race r1 r1 ts assertvaluesonly 1 1 
testsubscriber integer ts new testsubscriber 1 disposable d disposable empty queuedrainsubscriber integer integer integer qd ts d ts onsubscribe new booleansubscription qd requested 1 qd onnext 1 ts assertvaluesonly 1 assertequals 1 qd requested 
testsubscriber integer ts new testsubscriber 1 disposable d disposable empty queuedrainsubscriber integer integer integer qd createorderedreject ts d ts onsubscribe new booleansubscription qd requested 1 qd onnext 1 ts assertvaluesonly 1 assertequals 1 qd requested 
fs new futuresubscriber 
assertfalse fs isdone assertfalse fs iscancelled fs cancel fs cancel fs request 10 fs request 99 fs cancel false asserttrue fs isdone asserttrue fs iscancelled try fs get fail should have thrown catch ex try fs get 1 timeunit milliseconds fail should have thrown catch ex 
list throwable errors testhelper trackpluginerrors try fs onerror new testexception one fs onerror new testexception two try fs get 5 timeunit milliseconds catch executionexception ex asserttrue ex tostring ex getcause instanceof testexception assertequals one ex getcause getmessage testhelper assertundeliverable errors 0 testexception class two finally rxjavaplugins reset 
fs onnext 1 fs oncomplete assertequals 1 fs get 5 timeunit milliseconds intvalue 
list throwable errors testhelper trackpluginerrors try booleansubscription s new booleansubscription fs onsubscribe s booleansubscription s2 new booleansubscription fs onsubscribe s2 assertfalse s iscancelled asserttrue s2 iscancelled testhelper asserterror errors 0 class subscription already set finally rxjavaplugins reset 
for int i 0 i testhelper race default loops i final futuresubscriber integer fs new futuresubscriber runnable r new runnable override public void run fs cancel false testhelper race r r 
schedulers single scheduledirect new runnable override public void run fs onnext 1 fs oncomplete 100 timeunit milliseconds assertequals 1 fs get 5 timeunit seconds intvalue 
for int i 0 i testhelper race default loops i final futuresubscriber integer fs new futuresubscriber final testexception ex new testexception runnable r1 new runnable override public void run fs cancel false runnable r2 new runnable override public void run fs onerror ex testhelper race r1 r2 
for int i 0 i testhelper race default loops i final futuresubscriber integer fs new futuresubscriber if i 3 0 fs onsubscribe new booleansubscription if i 2 0 fs onnext 1 runnable r1 new runnable override public void run fs cancel false runnable r2 new runnable override public void run fs oncomplete testhelper race r1 r2 
fs onerror new testexception one fs oncomplete try fs get 5 timeunit milliseconds catch executionexception ex asserttrue ex tostring ex getcause instanceof testexception assertequals one ex getcause getmessage 
fs oncomplete fs onerror new testexception one try assertnull fs get 5 timeunit milliseconds catch executionexception ex asserttrue ex tostring ex getcause instanceof 
fs cancel true fs onerror new testexception one try fs get 5 timeunit milliseconds fail should have thrown catch ex 
fs cancel true fs oncomplete try fs get 5 timeunit milliseconds fail should have thrown catch ex 
fs onnext 1 fs oncomplete fs oncomplete assertequals 1 fs get 5 timeunit milliseconds intvalue 
schedulers single scheduledirect new runnable override public void run fs onnext 1 fs oncomplete 500 timeunit milliseconds assertequals 1 fs get intvalue 
try fs get 1 timeunit nanoseconds fail should have thrown catch timeoutexception expected assertequals timeoutmessage 1 timeunit nanoseconds expected getmessage 
list throwable errors testhelper trackpluginerrors try fs onnext 1 fs oncomplete fs onerror new testexception one assertequals integer 1 fs get 5 timeunit milliseconds testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
integer cs new integer override public void onsubscribe subscription s override public void onnext integer t override public void onerror throwable t override public void oncomplete override public boolean tryonnext integer t return false integer integer fcs new integer integer cs override public boolean tryonnext integer t return false override public void onnext integer t override public int requestfusion int mode return 0 nullable override public integer poll throws exception return null fcs onsubscribe new scalarsubscription fcs 1 testhelper assertnooffer fcs assertfalse fcs isempty fcs clear asserttrue fcs isempty 
suppresswarnings unchecked integer ts mock class integer integer bfs new integer integer ts override protected boolean beforedownstream return false override public void onnext nonnull integer t ts onnext t override public int requestfusion int mode return 0 override public boolean tryonnext nonnull integer t return false override nullable public integer poll throws throwable return null bfs onsubscribe new booleansubscription verify ts never onsubscribe any 
testhelper f f map v v filter v true 
suppresswarnings unchecked integer ts mock class integer integer bfs new integer integer ts override protected boolean beforedownstream return false override public void onnext nonnull integer t ts onnext t override public int requestfusion int mode return 0 override public boolean tryonnext nonnull integer t return false override nullable public integer poll throws throwable return null bfs onsubscribe new booleansubscription assertequals queuefuseable none bfs queuefuseable any 
suppresswarnings unchecked integer ts mock class integer integer bfs new integer integer ts override protected boolean beforedownstream return false override public void onnext nonnull integer t ts onnext t override public int requestfusion int mode return 0 override public boolean tryonnext nonnull integer t return false override nullable public integer poll throws throwable return null bfs onsubscribe emptysubscription instance assertequals queuefuseable async bfs queuefuseable any 
suppresswarnings unchecked integer ts mock class integer integer bfs new integer integer ts override protected boolean beforedownstream return false override public void onnext nonnull integer t ts onnext t override public int requestfusion int mode return 0 override public boolean tryonnext nonnull integer t return false override nullable public integer poll throws throwable return null bfs onsubscribe emptysubscription instance assertequals queuefuseable none bfs queuefuseable any queuefuseable boundary 
testsubscriber integer ts testsubscriber create 0l ds new ts ds setupdownstream ds onnext 1 ts assertnovalues ds oncomplete ts assertnovalues ts request 1 ts assertvalues 1 ts assertnoerrors ts assertcomplete 
testsubscriber integer ts testsubscriber create 1 ds new ts ds setupdownstream ds onnext 1 ts assertnovalues ds oncomplete ts assertvalues 1 ts assertnoerrors ts assertcomplete 
testsubscriber integer ts testsubscriber create 0l ds new ts ds setupdownstream ts assertnovalues ds oncomplete ts assertnovalues ts assertnoerrors ts assertcomplete 
testsubscriber integer ts testsubscriber create 0l ds new ts ds setupdownstream ts assertnovalues ds onerror new testexception ts assertnovalues ts asserterror testexception class ts assertnotcomplete 
publishprocessor integer pp publishprocessor create testsubscriber integer ts testsubscriber create 0l ds new ts pp subscribe ds asserttrue no subscribers pp hassubscribers ts cancel ds onnext 1 ds oncomplete ts request 1 ts assertnovalues ts assertnoerrors ts assertnotcomplete assertfalse subscribers pp hassubscribers asserttrue deferred not unsubscribed ds iscancelled 
testsubscriber integer ts testsubscriber create 0l ds new ts flowable just 1 ignoreelements integer toflowable subscribe ds ts assertnovalues ts assertnovalues ts assertnoerrors ts assertcomplete 
testsubscriber integer ts testsubscriber create 0l ds new ts ds subscribeto flowable just 1 ts assertnovalues ts request 1 ts assertvalue 1 ts assertnoerrors ts assertcomplete 
testsubscriber integer ts testsubscriber create 0 ds new ts ds subscribeto flowable range 1 10 ts assertnovalues ts request 1 ts assertvalue 10 ts assertnoerrors ts assertcomplete 
testsubscriber integer ts new testsubscriber integer override public void onnext integer t super onnext t cancel ds new ts ds setupdownstream ds onnext 1 ts assertnovalues ds oncomplete ts assertvalue 1 ts assertnoerrors ts assertnotcomplete 
super onnext t cancel 
testsubscriber integer ts new testsubscriber integer 0l override public void onnext integer t super onnext t cancel ds new ts ds setupdownstream ds onnext 1 ds oncomplete ts assertnovalues ts request 1 ts assertvalue 1 ts assertnoerrors ts assertnotcomplete 
testsubscriber integer ts testsubscriber create 0 ds new ts ds setupdownstream ds onnext 1 ts request 1 ds oncomplete ds oncomplete ts assertvalue 1 ts assertnoerrors ts assertcomplete 
testsubscriber integer ts testsubscriber create 0 ds new ts ds setupdownstream ds onnext 1 ds oncomplete ds oncomplete ts request 1 ts assertvalue 1 ts assertnoerrors ts assertcomplete 
testsubscriber integer ts testsubscriber create 0 ds new ts ds setupdownstream ds onnext 1 ts request 1 ts request 1 ds oncomplete ts assertvalue 1 ts assertnoerrors ts assertcomplete 
list throwable list testhelper trackpluginerrors testsubscriber integer ts testsubscriber create 0 ds new ts ds setupdownstream ds downstreamrequest 99 rxjavaplugins reset testhelper asserterror list 0 class n 0 required but it was 99 
testsubscriber integer ts testsubscriber create 0 ds new ts ds setupdownstream ts cancel ds downstreamrequest 1 ds onnext 1 ds oncomplete ds oncomplete ts assertnovalues ts assertnoerrors ts assertnotcomplete 
worker w schedulers computation createworker try for int i 0 i i final testsubscriber integer ts testsubscriber create 0l ds new ts ds setupdownstream ds onnext 1 final atomicinteger ready new atomicinteger 2 w schedule new runnable override public void run ready decrementandget while ready get 0 ts request 1 ready decrementandget while ready get 0 ds oncomplete ts awaitdone 5 timeunit seconds ts assertvalues 1 ts assertnoerrors ts assertcomplete finally w dispose 
worker w schedulers io createworker worker w2 schedulers io createworker int m if runtime getruntime availableprocessors 3 m 1000 try for int i 0 i m i final testsubscriber integer ts testsubscriber create 0l ds new ts ds setupdownstream ds onnext 1 final atomicinteger ready new atomicinteger 3 w schedule new runnable override public void run ready decrementandget while ready get 0 ts request 1 w2 schedule new runnable override public void run ready decrementandget while ready get 0 ts request 1 ready decrementandget while ready get 0 ds oncomplete ts awaitdone 5 timeunit seconds ts assertvalues 1 ts assertnoerrors ts assertcomplete finally w dispose w2 dispose 
onsubscribe new booleansubscription 
p subscribe this 
testhelper doubleonsubscribe new integer integer new testsubscriber private static final long serialversionuid override public void onnext integer t 
list throwable errors testhelper trackpluginerrors try testhelper checkenum emptycomponent class emptycomponent c emptycomponent instance asserttrue c isdisposed c request 10 c request 10 disposable d disposable empty c onsubscribe d asserttrue d isdisposed booleansubscription s new booleansubscription c onsubscribe s asserttrue s iscancelled c onnext null c onnext 1 c oncomplete c onerror new testexception c onsuccess 2 c cancel testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
testhelper doubleonsubscribe new blockingsubscriber integer new arraydeque 
blockingsubscriber integer bq new blockingsubscriber new arraydeque assertfalse bq iscancelled bq cancel asserttrue bq iscancelled bq cancel asserttrue bq iscancelled 
testhelper doubleonsubscribe new integer 
integer bf new thread currentthread interrupt try bf blockingget fail should have thrown catch runtimeexception ex asserttrue ex tostring ex getcause instanceof interruptedexception 
integer bf new bf onsubscribe new booleansubscription thread currentthread interrupt try bf blockingget fail should have thrown catch runtimeexception ex asserttrue ex tostring ex getcause instanceof interruptedexception 
final integer bf new final atomicboolean b new atomicboolean subscription s new subscription override public void request long n bf cancelled true override public void cancel b set true bf onsubscribe s asserttrue b get 
final integer bf new final atomicboolean b new atomicboolean bf cancelled true subscription s new subscription override public void request long n b set true override public void cancel bf onsubscribe s assertfalse b get 
booleansubscription bs new booleansubscription disposable d disposable empty s setresource d s onsubscribe bs assertfalse d isdisposed assertfalse s isdisposed ts cancel asserttrue bs iscancelled asserttrue d isdisposed asserttrue s isdisposed 
booleansubscription bs new booleansubscription disposable d disposable empty s setresource d s onsubscribe bs s onerror new testexception asserttrue d isdisposed assertfalse bs iscancelled ts assertfailure testexception class 
booleansubscription bs new booleansubscription disposable d disposable empty s setresource d s onsubscribe bs s oncomplete asserttrue d isdisposed assertfalse bs iscancelled ts assertresult 
testhelper new function flowable object flowable object override public flowable object apply flowable object f throws exception return f lift new flowableoperator object object override public subscriber super object apply subscriber super object s throws exception return new s 
testhelper flowable never lift new flowableoperator object object override public subscriber super object apply subscriber super object s throws exception return new s 
flowable range 1 10 subscribewith new testsubscriber assertresult 1 2 3 4 5 6 7 8 9 10 
observable range 1 10 subscribewith new testobserver assertresult 1 2 3 4 5 6 7 8 9 10 
$EMPTY$
this value 100 
this value value 
this value e 
assertequals 1 single just 1 subscribewith new observerimpl value 
assertequals 100 completable complete subscribewith new observerimpl value 
testsubscriber integer ts new testsubscriber 0l scalarsubscription integer sc new scalarsubscription ts 1 list throwable errors testhelper trackpluginerrors try sc request 99 testhelper asserterror errors 0 class n 0 required but it was 99 finally rxjavaplugins reset 
testsubscriber integer ts new testsubscriber 0l scalarsubscription integer sc new scalarsubscription ts 1 testhelper assertnooffer sc 
return null 
return false 
$EMPTY$
$EMPTY$
return null 
return false 
$EMPTY$
$EMPTY$
testhelper assertnooffer new emptyqs 
testhelper assertnooffer new emptyintqs 
testhelper checkenum emptysubscription class assertequals emptysubscription emptysubscription instance tostring testhelper assertnooffer emptysubscription instance 
testhelper checkenum subscriptionhelper class 
list throwable errors testhelper trackpluginerrors try subscriptionhelper validate null null testhelper asserterror errors 0 nullpointerexception class next is null finally rxjavaplugins reset 
subscriptionhelper cancelled cancel 
atomicreference subscription atomicsubscription new atomicreference booleansubscription bs1 new booleansubscription asserttrue subscriptionhelper set atomicsubscription bs1 booleansubscription bs2 new booleansubscription asserttrue subscriptionhelper set atomicsubscription bs2 asserttrue bs1 iscancelled assertfalse bs2 iscancelled 
atomicreference subscription atomicsubscription new atomicreference booleansubscription bs1 new booleansubscription asserttrue subscriptionhelper replace atomicsubscription bs1 booleansubscription bs2 new booleansubscription asserttrue subscriptionhelper replace atomicsubscription bs2 assertfalse bs1 iscancelled assertfalse bs2 iscancelled 
for int i 0 i testhelper race default loops i final atomicreference subscription atomicsubscription new atomicreference runnable r new runnable override public void run subscriptionhelper cancel atomicsubscription testhelper race r r 
for int i 0 i testhelper race default loops i final atomicreference subscription atomicsubscription new atomicreference final booleansubscription bs1 new booleansubscription final booleansubscription bs2 new booleansubscription runnable r1 new runnable override public void run subscriptionhelper set atomicsubscription bs1 runnable r2 new runnable override public void run subscriptionhelper set atomicsubscription bs2 testhelper race r1 r2 asserttrue bs1 iscancelled bs2 iscancelled 
for int i 0 i testhelper race default loops i final atomicreference subscription atomicsubscription new atomicreference final booleansubscription bs1 new booleansubscription final booleansubscription bs2 new booleansubscription runnable r1 new runnable override public void run subscriptionhelper replace atomicsubscription bs1 runnable r2 new runnable override public void run subscriptionhelper replace atomicsubscription bs2 testhelper race r1 r2 assertfalse bs1 iscancelled assertfalse bs2 iscancelled 
atomicreference subscription atomicsubscription new atomicreference subscriptionhelper cancel atomicsubscription booleansubscription bs1 new booleansubscription assertfalse subscriptionhelper set atomicsubscription bs1 asserttrue bs1 iscancelled assertfalse subscriptionhelper set atomicsubscription null booleansubscription bs2 new booleansubscription assertfalse subscriptionhelper replace atomicsubscription bs2 asserttrue bs2 iscancelled assertfalse subscriptionhelper replace atomicsubscription null 
atomicreference subscription atomicsubscription new atomicreference atomiclong r new atomiclong list throwable errors testhelper trackpluginerrors try subscriptionhelper deferredrequest atomicsubscription r 99 testhelper asserterror errors 0 class n 0 required but it was 99 finally rxjavaplugins reset 
for int i 0 i testhelper race default loops i final atomicreference subscription atomicsubscription new atomicreference final atomiclong r new atomiclong final atomiclong q new atomiclong final subscription a new subscription override public void request long n q addandget n override public void cancel runnable r1 new runnable override public void run subscriptionhelper deferredsetonce atomicsubscription r a runnable r2 new runnable override public void run subscriptionhelper deferredrequest atomicsubscription r 1 testhelper race r1 r2 assertsame a atomicsubscription get assertequals 1 q get assertequals 0 r get 
atomicreference subscription ref new atomicreference subscription sub mock subscription class asserttrue subscriptionhelper setonce ref sub 1 verify sub request 1 verify sub never cancel list throwable errors testhelper trackpluginerrors try sub mock subscription class assertfalse subscriptionhelper setonce ref sub 1 verify sub never request anylong verify sub cancel testhelper asserterror errors 0 class finally rxjavaplugins reset 
subscriptionarbiter sa new subscriptionarbiter true sa getandincrement booleansubscription bs1 new booleansubscription sa setsubscription bs1 booleansubscription bs2 new booleansubscription sa setsubscription bs2 asserttrue bs1 iscancelled assertfalse bs2 iscancelled 
subscriptionarbiter sa new subscriptionarbiter true list throwable errors testhelper trackpluginerrors try sa request 99 testhelper asserterror errors 0 class n 0 required but it was 99 finally rxjavaplugins reset 
subscriptionarbiter sa new subscriptionarbiter true sa request long max value assertequals long max value sa requested asserttrue sa isunbounded sa unbounded false sa request long max value assertequals long max value sa requested sa produced 1 assertequals long max value sa requested sa unbounded false sa produced long max value assertequals long max value sa requested 
subscriptionarbiter sa new subscriptionarbiter true sa cancelled true booleansubscription bs1 new booleansubscription sa missedsubscription set bs1 sa getandincrement sa drainloop asserttrue bs1 iscancelled 
subscriptionarbiter sa new subscriptionarbiter true sa getandincrement sa requested long max value sa drainloop 
subscriptionarbiter sa new subscriptionarbiter true sa getandincrement sa requested 0 sa missedrequested set 1 sa drainloop assertequals 1 sa requested 
subscriptionarbiter sa new subscriptionarbiter true sa getandincrement sa requested 0 sa missedrequested set long max value sa missedproduced set 1 sa drainloop assertequals long max value sa requested 
list throwable errors testhelper trackpluginerrors try subscriptionarbiter sa new subscriptionarbiter true sa getandincrement sa requested 0 sa missedrequested set 1 sa missedproduced set 2 sa drainloop assertequals 0 sa requested testhelper asserterror errors 0 class more produced than requested 1 finally rxjavaplugins reset 
subscriptionarbiter sa new subscriptionarbiter true sa getandincrement booleansubscription bs1 new booleansubscription sa missedsubscription set bs1 sa drainloop assertsame bs1 sa actual 
subscriptionarbiter sa new subscriptionarbiter false booleansubscription bs1 new booleansubscription booleansubscription bs2 new booleansubscription sa setsubscription bs1 sa setsubscription bs2 assertfalse bs1 iscancelled assertfalse bs2 iscancelled 
subscriptionarbiter sa new subscriptionarbiter true booleansubscription bs1 new booleansubscription booleansubscription bs2 new booleansubscription sa setsubscription bs1 sa setsubscription bs2 asserttrue bs1 iscancelled assertfalse bs2 iscancelled 
subscriptionarbiter sa new subscriptionarbiter false booleansubscription bs1 new booleansubscription booleansubscription bs2 new booleansubscription booleansubscription bs3 new booleansubscription sa setsubscription bs1 sa getandincrement sa setsubscription bs2 sa setsubscription bs3 sa drainloop assertfalse bs1 iscancelled assertfalse bs2 iscancelled assertfalse bs3 iscancelled 
subscriptionarbiter sa new subscriptionarbiter true booleansubscription bs1 new booleansubscription booleansubscription bs2 new booleansubscription booleansubscription bs3 new booleansubscription sa setsubscription bs1 sa getandincrement sa setsubscription bs2 sa setsubscription bs3 sa drainloop asserttrue bs1 iscancelled asserttrue bs2 iscancelled assertfalse bs3 iscancelled 
subscriptionarbiter sa new subscriptionarbiter false booleansubscription bs1 new booleansubscription booleansubscription bs2 new booleansubscription sa setsubscription bs1 sa getandincrement sa setsubscription bs2 sa drainloop assertfalse bs1 iscancelled assertfalse bs2 iscancelled 
subscriptionarbiter sa new subscriptionarbiter true booleansubscription bs1 new booleansubscription booleansubscription bs2 new booleansubscription sa setsubscription bs1 sa getandincrement sa setsubscription bs2 sa drainloop asserttrue bs1 iscancelled assertfalse bs2 iscancelled 
list throwable errors testhelper trackpluginerrors try subscriptionarbiter sa new subscriptionarbiter true sa produced 2 assertequals 0 sa requested testhelper asserterror errors 0 class more produced than requested 2 finally rxjavaplugins reset 
asyncsubscription as new asyncsubscription subscription s mock subscription class as setsubscription s as request 1 as cancel verify s request 1 verify s cancel 
asyncsubscription as new asyncsubscription subscription s mock subscription class as request 1 as setsubscription s as cancel verify s request 1 verify s cancel 
asyncsubscription as new asyncsubscription subscription s mock subscription class as request 1 as cancel as setsubscription s verify s never request 1 verify s cancel 
asyncsubscription as new asyncsubscription subscription s mock subscription class as setsubscription s subscription s1 mock subscription class as setsubscription s1 assertsame as actual get s verify s1 cancel 
disposable r mock disposable class asyncsubscription as new asyncsubscription r as cancel verify r dispose 
asyncsubscription as new asyncsubscription disposable r mock disposable class asserttrue as setresource r as cancel verify r dispose 
asyncsubscription as new asyncsubscription disposable r mock disposable class asserttrue as replaceresource r as cancel verify r dispose 
asyncsubscription as new asyncsubscription disposable r mock disposable class asserttrue as setresource r disposable r2 mock disposable class asserttrue as setresource r2 as cancel verify r dispose verify r2 dispose 
asyncsubscription as new asyncsubscription disposable r mock disposable class asserttrue as replaceresource r disposable r2 mock disposable class as replaceresource r2 as cancel verify r never dispose verify r2 dispose 
asyncsubscription as new asyncsubscription as cancel disposable r mock disposable class as setresource r verify r dispose 
asyncsubscription as new asyncsubscription as cancel disposable r mock disposable class as replaceresource r verify r dispose 
disposable r mock disposable class asyncsubscription as new asyncsubscription r subscription s mock subscription class as setsubscription s as cancel as cancel as cancel verify s never request anylong verify s cancel verify r dispose 
asyncsubscription as new asyncsubscription assertfalse as isdisposed as dispose asserttrue as isdisposed 
ac new 1 booleansubscription bs1 new booleansubscription ac setresource 0 bs1 assertfalse bs1 iscancelled booleansubscription bs2 new booleansubscription ac setresource 0 bs2 asserttrue bs1 iscancelled assertfalse bs2 iscancelled assertfalse ac isdisposed ac dispose asserttrue bs2 iscancelled asserttrue ac isdisposed booleansubscription bs3 new booleansubscription assertfalse ac setresource 0 bs3 asserttrue bs3 iscancelled assertfalse ac setresource 0 null 
ac new 1 booleansubscription bs1 new booleansubscription ac replaceresource 0 bs1 assertfalse bs1 iscancelled booleansubscription bs2 new booleansubscription ac replaceresource 0 bs2 assertfalse bs1 iscancelled assertfalse bs2 iscancelled assertfalse ac isdisposed ac dispose asserttrue bs2 iscancelled asserttrue ac isdisposed booleansubscription bs3 new booleansubscription ac replaceresource 0 bs3 asserttrue bs3 iscancelled ac replaceresource 0 null 
for int i 0 i testhelper race default loops i final ac new 1000 runnable r new runnable override public void run ac dispose testhelper race r r 
for int i 0 i testhelper race default loops i final ac new 1 final booleansubscription s1 new booleansubscription final booleansubscription s2 new booleansubscription runnable r1 new runnable override public void run ac setresource 0 s1 runnable r2 new runnable override public void run ac replaceresource 0 s2 testhelper race r1 r2 
integer ds new new testsubscriber assertequals queuefuseable none ds requestfusion queuefuseable sync 
integer ds new new testsubscriber ds value 1 ds clear assertequals fused consumed ds get assertnull ds value 
integer ds new new testsubscriber asserttrue ds trycancel assertfalse ds trycancel 
for int i 0 i testhelper race default loops i final integer ds new new testsubscriber runnable r1 new runnable override public void run ds complete 1 runnable r2 new runnable override public void run ds cancel testhelper race r1 r2 
for int i 0 i testhelper race long loops i testsubscriber integer ts new testsubscriber 0l final integer ds new ts ts onsubscribe ds ds complete 1 runnable r1 new runnable override public void run ds request 1 runnable r2 new runnable override public void run ds value null testhelper race r1 r2 if ts values size 1 ts assertvalue 1 
for int i 0 i testhelper race long loops i testsubscriber integer ts new testsubscriber 0l final integer ds new ts ts onsubscribe ds ds complete 1 runnable r1 new runnable override public void run ds request 1 runnable r2 new runnable override public void run ds cancel testhelper race r1 r2 if ts values size 1 ts assertvalue 1 
flowable range 1 5 concatmapcompletable functions justfunction completable complete test assertresult 
final atomicinteger counter new atomicinteger flowable range 1 5 concatmapcompletable functions justfunction completable fromaction new action override public void run throws exception counter incrementandget test assertresult assertequals 5 counter get 
flowable range 1 1024 concatmapcompletable functions justfunction completable complete 32 test assertresult 
flowable range 1 1024 hide concatmapcompletable functions justfunction completable complete 32 test assertresult 
flowable integer error new testexception concatmapcompletable functions justfunction completable complete test assertfailure testexception class 
flowable just 1 concatmapcompletable functions justfunction completable error new testexception test assertfailure testexception class 
testobserverex void to flowable range 1 5 new function integer completablesource override public completablesource apply integer v throws exception return completable error new testexception to testhelper void testconsumer assertfailure compositeexception class assertequals 5 compositeexception to errors get 0 getexceptions size 
flowable just 1 concatmapcompletable new function integer completablesource override public completablesource apply integer v throws exception throw new testexception test assertfailure testexception class 
publishprocessor integer pp publishprocessor create completablesubject cs completablesubject create testobserver void to pp concatmapcompletable functions justfunction cs test to assertempty asserttrue pp hassubscribers assertfalse cs hasobservers pp onnext 1 asserttrue cs hasobservers pp onerror new testexception assertfalse cs hasobservers to assertfailure testexception class 
publishprocessor integer pp publishprocessor create completablesubject cs completablesubject create testobserver void to pp concatmapcompletable functions justfunction cs test to assertempty asserttrue pp hassubscribers assertfalse cs hasobservers pp onnext 1 asserttrue cs hasobservers cs onerror new testexception assertfalse pp hassubscribers to assertfailure testexception class 
publishprocessor integer pp publishprocessor create completablesubject cs completablesubject create testobserver void to pp functions justfunction cs false test to assertempty asserttrue pp hassubscribers assertfalse cs hasobservers pp onnext 1 asserttrue cs hasobservers pp onerror new testexception asserttrue cs hasobservers to assertempty cs oncomplete to assertfailure testexception class 
publishprocessor integer pp publishprocessor create final completablesubject cs completablesubject create final completablesubject cs2 completablesubject create testobserver void to pp new function integer completablesource override public completablesource apply integer v throws exception if v 1 return cs return cs2 true 32 test to assertempty asserttrue pp hassubscribers assertfalse cs hasobservers pp onnext 1 asserttrue cs hasobservers cs onerror new testexception asserttrue pp hassubscribers pp onnext 2 to assertempty cs2 oncomplete asserttrue pp hassubscribers to assertempty pp oncomplete to assertfailure testexception class 
testhelper new function flowable object completable override public completable apply flowable object f throws exception return f concatmapcompletable functions justfunction completable complete 
testhelper checkdisposed flowable never concatmapcompletable functions justfunction completable complete 
list throwable errors testhelper trackpluginerrors try new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s onnext 2 s onnext 3 s onerror new testexception concatmapcompletable functions justfunction completable never 1 test assertfailure class testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
final testexception ex new testexception for int i 0 i testhelper race long loops i list throwable errors testhelper trackpluginerrors try final publishprocessor integer pp publishprocessor create final completablesubject cs completablesubject create testobserver void to pp concatmapcompletable functions justfunction cs test pp onnext 1 runnable r1 new runnable override public void run pp onerror ex runnable r2 new runnable override public void run cs onerror ex testhelper race r1 r2 to asserterror new predicate throwable override public boolean test throwable e throws exception return e instanceof testexception e instanceof compositeexception assertnotcomplete if errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
for int i 0 i testhelper race long loops i final publishprocessor integer pp publishprocessor create final completablesubject cs completablesubject create final testobserver void to pp concatmapcompletable functions justfunction cs test pp onnext 1 runnable r1 new runnable override public void run pp onnext 2 runnable r2 new runnable override public void run cs oncomplete to dispose testhelper race r1 r2 to assertempty 
final publishprocessor integer pp publishprocessor create final completablesubject cs completablesubject create final testobserver void to pp concatmapcompletable functions justfunction cs test pp onnext 1 pp onnext 2 pp oncomplete cs oncomplete to assertresult 
testhelper new flowableconverter integer completable override public completable apply flowable integer upstream return upstream concatmapcompletable new function integer completable override public completable apply integer v throws throwable return completable complete hide 
testhelper new flowableconverter integer completable override public completable apply flowable integer upstream return upstream new function integer completable override public completable apply integer v throws throwable return completable complete hide false 2 
testhelper new flowableconverter integer completable override public completable apply flowable integer upstream return upstream new function integer completable override public completable apply integer v throws throwable return completable complete hide true 2 
flowable range 1 5 hide concatmapcompletable v completable complete hide test assertresult 
flowable range 1 5 concatmapcompletable v completable complete hide test assertresult 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 up concatmapcompletable v completable complete hide test assertresult 
testhelper integer rejectflowablefusion concatmapcompletable v completable complete hide test assertempty 
flowable range 1 5 map v if v 3 throw new testexception return v compose testhelper concatmapcompletable v completable complete hide test assertfailure testexception class 
observable range 1 5 concatmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception return single just v test assertresult 1 2 3 4 5 
observable range 1 1024 concatmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception return single just v 32 test assertvaluecount 1024 assertnoerrors assertcomplete 
observable error new testexception concatmapsingle functions justfunction single just 1 test assertfailure testexception class 
observable just 1 concatmapsingle functions justfunction single error new testexception test assertfailure testexception class 
publishsubject integer ps publishsubject create singlesubject integer ms singlesubject create testobserver integer to ps functions justfunction ms false test to assertempty ps onnext 1 asserttrue ms hasobservers ps onerror new testexception asserttrue ms hasobservers to assertempty ms onsuccess 1 to assertfailure testexception class 1 
testhelper new function observable object observable object override public observable object apply observable object f throws exception return f functions justfunction single never 
observable range 1 5 concatmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception return single just v take 3 test assertresult 1 2 3 
observable range 1 5 concatwith observable integer never concatmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception return single just v test assertvalues 1 2 3 4 5 assertnoerrors assertnotcomplete dispose 
list throwable errors testhelper trackpluginerrors try new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onerror new testexception outer concatmapsingle functions justfunction single error new testexception inner 1 to testhelper object testconsumer testexception class inner testhelper assertundeliverable errors 0 testexception class outer finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try final publishsubject integer ps publishsubject create final atomicreference singleobserver super integer obs new atomicreference testobserverex integer to ps concatmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception return new single integer override protected void subscribeactual singleobserver super integer observer observer onsubscribe disposable empty obs set observer to testhelper integer testconsumer ps onnext 1 ps onerror new testexception outer obs get onerror new testexception inner to testexception class outer testhelper assertundeliverable errors 0 testexception class inner finally rxjavaplugins reset 
testobserverex object to observable range 1 5 new function integer singlesource extends object override public singlesource extends object apply integer v throws exception return single error new testexception to testhelper object testconsumer assertfailure compositeexception class compositeexception ce compositeexception to errors get 0 assertequals 5 ce getexceptions size 
final publishsubject integer ps publishsubject create testobserver object to ps concatmapsingle new function integer singlesource extends object override public singlesource extends object apply integer v throws exception throw new testexception test to assertempty asserttrue ps hasobservers ps onnext 1 to assertfailure testexception class assertfalse ps hasobservers 
testobserver object to observable just 1 concatmapsingle new function integer singlesource extends object override public singlesource extends object apply integer v throws exception throw new testexception test to assertfailure testexception class 
testhelper checkdisposed observable just 1 hide concatmapsingle functions justfunction single never 
publishsubject integer ps publishsubject create singlesubject integer ms singlesubject create testobserver integer to ps functions justfunction ms false test to assertempty ps onnext 1 ps onnext 2 ps oncomplete asserttrue ms hasobservers to assertempty ms onsuccess 1 to assertresult 1 1 
singlesubject integer ss singlesubject create observable empty concatmapsingle functions justfunction ss test assertresult assertfalse ss hasobservers 
testobserver integer to new testobserver integer integer operator new to functions justfunction single integer never 16 errormode immediate operator onsubscribe disposable empty operator queue offer 1 operator getandincrement to dispose assertfalse operator queue isempty operator addandget 2 operator dispose asserttrue operator queue isempty 
singlesubject integer ss singlesubject create testobserver integer to observable fromarray ss single just 2 single just 3 single just 4 concatmapsingle functions single integer identity 2 test to assertempty ss onsuccess 1 to assertresult 1 2 3 4 
for int i 0 i testhelper race long loops i final singlesubject integer ss singlesubject create final testobserver integer to observable just 1 hide concatmapsingle functions justfunction ss test runnable r1 new runnable override public void run ss onsuccess 1 runnable r2 new runnable override public void run to dispose testhelper race r1 r2 to assertnoerrors 
testhelper new observableconverter integer observable integer override public observable integer apply observable integer upstream return upstream concatmapsingle new function integer single integer override public single integer apply integer v throws throwable return single just v hide 
testhelper new observableconverter integer observable integer override public observable integer apply observable integer upstream return upstream new function integer single integer override public single integer apply integer v throws throwable return single just v hide false 2 
testhelper new observableconverter integer observable integer override public observable integer apply observable integer upstream return upstream new function integer single integer override public single integer apply integer v throws throwable return single just v hide true 2 
observable range 1 5 hide concatmapsingle v single just v hide test assertresult 1 2 3 4 5 
observable range 1 5 concatmapsingle v single just v hide test assertresult 1 2 3 4 5 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 us concatmapsingle v single just v hide test assertresult 1 2 3 4 5 
testhelper integer concatmapsingle v single just v hide test assertempty 
observable range 1 5 map v if v 3 throw new testexception return v compose testhelper concatmapsingle v single just v hide test assertfailure testexception class 1 2 
singlesubject integer ss singlesubject create publishsubject integer ps publishsubject create testobserver integer to ss flatmapobservable functions justfunction ps test asserttrue ss hasobservers assertfalse ps hasobservers to dispose assertfalse ss hasobservers assertfalse ps hasobservers 
singlesubject integer ss singlesubject create publishsubject integer ps publishsubject create testobserver integer to ss flatmapobservable functions justfunction ps test asserttrue ss hasobservers assertfalse ps hasobservers ss onsuccess 1 assertfalse ss hasobservers asserttrue ps hasobservers to dispose assertfalse ss hasobservers assertfalse ps hasobservers 
singlesubject integer ss singlesubject create publishsubject integer ps publishsubject create testobserver integer to ss flatmapobservable functions justfunction ps test asserttrue ss hasobservers assertfalse ps hasobservers ss onerror new testexception assertfalse ss hasobservers assertfalse ps hasobservers to assertfailure testexception class 
singlesubject integer ss singlesubject create publishsubject integer ps publishsubject create testobserver integer to ss flatmapobservable functions justfunction ps test asserttrue ss hasobservers assertfalse ps hasobservers ss onsuccess 1 assertfalse ss hasobservers asserttrue ps hasobservers ps onerror new testexception assertfalse ss hasobservers assertfalse ps hasobservers to assertfailure testexception class 
single just 1 flatmapobservable new function integer observablesource extends object override public observablesource extends object apply integer v throws exception throw new testexception test assertfailure testexception class 
testhelper checkdisposed single never flatmapobservable functions justfunction observable never 
maybesubject integer ms maybesubject create publishprocessor integer pp publishprocessor create testsubscriber integer ts ms flatmappublisher functions justfunction pp test asserttrue ms hasobservers assertfalse pp hassubscribers ts cancel assertfalse ms hasobservers assertfalse pp hassubscribers 
maybesubject integer ms maybesubject create publishprocessor integer pp publishprocessor create testsubscriber integer ts ms flatmappublisher functions justfunction pp test asserttrue ms hasobservers assertfalse pp hassubscribers ms onsuccess 1 assertfalse ms hasobservers asserttrue pp hassubscribers ts cancel assertfalse ms hasobservers assertfalse pp hassubscribers 
maybe just 1 flatmappublisher new function integer publisher extends object override public publisher extends object apply integer v throws exception throw new testexception test assertfailure testexception class 
testhelper new function maybe object publisher object override public publisher object apply maybe object m throws exception return m flatmappublisher functions justfunction flowable never 
completablesubject cs completablesubject create publishprocessor integer pp publishprocessor create testsubscriber integer ts cs andthen pp test asserttrue cs hasobservers assertfalse pp hassubscribers ts cancel assertfalse cs hasobservers assertfalse pp hassubscribers 
completablesubject cs completablesubject create publishprocessor integer pp publishprocessor create testsubscriber integer ts cs andthen pp test asserttrue cs hasobservers assertfalse pp hassubscribers cs oncomplete assertfalse cs hasobservers asserttrue pp hassubscribers ts cancel assertfalse cs hasobservers assertfalse pp hassubscribers 
testhelper new function completable publisher object override public publisher object apply completable m throws exception return m andthen flowable never 
observable range 1 5 switchmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception return single just v test assertresult 1 2 3 4 5 
observable error new testexception switchmapsingle functions justfunction single never test assertfailure testexception class 
observable just 1 switchmapsingle functions justfunction single error new testexception test assertfailure testexception class 
testhelper new function observable object observable object override public observable object apply observable object f throws exception return f switchmapsingle functions justfunction single never 
observable range 1 5 switchmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception return single just v take 3 test assertresult 1 2 3 
publishsubject integer ps publishsubject create final singlesubject integer ms1 singlesubject create final singlesubject integer ms2 singlesubject create testobserver integer to ps switchmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception if v 1 return ms1 return ms2 test to assertempty ps onnext 1 to assertempty asserttrue ms1 hasobservers ps onnext 2 assertfalse ms1 hasobservers asserttrue ms2 hasobservers ms2 onerror new testexception assertfalse ps hasobservers to assertfailure testexception class 
publishsubject integer ps publishsubject create final singlesubject integer ms1 singlesubject create final singlesubject integer ms2 singlesubject create testobserver integer to ps new function integer singlesource integer override public singlesource integer apply integer v throws exception if v 1 return ms1 return ms2 test to assertempty ps onnext 1 to assertempty asserttrue ms1 hasobservers ps onnext 2 assertfalse ms1 hasobservers asserttrue ms2 hasobservers ms2 onerror new testexception to assertempty asserttrue ps hasobservers ps oncomplete to assertfailure testexception class 
publishsubject integer ps publishsubject create final singlesubject integer ms singlesubject create testobserver integer to ps new function integer singlesource integer override public singlesource integer apply integer v throws exception return ms test to assertempty ps onnext 1 to assertempty asserttrue ms hasobservers ps onerror new testexception asserttrue ms hasobservers to assertempty ms onsuccess 1 to assertfailure testexception class 1 
publishsubject integer ps publishsubject create final singlesubject integer ms singlesubject create testobserver integer to ps new function integer singlesource integer override public singlesource integer apply integer v throws exception return ms test to assertempty ps onnext 1 to assertempty asserttrue ms hasobservers ps onerror new testexception asserttrue ms hasobservers to assertempty ms onsuccess 1 to assertfailure testexception class 1 
observable just 1 hide switchmapsingle new function integer singlesource extends object override public singlesource extends object apply integer v throws exception throw new testexception test assertfailure testexception class 
final testobserver integer to new testobserver observable just 1 hide switchmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception to dispose return single just 1 subscribe to to assertempty 
final testobserver integer to new testobserver observable just 1 2 switchmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception if v 2 to dispose return single just 1 subscribe to to assertvalue 1 assertnoerrors assertnotcomplete 
publishsubject integer ps publishsubject create final singlesubject integer ms singlesubject create testobserver integer to ps new function integer singlesource integer override public singlesource integer apply integer v throws exception return ms test to assertempty ps onnext 1 to assertempty asserttrue ps hasobservers asserttrue ms hasobservers to dispose assertfalse ps hasobservers assertfalse ms hasobservers 
list throwable errors testhelper trackpluginerrors try new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onerror new testexception outer switchmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception return single error new testexception inner to testhelper integer testconsumer testexception class inner testhelper assertundeliverable errors 0 testexception class outer finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try final atomicreference singleobserver super integer moref new atomicreference testobserverex integer to new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onerror new testexception outer switchmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception return new single integer override protected void subscribeactual singleobserver super integer observer observer onsubscribe disposable empty moref set observer to testhelper integer testconsumer to testexception class outer moref get onerror new testexception inner testhelper assertundeliverable errors 0 testexception class inner finally rxjavaplugins reset 
for int i 0 i testhelper race long loops i final publishsubject integer ps publishsubject create final singlesubject integer ms singlesubject create final testobserver integer to ps new function integer singlesource integer override public singlesource integer apply integer v throws exception return ms test runnable r1 new runnable override public void run ps onnext 1 runnable r2 new runnable override public void run to dispose testhelper race r1 r2 to assertnoerrors assertnotcomplete 
final testexception ex new testexception for int i 0 i testhelper race long loops i list throwable errors testhelper trackpluginerrors try final publishsubject integer ps publishsubject create final singlesubject integer ms singlesubject create final testobserverex integer to ps new function integer singlesource integer override public singlesource integer apply integer v throws exception if v 1 return ms return single never to testhelper integer testconsumer ps onnext 1 runnable r1 new runnable override public void run ps onnext 2 runnable r2 new runnable override public void run ms onerror ex testhelper race r1 r2 if to errors size 0 asserttrue errors isempty to assertfailure testexception class else if errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
final testexception ex new testexception final testexception ex2 new testexception for int i 0 i testhelper race long loops i list throwable errors testhelper trackpluginerrors try final publishsubject integer ps publishsubject create final singlesubject integer ms singlesubject create final testobserver integer to ps new function integer singlesource integer override public singlesource integer apply integer v throws exception if v 1 return ms return single never test ps onnext 1 runnable r1 new runnable override public void run ps onerror ex runnable r2 new runnable override public void run ms onerror ex2 testhelper race r1 r2 to asserterror new predicate throwable override public boolean test throwable e throws exception return e instanceof testexception e instanceof compositeexception if errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
for int i 0 i testhelper race long loops i final publishsubject integer ps publishsubject create final singlesubject integer ms singlesubject create final testobserver integer to ps new function integer singlesource integer override public singlesource integer apply integer v throws exception if v 1 return ms return single never test ps onnext 1 runnable r1 new runnable override public void run ps onnext 2 runnable r2 new runnable override public void run ms onsuccess 3 testhelper race r1 r2 to assertnoerrors assertnotcomplete 
publishsubject integer ps publishsubject create singlesubject integer ms singlesubject create testhelper checkdisposed ps switchmapsingle functions justfunction ms 
final publishsubject integer ps publishsubject create testobserver integer to new testobserver integer override public void onnext integer t super onnext t if t 1 ps onnext 2 ps switchmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception return single just v subscribe to ps onnext 1 ps oncomplete to assertresult 1 2 
testobserver integer to observable just 1 switchmapsingle new function integer singlesource integer override public singlesource integer apply integer v throws exception throw new testexception test to assertfailure testexception class 
singlesubject integer ss singlesubject create observable empty switchmapsingle functions justfunction ss test assertresult assertfalse ss hasobservers 
singlesubject integer ss singlesubject create testobserver integer to observable just 1 switchmapsingle functions justfunction ss test asserttrue ss hasobservers to assertempty ss onsuccess 2 to assertresult 2 
testhelper new observableconverter integer observable integer override public observable integer apply observable integer upstream return upstream switchmapsingle new function integer single integer override public single integer apply integer v throws throwable return single just v hide 
testhelper new observableconverter integer observable integer override public observable integer apply observable integer upstream return upstream new function integer single integer override public single integer apply integer v throws throwable return single just v hide 
observable range 1 10 switchmapcompletable new function integer completablesource override public completablesource apply integer v throws exception return completable complete test assertresult 
observable integer error new testexception switchmapcompletable new function integer completablesource override public completablesource apply integer v throws exception return completable complete test assertfailure testexception class 
publishsubject integer ps publishsubject create completablesubject cs completablesubject create testobserver void to ps switchmapcompletable functions justfunction cs test asserttrue ps hasobservers assertfalse cs hasobservers ps onnext 1 asserttrue cs hasobservers to assertempty cs onerror new testexception to assertfailure testexception class assertfalse ps hasobservers assertfalse cs hasobservers 
final completablesubject css completablesubject create completablesubject create publishsubject integer ps publishsubject create testobserver void to ps switchmapcompletable new function integer completablesource override public completablesource apply integer v throws exception return css v test to assertempty ps onnext 0 asserttrue css 0 hasobservers ps onnext 1 assertfalse css 0 hasobservers asserttrue css 1 hasobservers ps oncomplete to assertempty asserttrue css 1 hasobservers css 1 oncomplete to assertresult 
publishsubject integer ps publishsubject create completablesubject cs completablesubject create testobserver void to ps switchmapcompletable functions justfunction cs test ps onnext 1 asserttrue ps hasobservers asserttrue cs hasobservers to dispose assertfalse ps hasobservers assertfalse cs hasobservers 
publishsubject integer ps publishsubject create completablesubject cs completablesubject create testhelper checkdisposed ps switchmapcompletable functions justfunction cs 
testhelper new function observable object completable override public completable apply observable object f throws exception return f switchmapcompletable functions justfunction completable never 
observable range 1 5 switchmapcompletable new function integer completablesource override public completablesource apply integer f throws exception throw new testexception test assertfailure testexception class 
final testobserver void to new testobserver observable range 1 5 switchmapcompletable new function integer completablesource override public completablesource apply integer f throws exception to dispose return completable complete subscribe to to assertempty 
for int i 0 i testhelper race long loops i final publishsubject integer ps publishsubject create final completablesubject cs completablesubject create testobserver void to ps switchmapcompletable functions justfunction cs test ps onnext 1 runnable r1 new runnable override public void run ps onnext 2 runnable r2 new runnable override public void run cs oncomplete testhelper race r1 r2 to assertempty 
final testexception ex new testexception for int i 0 i testhelper race long loops i list throwable errors testhelper trackpluginerrors try final publishsubject integer ps publishsubject create final completablesubject cs completablesubject create testobserver void to ps switchmapcompletable functions justfunction cs test ps onnext 1 runnable r1 new runnable override public void run ps onnext 2 runnable r2 new runnable override public void run cs onerror ex testhelper race r1 r2 to asserterror new predicate throwable override public boolean test throwable e throws exception return e instanceof testexception e instanceof compositeexception if errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
final testexception ex0 new testexception final testexception ex new testexception for int i 0 i testhelper race long loops i list throwable errors testhelper trackpluginerrors try final publishsubject integer ps publishsubject create final completablesubject cs completablesubject create testobserver void to ps switchmapcompletable functions justfunction cs test ps onnext 1 runnable r1 new runnable override public void run ps onerror ex0 runnable r2 new runnable override public void run cs onerror ex testhelper race r1 r2 to asserterror new predicate throwable override public boolean test throwable e throws exception return e instanceof testexception e instanceof compositeexception if errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onerror new testexception main switchmapcompletable functions justfunction completable error new testexception inner to testhelper testconsumer testexception class inner testhelper assertundeliverable errors 0 testexception class main finally rxjavaplugins reset 
final publishsubject integer ps publishsubject create final completablesubject cs completablesubject create testobserver void to ps functions justfunction cs test ps onnext 1 cs onerror new testexception to assertempty asserttrue ps hasobservers ps oncomplete to assertfailure testexception class 
final publishsubject integer ps publishsubject create final completablesubject cs completablesubject create testobserver void to ps functions justfunction cs test ps onnext 1 ps oncomplete to assertempty cs onerror new testexception to assertfailure testexception class 
final publishsubject integer ps publishsubject create final completablesubject cs completablesubject create testobserver void to ps functions justfunction cs test ps onnext 1 ps onerror new testexception to assertempty asserttrue cs hasobservers cs oncomplete to assertfailure testexception class 
testobserver void to observable just 1 switchmapcompletable new function integer completablesource override public completablesource apply integer v throws exception throw new testexception test to assertfailure testexception class 
completablesubject cs completablesubject create observable empty switchmapcompletable functions justfunction cs test assertresult assertfalse cs hasobservers 
completablesubject cs completablesubject create testobserver void to observable just 1 switchmapcompletable functions justfunction cs test asserttrue cs hasobservers to assertempty cs oncomplete to assertresult 
testhelper new observableconverter integer completable override public completable apply observable integer upstream return upstream switchmapcompletable new function integer completable override public completable apply integer v throws throwable return completable complete hide 
testhelper new observableconverter integer completable override public completable apply observable integer upstream return upstream new function integer completable override public completable apply integer v throws throwable return completable complete hide 
observable range 1 5 concatmapcompletable functions justfunction completable complete test assertresult 
final atomicinteger counter new atomicinteger observable range 1 5 concatmapcompletable functions justfunction completable fromaction new action override public void run throws exception counter incrementandget test assertresult assertequals 5 counter get 
observable range 1 1024 concatmapcompletable functions justfunction completable complete 32 test assertresult 
observable integer error new testexception concatmapcompletable functions justfunction completable complete test assertfailure testexception class 
observable just 1 concatmapcompletable functions justfunction completable error new testexception test assertfailure testexception class 
testobserverex void to observable range 1 5 new function integer completablesource override public completablesource apply integer v throws exception return completable error new testexception to testhelper void testconsumer assertfailure compositeexception class assertequals 5 compositeexception to errors get 0 getexceptions size 
observable just 1 concatmapcompletable new function integer completablesource override public completablesource apply integer v throws exception throw new testexception test assertfailure testexception class 
observable just 1 hide concatmapcompletable new function integer completablesource override public completablesource apply integer v throws exception throw new testexception test assertfailure testexception class 
publishsubject integer ps publishsubject create completablesubject cs completablesubject create testobserver void to ps concatmapcompletable functions justfunction cs test to assertempty asserttrue ps hasobservers assertfalse cs hasobservers ps onnext 1 asserttrue cs hasobservers ps onerror new testexception assertfalse cs hasobservers to assertfailure testexception class 
publishsubject integer ps publishsubject create completablesubject cs completablesubject create testobserver void to ps concatmapcompletable functions justfunction cs test to assertempty asserttrue ps hasobservers assertfalse cs hasobservers ps onnext 1 asserttrue cs hasobservers cs onerror new testexception assertfalse ps hasobservers to assertfailure testexception class 
publishsubject integer ps publishsubject create completablesubject cs completablesubject create testobserver void to ps functions justfunction cs false test to assertempty asserttrue ps hasobservers assertfalse cs hasobservers ps onnext 1 asserttrue cs hasobservers ps onerror new testexception asserttrue cs hasobservers to assertempty cs oncomplete to assertfailure testexception class 
publishsubject integer ps publishsubject create final completablesubject cs completablesubject create final completablesubject cs2 completablesubject create testobserver void to ps new function integer completablesource override public completablesource apply integer v throws exception if v 1 return cs return cs2 true 32 test to assertempty asserttrue ps hasobservers assertfalse cs hasobservers ps onnext 1 asserttrue cs hasobservers cs onerror new testexception asserttrue ps hasobservers ps onnext 2 to assertempty cs2 oncomplete asserttrue ps hasobservers to assertempty ps oncomplete to assertfailure testexception class 
testhelper new function observable object completable override public completable apply observable object f throws exception return f concatmapcompletable functions justfunction completable complete 
testhelper checkdisposed observable never concatmapcompletable functions justfunction completable complete 
final testexception ex new testexception for int i 0 i testhelper race long loops i list throwable errors testhelper trackpluginerrors try final publishsubject integer ps publishsubject create final completablesubject cs completablesubject create testobserver void to ps concatmapcompletable functions justfunction cs test ps onnext 1 runnable r1 new runnable override public void run ps onerror ex runnable r2 new runnable override public void run cs onerror ex testhelper race r1 r2 to asserterror new predicate throwable override public boolean test throwable e throws exception return e instanceof testexception e instanceof compositeexception assertnotcomplete if errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
for int i 0 i testhelper race long loops i final publishsubject integer ps publishsubject create final completablesubject cs completablesubject create final testobserver void to ps concatmapcompletable functions justfunction cs test ps onnext 1 runnable r1 new runnable override public void run ps onnext 2 runnable r2 new runnable override public void run cs oncomplete to dispose testhelper race r1 r2 to assertempty 
final publishsubject integer ps publishsubject create final completablesubject cs completablesubject create final testobserver void to ps concatmapcompletable functions justfunction cs test ps onnext 1 ps onnext 2 ps oncomplete cs oncomplete to assertresult 
final publishsubject integer ps publishsubject create final completablesubject cs completablesubject create final testobserver void to ps observeon instance concatmapcompletable functions justfunction cs test ps onnext 1 ps oncomplete cs oncomplete to assertresult 
final completablesubject cs completablesubject create testhelper concatmapcompletable functions justfunction cs test assertempty 
final completablesubject cs completablesubject create observable empty concatmapcompletable functions justfunction cs test assertresult 
final completablesubject cs completablesubject create testobserver void to observable just 1 concatmapcompletable functions justfunction cs test to assertempty asserttrue cs hasobservers cs oncomplete to assertresult 
testhelper new observableconverter integer completable override public completable apply observable integer upstream return upstream concatmapcompletable new function integer completable override public completable apply integer v throws throwable return completable complete hide 
testhelper new observableconverter integer completable override public completable apply observable integer upstream return upstream new function integer completable override public completable apply integer v throws throwable return completable complete hide false 2 
testhelper new observableconverter integer completable override public completable apply observable integer upstream return upstream new function integer completable override public completable apply integer v throws throwable return completable complete hide true 2 
observable range 1 5 hide concatmapcompletable v completable complete hide test assertresult 
observable range 1 5 concatmapcompletable v completable complete hide test assertresult 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 us concatmapcompletable v completable complete hide test assertresult 
testhelper integer concatmapcompletable v completable complete hide test assertempty 
observable range 1 5 map v if v 3 throw new testexception return v compose testhelper concatmapcompletable v completable complete hide test assertfailure testexception class 
flowable range 1 5 concatmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just v test assertresult 1 2 3 4 5 
flowable range 1 1024 concatmapmaybe maybe just 32 test assertvaluecount 1024 assertnoerrors assertcomplete 
flowable range 1 1024 hide concatmapmaybe maybe just 32 test assertvaluecount 1024 assertnoerrors assertcomplete 
testsubscriber integer ts flowable range 1 1024 concatmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just v 32 test 0 for int i 1 i 1024 i ts assertvaluecount i 1 assertnoerrors assertnotcomplete requestmore 1 assertvaluecount i assertnoerrors ts assertcomplete 
flowable range 1 10 concatmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe empty test assertresult 
flowable range 1 10 concatmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception if v 2 0 return maybe just v return maybe empty test assertresult 2 4 6 8 10 
testsubscriberex integer ts flowable range 1 1024 concatmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception if v 2 0 return maybe just v subscribeon schedulers computation return maybe integer empty subscribeon schedulers computation to testhelper integer testconsumer awaitdone 5 timeunit seconds assertvaluecount 512 assertnoerrors assertcomplete for int i 0 i 512 i ts assertvalueat i i 1 2 
flowable error new testexception concatmapmaybe functions justfunction maybe just 1 test assertfailure testexception class 
flowable just 1 concatmapmaybe functions justfunction maybe error new testexception test assertfailure testexception class 
publishprocessor integer pp publishprocessor create maybesubject integer ms maybesubject create testsubscriber integer ts pp functions justfunction ms false test ts assertempty pp onnext 1 asserttrue ms hasobservers pp onerror new testexception asserttrue ms hasobservers ts assertempty ms onsuccess 1 ts assertfailure testexception class 1 
publishprocessor integer pp publishprocessor create maybesubject integer ms maybesubject create testsubscriber integer ts pp functions justfunction ms false test ts assertempty pp onnext 1 asserttrue ms hasobservers pp onerror new testexception asserttrue ms hasobservers ts assertempty ms oncomplete ts assertfailure testexception class 
testhelper new function flowable object flowable object override public flowable object apply flowable object f throws exception return f functions justfunction maybe empty 
list throwable errors testhelper trackpluginerrors try new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s onnext 2 s onnext 3 s onerror new testexception concatmapmaybe functions justfunction maybe never 1 test assertfailure class testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
flowable range 1 5 concatmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just v take 3 test assertresult 1 2 3 
flowable range 1 5 concatmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just v test 3 assertvalues 1 2 3 assertnoerrors assertnotcomplete cancel 
list throwable errors testhelper trackpluginerrors try final publishprocessor integer pp publishprocessor create final atomicreference maybeobserver super integer obs new atomicreference testsubscriberex integer ts pp concatmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception return new maybe integer override protected void subscribeactual maybeobserver super integer observer observer onsubscribe disposable empty obs set observer to testhelper integer testconsumer pp onnext 1 pp onerror new testexception outer obs get onerror new testexception inner ts testexception class outer testhelper assertundeliverable errors 0 testexception class inner finally rxjavaplugins reset 
testsubscriberex object ts flowable range 1 5 new function integer maybesource extends object override public maybesource extends object apply integer v throws exception return maybe error new testexception to testhelper object testconsumer assertfailure compositeexception class compositeexception ce compositeexception ts errors get 0 assertequals 5 ce getexceptions size 
final publishprocessor integer pp publishprocessor create testsubscriber object ts pp concatmapmaybe new function integer maybesource extends object override public maybesource extends object apply integer v throws exception throw new testexception test ts assertempty asserttrue pp hassubscribers pp onnext 1 ts assertfailure testexception class assertfalse pp hassubscribers 
testsubscriber integer ts new testsubscriber integer integer operator new ts functions justfunction maybe integer never 16 errormode immediate operator onsubscribe new booleansubscription operator queue offer 1 operator getandincrement ts cancel assertfalse operator queue isempty operator addandget 2 operator cancel asserttrue operator queue isempty 
for int i 0 i testhelper race long loops i final maybesubject integer ms maybesubject create final testsubscriber integer ts flowable just 1 hide concatmapmaybe functions justfunction ms test runnable r1 new runnable override public void run ms onsuccess 1 runnable r2 new runnable override public void run ts cancel testhelper race r1 r2 ts assertnoerrors 
testhelper new flowableconverter integer flowable integer override public flowable integer apply flowable integer upstream return upstream concatmapmaybe new function integer maybe integer override public maybe integer apply integer v throws throwable return maybe just v hide 
testhelper new flowableconverter integer flowable integer override public flowable integer apply flowable integer upstream return upstream new function integer maybe integer override public maybe integer apply integer v throws throwable return maybe just v hide false 2 
testhelper new flowableconverter integer flowable integer override public flowable integer apply flowable integer upstream return upstream new function integer maybe integer override public maybe integer apply integer v throws throwable return maybe just v hide true 2 
flowable range 1 5 hide concatmapmaybe v maybe just v hide test assertresult 1 2 3 4 5 
flowable range 1 5 concatmapmaybe v maybe just v hide test assertresult 1 2 3 4 5 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 up concatmapmaybe v maybe just v hide test assertresult 1 2 3 4 5 
testhelper integer rejectflowablefusion concatmapmaybe v maybe just v hide test assertempty 
flowable range 1 5 map v if v 3 throw new testexception return v compose testhelper concatmapmaybe v maybe just v hide test assertfailure testexception class 1 2 
observable range 1 5 switchmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just v test assertresult 1 2 3 4 5 
observable range 1 5 switchmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe empty test assertresult 
observable range 1 10 switchmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception if v 2 0 return maybe just v return maybe empty test assertresult 2 4 6 8 10 
observable error new testexception switchmapmaybe functions justfunction maybe never test assertfailure testexception class 
observable just 1 switchmapmaybe functions justfunction maybe error new testexception test assertfailure testexception class 
testhelper new function observable object observable object override public observable object apply observable object f throws exception return f switchmapmaybe functions justfunction maybe never 
observable range 1 5 switchmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just v take 3 test assertresult 1 2 3 
publishsubject integer ps publishsubject create final maybesubject integer ms1 maybesubject create final maybesubject integer ms2 maybesubject create testobserver integer to ps switchmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception if v 1 return ms1 return ms2 test to assertempty ps onnext 1 to assertempty asserttrue ms1 hasobservers ps onnext 2 assertfalse ms1 hasobservers asserttrue ms2 hasobservers ms2 onerror new testexception assertfalse ps hasobservers to assertfailure testexception class 
publishsubject integer ps publishsubject create final maybesubject integer ms1 maybesubject create final maybesubject integer ms2 maybesubject create testobserver integer to ps new function integer maybesource integer override public maybesource integer apply integer v throws exception if v 1 return ms1 return ms2 test to assertempty ps onnext 1 to assertempty asserttrue ms1 hasobservers ps onnext 2 assertfalse ms1 hasobservers asserttrue ms2 hasobservers ms2 onerror new testexception to assertempty asserttrue ps hasobservers ps oncomplete to assertfailure testexception class 
publishsubject integer ps publishsubject create final maybesubject integer ms maybesubject create testobserver integer to ps new function integer maybesource integer override public maybesource integer apply integer v throws exception return ms test to assertempty ps onnext 1 to assertempty asserttrue ms hasobservers ps onerror new testexception asserttrue ms hasobservers to assertempty ms oncomplete to assertfailure testexception class 
publishsubject integer ps publishsubject create final maybesubject integer ms maybesubject create testobserver integer to ps new function integer maybesource integer override public maybesource integer apply integer v throws exception return ms test to assertempty ps onnext 1 to assertempty asserttrue ms hasobservers ps onerror new testexception asserttrue ms hasobservers to assertempty ms onsuccess 1 to assertfailure testexception class 1 
observable just 1 hide switchmapmaybe new function integer maybesource extends object override public maybesource extends object apply integer v throws exception throw new testexception test assertfailure testexception class 
final testobserver integer to new testobserver observable just 1 switchmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception to dispose return maybe just 1 subscribe to to assertempty 
final testobserver integer to new testobserver observable just 1 2 switchmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception if v 2 to dispose return maybe just 1 subscribe to to assertvalue 1 assertnoerrors assertnotcomplete 
publishsubject integer ps publishsubject create final maybesubject integer ms maybesubject create testobserver integer to ps new function integer maybesource integer override public maybesource integer apply integer v throws exception return ms test to assertempty ps onnext 1 to assertempty asserttrue ps hasobservers asserttrue ms hasobservers to dispose assertfalse ps hasobservers assertfalse ms hasobservers 
list throwable errors testhelper trackpluginerrors try new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onerror new testexception outer switchmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe error new testexception inner to testhelper integer testconsumer testexception class inner testhelper assertundeliverable errors 0 testexception class outer finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try final atomicreference maybeobserver super integer moref new atomicreference testobserverex integer to new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onerror new testexception outer switchmapmaybe new function integer maybesource integer override public maybesource integer apply integer v throws exception return new maybe integer override protected void subscribeactual maybeobserver super integer observer observer onsubscribe disposable empty moref set observer to testhelper integer testconsumer to testexception class outer moref get onerror new testexception inner moref get oncomplete testhelper assertundeliverable errors 0 testexception class inner finally rxjavaplugins reset 
for int i 0 i testhelper race long loops i final publishsubject integer ps publishsubject create final maybesubject integer ms maybesubject create final testobserver integer to ps new function integer maybesource integer override public maybesource integer apply integer v throws exception return ms test runnable r1 new runnable override public void run ps onnext 1 runnable r2 new runnable override public void run to dispose testhelper race r1 r2 to assertnoerrors assertnotcomplete 
final testexception ex new testexception for int i 0 i testhelper race long loops i list throwable errors testhelper trackpluginerrors try final publishsubject integer ps publishsubject create final maybesubject integer ms maybesubject create final testobserverex integer to ps new function integer maybesource integer override public maybesource integer apply integer v throws exception if v 1 return ms return maybe never to testhelper integer testconsumer ps onnext 1 runnable r1 new runnable override public void run ps onnext 2 runnable r2 new runnable override public void run ms onerror ex testhelper race r1 r2 if to errors size 0 asserttrue errors isempty to assertfailure testexception class else if errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
final testexception ex new testexception final testexception ex2 new testexception for int i 0 i testhelper race long loops i list throwable errors testhelper trackpluginerrors try final publishsubject integer ps publishsubject create final maybesubject integer ms maybesubject create final testobserver integer to ps new function integer maybesource integer override public maybesource integer apply integer v throws exception if v 1 return ms return maybe never test ps onnext 1 runnable r1 new runnable override public void run ps onerror ex runnable r2 new runnable override public void run ms onerror ex2 testhelper race r1 r2 to asserterror new predicate throwable override public boolean test throwable e throws exception return e instanceof testexception e instanceof compositeexception if errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
for int i 0 i testhelper race long loops i final publishsubject integer ps publishsubject create final maybesubject integer ms maybesubject create final testobserver integer to ps new function integer maybesource integer override public maybesource integer apply integer v throws exception if v 1 return ms return maybe empty test ps onnext 1 runnable r1 new runnable override public void run ps onnext 2 runnable r2 new runnable override public void run ms onsuccess 3 testhelper race r1 r2 to assertnoerrors assertnotcomplete 
publishsubject integer ps publishsubject create maybesubject integer ms maybesubject create testhelper checkdisposed ps switchmapmaybe functions justfunction ms 
