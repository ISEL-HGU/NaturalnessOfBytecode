if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
if done errors tryaddthrowable t if delayerrors disposeinner done true drain else rxjavaplugins onerror t 
if done done true drain 
if cancelled cancelled true upstream dispose disposeinner errors 
return cancelled 
t r a active getandset t r cancelled if a null a cancel 
if getandincrement 0 return final observer super r a downstream final atomicreference t r active this active final boolean delayerrors this delayerrors int missing 1 for if cancelled return if done boolean empty active get null if delayerrors if empty throwable ex errors get if ex null a onerror ex else a oncomplete return else throwable ex errors get if ex null errors tryterminateconsumer a return if empty a oncomplete return t r inner active get if inner null simplequeue r q inner queue if q null boolean retry false for if cancelled return if inner active get retry true break if delayerrors throwable ex errors get if ex null errors tryterminateconsumer a return boolean d inner done r v try v q poll catch throwable ex exceptions throwiffatal ex errors ex active compareandset inner null if delayerrors disposeinner upstream dispose done true else inner cancel v null retry true boolean empty v null if d empty active compareandset inner null retry true break if empty break a onnext v if retry continue missing addandget missing if missing 0 break 
if disposablehelper setonce this d if d instanceof queuedisposable suppresswarnings unchecked queuedisposable r qd queuedisposable r d int m qd requestfusion queuedisposable any queuedisposable boundary if m queuedisposable sync queue qd done true parent drain return if m queuedisposable async queue qd return queue new spsclinkedarrayqueue buffersize 
parent innererror this t 
if index parent unique done true parent drain 
disposablehelper dispose this 
boolean doconnect false publishconnection t conn for conn current get if conn null conn isdisposed publishconnection t fresh new publishconnection current if current compareandset conn fresh continue conn fresh doconnect conn connect get conn connect compareandset false true break try connection accept conn catch throwable ex exceptions throwiffatal ex throw exceptionhelper wraporthrow ex if doconnect source subscribe conn 
publishconnection t conn for conn current get if conn null publishconnection t fresh new publishconnection current if current compareandset conn fresh continue conn fresh break innerdisposable t inner new innerdisposable observer conn observer onsubscribe inner if conn add inner if inner isdisposed conn remove inner return throwable error conn error if error null observer onerror error else observer oncomplete 
publishconnection t conn current get if conn null conn isdisposed current compareandset conn null 
return source 
getandset terminated current compareandset this null disposablehelper dispose upstream 
return get terminated 
disposablehelper setonce upstream d 
if upstream get disposablehelper disposed error e upstream lazyset disposablehelper disposed for innerdisposable t inner getandset terminated inner downstream onerror e else rxjavaplugins onerror e 
upstream lazyset disposablehelper disposed for innerdisposable t inner getandset terminated inner downstream oncomplete 
publishconnection t p getandset null if p null p remove this 
return get null 
source subscribe new publishersubscriber t o 
downstream oncomplete 
downstream onerror t 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
upstream cancel upstream subscriptionhelper cancelled 
return upstream subscriptionhelper cancelled 
sequentialdisposable sa new sequentialdisposable observer onsubscribe sa repeatobserver t rs new repeatobserver observer count predicate sa source rs subscribenext 
upstream replace d 
long r remaining if r long max value remaining r 1 if r 0 downstream onerror t else boolean b try b predicate test t catch throwable e exceptions throwiffatal e downstream onerror new compositeexception t e return if b downstream onerror t return subscribenext 
downstream oncomplete 
if getandincrement 0 int missed 1 for if upstream isdisposed return source subscribe this missed addandget missed if missed 0 break 
t parent new t other t onsubscribe parent arbiter source subscribe parent 
arbiter update d 
downstream onerror t 
if empty empty false other subscribe this else downstream oncomplete 
scalardisposable t sd new scalardisposable observer value observer onsubscribe sd sd run 
return value 
source subscribe new observer mapper delayerrors 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
if errors e if delayerrors if decrementandget 0 errors tryterminateconsumer downstream else disposed true upstream dispose set dispose errors tryterminateconsumer downstream 
if decrementandget 0 errors tryterminateconsumer downstream 
disposed true upstream dispose set dispose errors 
return upstream isdisposed 
return null 
return true 
$EMPTY$
disposablehelper setonce this d 
innercomplete this 
innererror this e 
disposablehelper dispose this 
return disposablehelper isdisposed get 
source subscribe new takewhileobserver t predicate 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
source subscribe new new serializedobserver t timeout unit scheduler createworker 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
gate false 
downstream onerror t worker dispose 
downstream oncomplete worker dispose 
upstream dispose worker dispose 
return worker isdisposed 
observablesource extends t pub try pub objects requirenonnull supplier get the supplier returned a null observablesource catch throwable t exceptions throwiffatal t emptydisposable error t observer return pub subscribe observer 
t qs new observer onsubscribe qs if qs isdisposed try run run catch throwable ex exceptions throwiffatal ex if qs isdisposed observer onerror ex else rxjavaplugins onerror ex return if qs isdisposed observer oncomplete 
run run return null 
source subscribe new concatwithobserver observer other 
if disposablehelper setonce this d insingle downstream onsubscribe this 
downstream onerror e 
insingle true disposablehelper replace this null singlesource extends t ss other other null ss subscribe this 
disposablehelper dispose this 
return disposablehelper isdisposed get 
groupjoindisposable tleft tright tleftend trightend r parent new groupjoindisposable observer leftend rightend resultselector observer onsubscribe parent leftrightobserver left new leftrightobserver parent true parent disposables add left leftrightobserver right new leftrightobserver parent false parent disposables add right source subscribe left other subscribe right 
if cancelled return cancelled true cancelall if getandincrement 0 queue clear 
return cancelled 
disposables dispose 
throwable ex exceptionhelper terminate error for unicastsubject tright up lefts values up onerror ex lefts clear rights clear a onerror ex 
exceptions throwiffatal exc exceptionhelper addthrowable error exc q clear cancelall errorall a 
if getandincrement 0 return int missed 1 spsclinkedarrayqueue object q queue observer super r a downstream for for if cancelled q clear return throwable ex error get if ex null q clear cancelall errorall a return boolean d active get 0 integer mode integer q poll boolean empty mode null if d empty for unicastsubject up lefts values up oncomplete lefts clear rights clear disposables dispose a oncomplete return if empty break object val q poll if mode left value suppresswarnings unchecked tleft left tleft val unicastsubject tright up unicastsubject create int idx leftindex lefts put idx up observablesource tleftend p try p objects requirenonnull leftend apply left the leftend returned a null observablesource catch throwable exc fail exc a q return leftrightendobserver end new leftrightendobserver this true idx disposables add end p subscribe end ex error get if ex null q clear cancelall errorall a return r w try w objects requirenonnull resultselector apply left up the resultselector returned a null value catch throwable exc fail exc a q return a onnext w for tright right rights values up onnext right else if mode right value suppresswarnings unchecked tright right tright val int idx rightindex rights put idx right observablesource trightend p try p objects requirenonnull rightend apply right the rightend returned a null observablesource catch throwable exc fail exc a q return leftrightendobserver end new leftrightendobserver this false idx disposables add end p subscribe end ex error get if ex null q clear cancelall errorall a return for unicastsubject tright up lefts values up onnext right else if mode left close leftrightendobserver end leftrightendobserver val unicastsubject tright up lefts remove end index disposables remove end if up null up oncomplete else leftrightendobserver end leftrightendobserver val rights remove end index disposables remove end missed addandget missed if missed 0 break 
if exceptionhelper addthrowable error ex active decrementandget drain else rxjavaplugins onerror ex 
if exceptionhelper addthrowable error ex drain else rxjavaplugins onerror ex 
disposablehelper dispose this 
return disposablehelper isdisposed get 
disposablehelper setonce this d 
parent innervalue isleft t 
parent innererror t 
parent innercomplete this 
disposablehelper dispose this 
return disposablehelper isdisposed get 
disposablehelper setonce this d 
if disposablehelper dispose this parent innerclose isleft this 
parent innercloseerror t 
parent innerclose isleft this 
observablesource extends t sources this sources int count 0 if sources null sources new observablesource 8 for observablesource extends t p sourcesiterable if count sources length observablesource extends t b new observablesource count count 2 system arraycopy sources 0 b 0 count sources b sources count p else count sources length if count 0 emptydisposable complete observer return zipcoordinator t r zc new zipcoordinator observer zipper count delayerror zc subscribe sources buffersize 
if cancelled cancelled true cancelsources if getandincrement 0 clear 
return cancelled 
clear cancelsources 
for zipobserver zs observers zs dispose 
for zipobserver zs observers zs queue clear 
if getandincrement 0 return int missing 1 final zipobserver t r zs observers final observer super r a downstream final t os row final boolean delayerror this delayerror for for int i 0 int emptycount 0 for zipobserver t r z zs if os i null boolean d z done t v z queue poll boolean empty v null if checkterminated d empty a delayerror z return if empty os i v else emptycount else if z done delayerror throwable ex z error if ex null cancelled true cancel a onerror ex return i if emptycount 0 break r v try v objects requirenonnull zipper apply os clone the zipper returned a null value catch throwable ex exceptions throwiffatal ex cancel a onerror ex return a onnext v arrays fill os null missing addandget missing if missing 0 return 
disposablehelper setonce this upstream d 
error t done true parent drain 
done true parent drain 
disposablehelper dispose upstream 
source subscribe new countobserver t 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
count 
downstream onerror t 
downstream onnext count downstream oncomplete 
timerobserver ios new timerobserver observer observer onsubscribe ios disposable d scheduler scheduledirect ios delay unit ios setresource d 
disposablehelper dispose this 
return get disposablehelper disposed 
if isdisposed downstream onnext 0l lazyset emptydisposable instance downstream oncomplete 
disposablehelper tryset this d 
source subscribe new timeintervalobserver t unit scheduler 
if disposablehelper validate this upstream d this upstream d lasttime scheduler now unit downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
downstream onerror t 
downstream oncomplete 
intervalobserver is new intervalobserver observer observer onsubscribe is scheduler sch scheduler if sch instanceof trampolinescheduler worker worker sch createworker is setresource worker worker scheduleperiodically is initialdelay period unit else disposable d sch is initialdelay period unit is setresource d 
disposablehelper dispose this 
return get disposablehelper disposed 
if get disposablehelper disposed downstream onnext count 
disposablehelper setonce this d 
t qs new observer onsubscribe qs if qs isdisposed try action run catch throwable ex exceptions throwiffatal ex if qs isdisposed observer onerror ex else rxjavaplugins onerror ex return if qs isdisposed observer oncomplete 
action run return null 
observer t observer if delayerror observer observer t t else observer new serializedobserver t scheduler worker w scheduler createworker source subscribe new delayobserver observer delay unit w delayerror 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
w schedule new onerror t delayerror delay 0 unit 
w schedule new oncomplete delay unit 
upstream dispose w dispose 
return w isdisposed 
downstream onnext t 
try downstream onerror throwable finally w dispose 
try downstream oncomplete finally w dispose 
source subscribe new ignoreobservable t 
return rxjavaplugins onassembly new source 
this upstream d downstream onsubscribe this 
downstream onerror e 
downstream oncomplete 
upstream dispose 
return upstream isdisposed 
source subscribe new t count time unit scheduler buffersize delayerror 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
error t drain 
drain 
if cancelled cancelled true upstream dispose if compareandset false true queue clear 
return cancelled 
if compareandset false true return final observer super t a downstream final spsclinkedarrayqueue object q queue final boolean delayerror this delayerror final long timestamplimit scheduler now unit time for if cancelled q clear return if delayerror throwable ex error if ex null q clear a onerror ex return object ts q poll boolean empty ts null if empty throwable ex error if ex null a onerror ex else a oncomplete return suppresswarnings unchecked t o t q poll if long ts timestamplimit continue a onnext o 
source subscribe new observer predicate 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
if done done true downstream onerror t else rxjavaplugins onerror t 
if done done true downstream oncomplete 
source subscribe new lastobserver observer defaultitem 
upstream dispose upstream disposablehelper disposed 
return upstream disposablehelper disposed 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream disposablehelper disposed item null downstream onerror t 
upstream disposablehelper disposed t v item if v null item null downstream onsuccess v else v defaultitem if v null downstream onsuccess v else downstream onerror new 
source subscribe new materializeobserver t 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
notification t v notification createonerror t downstream onnext v downstream oncomplete 
notification t v notification createoncomplete downstream onnext v downstream oncomplete 
source subscribe new serializedobserver observer 
source subscribe new anyobserver t predicate 
return rxjavaplugins onassembly new observableany source predicate 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done done true downstream onsuccess false 
upstream dispose 
return upstream isdisposed 
source subscribe new lastobserver observer 
upstream dispose upstream disposablehelper disposed 
return upstream disposablehelper disposed 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream disposablehelper disposed item null downstream onerror t 
upstream disposablehelper disposed t v item if v null item null downstream onsuccess v else downstream oncomplete 
return new simplegenerator consumer 
return new simplebigenerator consumer 
return new itemdelayfunction itemdelay 
observer onerror v 
observer oncomplete 
return new observeronnext observer 
return new observeronerror observer 
return new observeroncomplete observer 
return new combiner mapper 
return new flatmapintoiterable mapper 
return 0 
return new replaysupplier parent 
return parent replay 
return parent replay buffersize eagertruncate 
return parent replay buffersize time unit scheduler eagertruncate 
return parent replay time unit scheduler eagertruncate 
observer super t liftedobserver try liftedobserver objects requirenonnull operator apply observer operator operator returned a null observer catch nullpointerexception e throw e catch throwable e exceptions throwiffatal e rxjavaplugins onerror e nullpointerexception npe new nullpointerexception actually not but can t throw other exceptions due to rs npe initcause e throw npe source subscribe liftedobserver 
rangedisposable parent new rangedisposable o start start count o onsubscribe parent parent run 
if fused return observer super long actual this downstream long e end for long i index i e get 0 i actual onnext i if get 0 lazyset 1 actual oncomplete 
long i index if i end index i 1 return i lazyset 1 return null 
return index end 
index end lazyset 1 
set 1 
return get 0 
t d new observer observer onsubscribe d if d isdisposed return t value try value exceptionhelper nullcheck callable call callable returned a null value catch throwable e exceptions throwiffatal e if d isdisposed observer onerror e else rxjavaplugins onerror e return d complete value 
return exceptionhelper nullcheck callable call the callable returned a null value 
source subscribe new countobserver t 
return rxjavaplugins onassembly new observablecount source 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose upstream disposablehelper disposed 
return upstream isdisposed 
count 
upstream disposablehelper disposed downstream onerror t 
upstream disposablehelper disposed downstream onsuccess count 
source subscribe new elementatobserver t index defaultvalue erroronfewer 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done done true t v defaultvalue if v null erroronfewer downstream onerror new else if v null downstream onnext v downstream oncomplete 
source subscribe new unsubscribeobserver t scheduler 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
if get rxjavaplugins onerror t return downstream onerror t 
if get downstream oncomplete 
if compareandset false true scheduler scheduledirect new disposetask 
return get 
upstream dispose 
source subscribe new observer onsubscribe ondispose 
if skip count bufferexactobserver t u bes new bufferexactobserver t count buffersupplier if bes createbuffer source subscribe bes else source subscribe new bufferskipobserver t count skip buffersupplier 
u b try b objects requirenonnull buffersupplier get empty buffer supplied catch throwable t exceptions throwiffatal t buffer null if upstream null emptydisposable error t downstream else upstream dispose downstream onerror t return false buffer b return true 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
buffer null downstream onerror t 
u b buffer if b null buffer null if b isempty downstream onnext b downstream oncomplete 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
buffers clear downstream onerror t 
while buffers isempty downstream onnext buffers poll downstream oncomplete 
mergewithobserver t parent new mergewithobserver observer observer onsubscribe parent source subscribe parent other subscribe parent otherobserver 
disposablehelper setonce maindisposable d 
if errors ex disposablehelper dispose otherobserver drain 
maindone true drain 
return disposablehelper isdisposed maindisposable get 
disposed true disposablehelper dispose maindisposable disposablehelper dispose otherobserver errors if getandincrement 0 queue null singleitem null 
if errors ex disposablehelper dispose maindisposable drain 
simpleplainqueue t q queue if q null q new spsclinkedarrayqueue buffersize queue q return q 
if getandincrement 0 drainloop 
observer super t actual this downstream int missed 1 for for if disposed singleitem null queue null return if errors get null singleitem null queue null errors tryterminateconsumer actual return int os otherstate if os other state has value t v singleitem singleitem null otherstate other state consumed or empty os other state consumed or empty actual onnext v boolean d maindone simpleplainqueue t q queue t v q null q poll null boolean empty v null if d empty os other state consumed or empty queue null actual oncomplete return if empty break actual onnext v missed addandget missed if missed 0 break 
disposablehelper setonce this d 
parent othererror e 
final serializedobserver r serial new serializedobserver t final t u r wlf new serial combiner serial onsubscribe wlf other subscribe new wlf source subscribe wlf 
disposablehelper setonce this upstream d 
disposablehelper dispose other downstream onerror t 
disposablehelper dispose other downstream oncomplete 
disposablehelper dispose upstream disposablehelper dispose other 
return disposablehelper isdisposed upstream get 
return disposablehelper setonce other o 
disposablehelper dispose upstream downstream onerror e 
parent setother d 
parent othererror t 
$EMPTY$
if observablescalarxmap source observer mapper return if delayerrors errormode immediate serializedobserver u serial new serializedobserver observer source subscribe new sourceobserver serial mapper buffersize else source subscribe new observer mapper buffersize delayerrors errormode end 
if disposablehelper validate this upstream d this upstream d if d instanceof queuedisposable suppresswarnings unchecked queuedisposable t qd queuedisposable t d int m qd requestfusion queuedisposable any if m queuedisposable sync fusionmode m queue qd done true downstream onsubscribe this drain return if m queuedisposable async fusionmode m queue qd downstream onsubscribe this return queue new spsclinkedarrayqueue buffersize downstream onsubscribe this 
if done rxjavaplugins onerror t return done true dispose downstream onerror t 
if done return done true drain 
active false drain 
return disposed 
disposed true inner dispose upstream dispose if getandincrement 0 queue clear 
if getandincrement 0 return for if disposed queue clear return if active boolean d done t t try t queue poll catch throwable ex exceptions throwiffatal ex dispose queue clear downstream onerror ex return boolean empty t null if d empty disposed true downstream oncomplete return if empty observablesource extends u o try o objects requirenonnull mapper apply t the mapper returned a null observablesource catch throwable ex exceptions throwiffatal ex dispose queue clear downstream onerror ex return active true o subscribe inner if decrementandget 0 break 
disposablehelper replace this d 
parent dispose downstream onerror t 
parent innercomplete 
disposablehelper dispose this 
if disposablehelper validate this upstream d this upstream d if d instanceof queuedisposable suppresswarnings unchecked queuedisposable t qd queuedisposable t d int m qd requestfusion queuedisposable any if m queuedisposable sync sourcemode m queue qd done true downstream onsubscribe this drain return if m queuedisposable async sourcemode m queue qd downstream onsubscribe this return queue new spsclinkedarrayqueue buffersize downstream onsubscribe this 
if errors e done true drain 
done true drain 
return cancelled 
cancelled true upstream dispose observer dispose errors 
if getandincrement 0 return observer super r downstream this downstream simplequeue t queue this queue atomicthrowable errors this errors for if active if cancelled queue clear return if tilltheend throwable ex errors get if ex null queue clear cancelled true errors tryterminateconsumer downstream return boolean d done t v try v queue poll catch throwable ex exceptions throwiffatal ex cancelled true this upstream dispose errors ex errors tryterminateconsumer downstream return boolean empty v null if d empty cancelled true errors tryterminateconsumer downstream return if empty observablesource extends r o try o objects requirenonnull mapper apply v the mapper returned a null observablesource catch throwable ex exceptions throwiffatal ex cancelled true this upstream dispose queue clear errors ex errors tryterminateconsumer downstream return if o instanceof supplier r w try w supplier r o get catch throwable ex exceptions throwiffatal ex errors ex continue if w null cancelled downstream onnext w continue else active true o subscribe observer if decrementandget 0 break 
disposablehelper replace this d 
r p parent if p errors e if p tilltheend p upstream dispose p active false p drain 
r p parent p active false p drain 
disposablehelper dispose this 
source subscribe new flatmapmaybeobserver observer mapper delayerrors 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
active decrementandget if errors t if delayerrors set dispose drain 
active decrementandget drain 
cancelled true upstream dispose set dispose errors 
return cancelled 
spsclinkedarrayqueue r current queue get if current null return current current new spsclinkedarrayqueue observable buffersize if queue compareandset null current return current return queue get 
if getandincrement 0 drainloop 
spsclinkedarrayqueue r q queue get if q null q clear 
int missed 1 observer super r a downstream atomicinteger n active atomicreference spsclinkedarrayqueue r qr queue for for if cancelled clear return if delayerrors throwable ex errors get if ex null clear errors tryterminateconsumer a return boolean d n get 0 spsclinkedarrayqueue r q qr get r v q null q poll null boolean empty v null if d empty errors tryterminateconsumer a return if empty break a onnext v missed addandget missed if missed 0 break 
disposablehelper setonce this d 
innererror this e 
innercomplete this 
return disposablehelper isdisposed get 
disposablehelper dispose this 
source subscribe new skiplastobserver observer skip 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
downstream onerror t 
downstream oncomplete 
rangedisposable parent new rangedisposable o start end o onsubscribe parent parent run 
if fused return observer super integer actual this downstream long e end for long i index i e get 0 i actual onnext int i if get 0 lazyset 1 actual oncomplete 
long i index if i end index i 1 return int i lazyset 1 return null 
return index end 
index end lazyset 1 
set 1 
return get 0 
u coll try coll exceptionhelper nullcheck collectionsupplier get the collectionsupplier returned a null collection catch throwable e exceptions throwiffatal e emptydisposable error e t return source subscribe new tolistobserver t coll 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
collection null downstream onerror t 
u c collection collection null downstream onnext c downstream oncomplete 
source subscribe new new serializedobserver t timeout unit scheduler createworker 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
if done rxjavaplugins onerror t return disposable d timer if d null d dispose done true downstream onerror t worker dispose 
if done return done true disposable d timer if d null d dispose suppresswarnings unchecked debounceemitter t de debounceemitter t d if de null de run downstream oncomplete worker dispose 
upstream dispose worker dispose 
return worker isdisposed 
if once compareandset false true parent emit idx value this 
disposablehelper dispose this 
return get disposablehelper disposed 
disposablehelper replace this d 
serializedobserver t serial new serializedobserver t if emitlast source subscribe new sampletimedemitlast serial period unit scheduler else source subscribe new sampletimednolast serial period unit scheduler 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this disposable task scheduler this period period unit disposablehelper replace timer task 
canceltimer downstream onerror t 
canceltimer complete 
disposablehelper dispose timer 
canceltimer upstream dispose 
return upstream isdisposed 
t value getandset null if value null downstream onnext value 
downstream oncomplete 
emit 
emit if wip decrementandget 0 downstream oncomplete 
if wip incrementandget 2 emit if wip decrementandget 0 downstream oncomplete 
iterator extends t it try it source iterator catch throwable e exceptions throwiffatal e emptydisposable error e observer return boolean hasnext try hasnext it hasnext catch throwable e exceptions throwiffatal e emptydisposable error e observer return if hasnext emptydisposable complete observer return t d new observer it observer onsubscribe d if d fusionmode d run 
boolean hasnext do if isdisposed return t v try v objects requirenonnull it next the iterator returned a null value catch throwable e exceptions throwiffatal e downstream onerror e return downstream onnext v if isdisposed return try hasnext it hasnext catch throwable e exceptions throwiffatal e downstream onerror e return while hasnext if isdisposed downstream oncomplete 
if done return null if checknext if it hasnext done true return null else checknext true return objects requirenonnull it next the iterator returned a null value 
return done 
done true 
disposed true 
return disposed 
source subscribe new ignoreobservable t 
this upstream d downstream onsubscribe this 
downstream onerror e 
downstream oncomplete 
upstream dispose 
return upstream isdisposed 
t d new observer observer onsubscribe d if d isdisposed t v try v exceptionhelper nullcheck unit null future get timeout unit future get future returned a null value catch throwable ex exceptions throwiffatal ex if d isdisposed observer onerror ex return d complete v 
mergewithobserver t parent new mergewithobserver observer observer onsubscribe parent source subscribe parent other subscribe parent otherobserver 
disposablehelper setonce maindisposable d 
disposablehelper dispose otherobserver halfserializer onerror downstream ex this errors 
maindone true if otherdone halfserializer oncomplete downstream this errors 
return disposablehelper isdisposed maindisposable get 
disposablehelper dispose maindisposable disposablehelper dispose otherobserver errors 
disposablehelper dispose maindisposable halfserializer onerror downstream ex this errors 
otherdone true if maindone halfserializer oncomplete downstream this errors 
disposablehelper setonce this d 
parent othererror e 
parent othercomplete 
source subscribe new t open closingindicator buffersize 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this open subscribe startobserver 
startobserver dispose resources dispose if error t upstreamdone true drain 
startobserver dispose resources dispose upstreamdone true drain 
if downstreamdisposed compareandset false true if windowcount decrementandget 0 upstream dispose startobserver dispose resources dispose error upstreamcanceled true drain else startobserver dispose 
return downstreamdisposed get 
if windowcount decrementandget 0 upstream dispose startobserver dispose resources dispose error upstreamcanceled true drain 
upstream dispose resources dispose if error t upstreamdone true drain 
opendone true drain 
upstream dispose startobserver dispose resources dispose if error t upstreamdone true drain 
if getandincrement 0 return int missed 1 final observer super observable t downstream this downstream final simpleplainqueue object queue this queue final list unicastsubject t windows this windows for if upstreamcanceled queue clear windows clear else boolean isdone upstreamdone object o queue poll boolean isempty o null if isdone if isempty error get null terminatedownstream downstream upstreamcanceled true continue if isempty if o instanceof windowstartitem if downstreamdisposed get suppresswarnings unchecked b startitem windowstartitem b o item observablesource v endsource try endsource objects requirenonnull closingindicator apply startitem the closingindicator returned a null observablesource catch throwable ex exceptions throwiffatal ex upstream dispose startobserver dispose resources dispose exceptions throwiffatal ex error ex upstreamdone true continue windowcount getandincrement unicastsubject t newwindow unicastsubject create buffersize this t v endobserver new this newwindow downstream onnext endobserver if endobserver tryabandon newwindow oncomplete else windows add newwindow resources add endobserver endsource subscribe endobserver else if o instanceof suppresswarnings unchecked unicastsubject t w t v o window windows remove w resources delete disposable o w oncomplete else suppresswarnings unchecked t item t o for unicastsubject t w windows w onnext item continue else if opendone windows size 0 upstream dispose startobserver dispose resources dispose terminatedownstream downstream upstreamcanceled true continue missed addandget missed if missed 0 break 
throwable ex error terminate if ex null for unicastsubject t w windows w oncomplete downstream oncomplete else if ex exceptionhelper terminated for unicastsubject t w windows w onerror ex downstream onerror ex 
disposablehelper setonce this d 
parent openerror t 
parent opencomplete 
disposablehelper dispose this 
disposablehelper setonce upstream d 
if isdisposed rxjavaplugins onerror t else parent closeerror t 
parent close this 
disposablehelper dispose upstream 
return upstream get disposablehelper disposed 
window subscribe o once set true 
return once get once compareandset false true 
joindisposable tleft tright tleftend trightend r parent new joindisposable observer leftend rightend resultselector observer onsubscribe parent leftrightobserver left new leftrightobserver parent true parent disposables add left leftrightobserver right new leftrightobserver parent false parent disposables add right source subscribe left other subscribe right 
if cancelled cancelled true cancelall if getandincrement 0 queue clear 
return cancelled 
disposables dispose 
throwable ex exceptionhelper terminate error lefts clear rights clear a onerror ex 
exceptions throwiffatal exc exceptionhelper addthrowable error exc q clear cancelall errorall a 
if getandincrement 0 return int missed 1 spsclinkedarrayqueue object q queue observer super r a downstream for for if cancelled q clear return throwable ex error get if ex null q clear cancelall errorall a return boolean d active get 0 integer mode integer q poll boolean empty mode null if d empty lefts clear rights clear disposables dispose a oncomplete return if empty break object val q poll if mode left value suppresswarnings unchecked tleft left tleft val int idx leftindex lefts put idx left observablesource tleftend p try p objects requirenonnull leftend apply left the leftend returned a null observablesource catch throwable exc fail exc a q return leftrightendobserver end new leftrightendobserver this true idx disposables add end p subscribe end ex error get if ex null q clear cancelall errorall a return for tright right rights values r w try w objects requirenonnull resultselector apply left right the resultselector returned a null value catch throwable exc fail exc a q return a onnext w else if mode right value suppresswarnings unchecked tright right tright val int idx rightindex rights put idx right observablesource trightend p try p objects requirenonnull rightend apply right the rightend returned a null observablesource catch throwable exc fail exc a q return leftrightendobserver end new leftrightendobserver this false idx disposables add end p subscribe end ex error get if ex null q clear cancelall errorall a return for tleft left lefts values r w try w objects requirenonnull resultselector apply left right the resultselector returned a null value catch throwable exc fail exc a q return a onnext w else if mode left close leftrightendobserver end leftrightendobserver val lefts remove end index disposables remove end else leftrightendobserver end leftrightendobserver val rights remove end index disposables remove end missed addandget missed if missed 0 break 
if exceptionhelper addthrowable error ex active decrementandget drain else rxjavaplugins onerror ex 
if exceptionhelper addthrowable error ex drain else rxjavaplugins onerror ex 
source subscribe new debounceobserver new serializedobserver t debounceselector 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
disposablehelper dispose debouncer downstream onerror t 
if done return done true disposable d debouncer get if d disposablehelper disposed suppresswarnings unchecked t u dis t u d if dis null dis emit disposablehelper dispose debouncer downstream oncomplete 
upstream dispose disposablehelper dispose debouncer 
return upstream isdisposed 
if once compareandset false true parent emit index value 
if done rxjavaplugins onerror t return done true parent onerror t 
if done return done true emit 
source subscribe new observer mapper maxconcurrency prefetch errormode 
if disposablehelper validate this upstream d this upstream d if d instanceof queuedisposable queuedisposable t qd queuedisposable t d int m qd requestfusion queuedisposable any if m queuedisposable sync sourcemode m queue qd done true downstream onsubscribe this drain return if m queuedisposable async sourcemode m queue qd downstream onsubscribe this return queue new spsclinkedarrayqueue prefetch downstream onsubscribe this 
if errors e done true drain 
done true drain 
if cancelled return cancelled true upstream dispose errors drainanddispose 
if getandincrement 0 do queue clear disposeall while decrementandget 0 
return cancelled 
innerqueuedobserver r inner current if inner null inner dispose for inner observers poll if inner null return inner dispose 
if errors e if errormode errormode immediate upstream dispose inner setdone drain 
inner setdone drain 
if getandincrement 0 return int missed 1 simplequeue t q queue arraydeque innerqueuedobserver r observers this observers observer super r a this downstream errormode errormode this errormode outer for int ac activecount while ac maxconcurrency if cancelled q clear disposeall return if errormode errormode immediate throwable ex errors get if ex null q clear disposeall errors tryterminateconsumer downstream return t v observablesource extends r source try v q poll if v null break source objects requirenonnull mapper apply v the mapper returned a null observablesource catch throwable ex exceptions throwiffatal ex upstream dispose q clear disposeall errors ex errors tryterminateconsumer downstream return innerqueuedobserver r inner new innerqueuedobserver this prefetch observers offer inner source subscribe inner ac activecount ac if cancelled q clear disposeall return if errormode errormode immediate throwable ex errors get if ex null q clear disposeall errors tryterminateconsumer downstream return innerqueuedobserver r active current if active null if errormode errormode boundary throwable ex errors get if ex null q clear disposeall errors tryterminateconsumer a return boolean d done active observers poll boolean empty active null if d empty throwable ex errors get if ex null q clear disposeall errors tryterminateconsumer a else a oncomplete return if empty current active if active null simplequeue r aq active queue for if cancelled q clear disposeall return boolean d active isdone if errormode errormode immediate throwable ex errors get if ex null q clear disposeall errors tryterminateconsumer a return r w try w aq poll catch throwable ex exceptions throwiffatal ex errors ex current null activecount continue outer boolean empty w null if d empty current null activecount continue outer if empty break a onnext w missed addandget missed if missed 0 break 
if observablescalarxmap source t mapper return source subscribe new mergeobserver t mapper delayerrors maxconcurrency buffersize 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
for if p instanceof supplier if tryemitscalar supplier extends u p maxconcurrency integer max value boolean empty false synchronized this p sources poll if p null wip empty true if empty drain break else break else innerobserver t u inner new innerobserver this uniqueid if addinner inner p subscribe inner break 
u u try u value get catch throwable ex exceptions throwiffatal ex errors ex drain return true if u null return true if get 0 compareandset 0 1 downstream onnext u if decrementandget 0 return true else simpleplainqueue u q queue if q null if maxconcurrency integer max value q new spsclinkedarrayqueue buffersize else q new spscarrayqueue maxconcurrency queue q q offer u if getandincrement 0 return false drainloop return true 
if done rxjavaplugins onerror t return if errors t done true drain 
if done return done true drain 
disposed true if disposeall errors 
return disposed 
if getandincrement 0 drainloop 
final observer super u child this downstream int missed 1 for if checkterminate return int innercompleted 0 simpleplainqueue u svq queue if svq null for if checkterminate return u o svq poll if o null break child onnext o innercompleted if innercompleted 0 if maxconcurrency integer max value subscribemore innercompleted innercompleted 0 continue boolean d done svq queue innerobserver inner observers get int n inner length int nsources 0 if maxconcurrency integer max value synchronized this nsources sources size if d svq null svq isempty n 0 nsources 0 errors tryterminateconsumer downstream return if n 0 int j math min n 1 lastindex sourceloop for int i 0 i n i if checkterminate return suppresswarnings unchecked innerobserver t u is innerobserver t u inner j simplequeue u q is queue if q null for u o try o q poll catch throwable ex exceptions throwiffatal ex is dispose errors ex if checkterminate return removeinner is innercompleted j if j n j 0 continue sourceloop if o null break child onnext o if checkterminate return boolean innerdone is done simplequeue u innerqueue is queue if innerdone innerqueue null innerqueue isempty removeinner is innercompleted j if j n j 0 lastindex j if innercompleted 0 if maxconcurrency integer max value subscribemore innercompleted innercompleted 0 continue missed addandget missed if missed 0 break 
if disposed return true throwable e errors get if delayerrors e null disposeall errors tryterminateconsumer downstream return true return false 
upstream dispose innerobserver a observers getandset cancelled if a cancelled for innerobserver inner a inner dispose return true return false 
if disposablehelper setonce this d if d instanceof queuedisposable suppresswarnings unchecked queuedisposable u qd queuedisposable u d int m qd requestfusion queuedisposable any queuedisposable boundary if m queuedisposable sync fusionmode m queue qd done true parent drain return if m queuedisposable async fusionmode m queue qd 
if parent errors t if parent delayerrors parent disposeall done true parent drain 
done true parent drain 
disposablehelper dispose this 
t u open close parent new t bufferopen bufferclose buffersupplier t onsubscribe parent source subscribe parent 
if disposablehelper setonce this upstream d bufferopenobserver open open new bufferopenobserver this observers add open bufferopen subscribe open 
if errors t observers dispose synchronized this buffers null done true drain 
observers dispose synchronized this map long c bufs buffers if bufs null return for c b bufs values queue offer b buffers null done true drain 
if disposablehelper dispose upstream cancelled true observers dispose synchronized this buffers null if getandincrement 0 queue clear 
return disposablehelper isdisposed upstream get 
disposablehelper dispose upstream observers delete observer onerror ex 
if getandincrement 0 return int missed 1 observer super c a downstream spsclinkedarrayqueue c q queue for for if cancelled q clear return boolean d done if d errors get null q clear errors tryterminateconsumer a return c v q poll boolean empty v null if d empty a oncomplete return if empty break a onnext v missed addandget missed if missed 0 break 
disposablehelper setonce this d 
lazyset disposablehelper disposed parent boundaryerror this t 
lazyset disposablehelper disposed parent opencomplete this 
disposablehelper dispose this 
return get disposablehelper disposed 
disposablehelper setonce this d 
disposable upstream get if upstream disposablehelper disposed lazyset disposablehelper disposed upstream dispose parent close this index 
if get disposablehelper disposed lazyset disposablehelper disposed parent boundaryerror this t else rxjavaplugins onerror t 
if get disposablehelper disposed lazyset disposablehelper disposed parent close this index 
disposablehelper dispose this 
return get disposablehelper disposed 
source subscribe new t 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true t v value value null if v null downstream oncomplete else downstream onsuccess v 
publishsubject t subject publishsubject create observablesource extends r target try target objects requirenonnull selector apply subject the selector returned a null observablesource catch throwable ex exceptions throwiffatal ex emptydisposable error ex observer return targetobserver r o new targetobserver observer target subscribe o source subscribe new sourceobserver subject o 
disposablehelper setonce target d 
subject onerror e 
subject oncomplete 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
disposablehelper dispose this downstream onerror e 
disposablehelper dispose this downstream oncomplete 
upstream dispose disposablehelper dispose this 
return upstream isdisposed 
collection super k collection try collection exceptionhelper nullcheck collectionsupplier get the collectionsupplier returned a null collection catch throwable ex exceptions throwiffatal ex emptydisposable error ex observer return source subscribe new distinctobserver observer keyselector collection 
if done rxjavaplugins onerror e else done true collection clear downstream onerror e 
if done done true collection clear downstream oncomplete 
for t v qd poll if v null collection add objects requirenonnull keyselector apply v the keyselector returned a null key return v 
collection clear super clear 
window subscribe s once set true 
return once get once compareandset false true 
s state try state statesupplier get catch throwable e exceptions throwiffatal e emptydisposable error e observer return generatordisposable t s gd new generatordisposable observer generator disposestate state observer onsubscribe gd gd run 
s s state if cancelled state null dispose s return final bifunction s super emitter t s f generator for if cancelled state null dispose s return hasnext false try s f apply s this catch throwable ex exceptions throwiffatal ex state null cancelled true onerror ex dispose s return if terminate cancelled true state null dispose s return 
cancelled true 
return cancelled 
if terminate rxjavaplugins onerror t else if t null t exceptionhelper onerror called with a null throwable terminate true downstream onerror t 
if terminate terminate true downstream oncomplete 
onerrornextobserver t parent new onerrornextobserver t nextsupplier t onsubscribe parent arbiter source subscribe parent 
arbiter replace d 
if once if done rxjavaplugins onerror t return downstream onerror t return once true observablesource extends t p try p nextsupplier apply t catch throwable e exceptions throwiffatal e downstream onerror new compositeexception t e return if p null nullpointerexception npe new nullpointerexception observable is null npe initcause t downstream onerror npe return p subscribe this 
if done return done true once true downstream oncomplete 
is new observer start end observer onsubscribe is scheduler sch scheduler if sch instanceof trampolinescheduler worker worker sch createworker is setresource worker worker scheduleperiodically is initialdelay period unit else disposable d sch is initialdelay period unit is setresource d 
disposablehelper dispose this 
return get disposablehelper disposed 
if isdisposed long c count downstream onnext c if c end if isdisposed downstream oncomplete disposablehelper dispose this return count c 1 
disposablehelper setonce this d 
u u try u objects requirenonnull initialsupplier get the initialsupplier returned a null value catch throwable e exceptions throwiffatal e emptydisposable error e t return source subscribe new collectobserver t u collector 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream onnext u downstream oncomplete 
if timespan timeskip maxsize integer max value source subscribe new new serializedobserver t buffersupplier timespan unit scheduler return scheduler worker w scheduler createworker if timespan timeskip source subscribe new new serializedobserver t buffersupplier timespan unit maxsize w return source subscribe new new serializedobserver t buffersupplier timespan timeskip unit w 
if disposablehelper validate this upstream d this upstream d u b try b objects requirenonnull buffersupplier get the buffer supplied is null catch throwable e exceptions throwiffatal e dispose emptydisposable error e downstream return buffer b downstream onsubscribe this if disposablehelper isdisposed timer get disposable task scheduler this timespan timespan unit disposablehelper set timer task 
synchronized this buffer null downstream onerror t disposablehelper dispose timer 
u b synchronized this b buffer buffer null if b null queue offer b done true if enter queuedrainhelper drainloop queue downstream false null this disposablehelper dispose timer 
disposablehelper dispose timer upstream dispose 
return timer get disposablehelper disposed 
u next try next objects requirenonnull buffersupplier get the buffersupplier returned a null buffer catch throwable e exceptions throwiffatal e downstream onerror e dispose return u current synchronized this current buffer if current null buffer next if current null disposablehelper dispose timer return fastpathemit current false this 
if disposablehelper validate this upstream d this upstream d final u b try b objects requirenonnull buffersupplier get the buffer supplied is null catch throwable e exceptions throwiffatal e d dispose emptydisposable error e downstream w dispose return buffers add b downstream onsubscribe this w scheduleperiodically this timeskip timeskip unit w schedule new removefrombufferemit b timespan unit 
done true clear downstream onerror t w dispose 
list u bs synchronized this bs new arraylist buffers buffers clear for u b bs queue offer b done true if enter queuedrainhelper drainloop queue downstream false w this 
if cancelled cancelled true clear upstream dispose w dispose 
return cancelled 
synchronized this buffers clear 
if cancelled return final u b try b objects requirenonnull buffersupplier get the buffersupplier returned a null buffer catch throwable e exceptions throwiffatal e downstream onerror e dispose return synchronized this if cancelled return buffers add b w schedule new removefrombuffer b timespan unit 
synchronized this buffers remove b fastpathorderedemit b false w 
synchronized this buffers remove buffer fastpathorderedemit buffer false w 
if disposablehelper validate this upstream d this upstream d u b try b objects requirenonnull buffersupplier get the buffer supplied is null catch throwable e exceptions throwiffatal e d dispose emptydisposable error e downstream w dispose return buffer b downstream onsubscribe this timer w scheduleperiodically this timespan timespan unit 
synchronized this buffer null downstream onerror t w dispose 
w dispose u b synchronized this b buffer buffer null if b null queue offer b done true if enter queuedrainhelper drainloop queue downstream false this this 
if cancelled cancelled true upstream dispose w dispose synchronized this buffer null 
return cancelled 
u next try next objects requirenonnull buffersupplier get the buffersupplier returned a null buffer catch throwable e exceptions throwiffatal e dispose downstream onerror e return u current synchronized this current buffer if current null producerindex consumerindex return buffer next fastpathorderedemit current false this 
source subscribe new new serializedobserver t buffersupplier boundary 
if disposablehelper validate this upstream d this upstream d u b try b objects requirenonnull buffersupplier get the buffer supplied is null catch throwable e exceptions throwiffatal e cancelled true d dispose emptydisposable error e downstream return buffer b t u b bs new this other bs downstream onsubscribe this if cancelled boundary subscribe bs 
dispose downstream onerror t 
u b synchronized this b buffer if b null return buffer null queue offer b done true if enter queuedrainhelper drainloop queue downstream false this this 
if cancelled cancelled true other dispose upstream dispose if enter queue clear 
return cancelled 
u next try next objects requirenonnull buffersupplier get the buffer supplied is null catch throwable e exceptions throwiffatal e dispose downstream onerror e return u b synchronized this b buffer if b null return buffer next fastpathemit b false this 
parent onerror t 
parent oncomplete 
serializedobserver t serial new serializedobserver t if emitlast source subscribe new samplemainemitlast serial other else source subscribe new samplemainnolast serial other 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this if other get null sampler subscribe new samplerobserver this 
disposablehelper dispose other downstream onerror t 
disposablehelper dispose other completion 
return disposablehelper setonce other o 
disposablehelper dispose other upstream dispose 
return other get disposablehelper disposed 
upstream dispose downstream onerror e 
upstream dispose completion 
t value getandset null if value null downstream onnext value 
parent setother d 
parent run 
parent error t 
parent complete 
downstream oncomplete 
emit 
done true if wip getandincrement 0 emit downstream oncomplete 
if wip getandincrement 0 do boolean d done emit if d downstream oncomplete return while wip decrementandget 0 
t it new buffersize source subscribe it return it 
for if isdisposed throwable e error if e null throw exceptionhelper wraporthrow e return false boolean d done boolean empty queue isempty if d throwable e error if e null throw exceptionhelper wraporthrow e else if empty return false if empty try blockinghelper verifynonblocking lock lock try while done queue isempty isdisposed condition await finally lock unlock catch interruptedexception ex disposablehelper dispose this signalconsumer throw exceptionhelper wraporthrow ex else return true 
if hasnext return queue poll throw new 
disposablehelper setonce this d 
error t done true signalconsumer 
done true signalconsumer 
lock lock try condition signalall finally lock unlock 
throw new remove 
disposablehelper dispose this signalconsumer 
return disposablehelper isdisposed get 
if delayerrors errormode immediate serializedobserver u serial new serializedobserver observer source subscribe new concatmapobserver serial mapper buffersize scheduler createworker else source subscribe new observer mapper buffersize delayerrors errormode end scheduler createworker 
if disposablehelper validate this upstream d this upstream d if d instanceof queuedisposable suppresswarnings unchecked queuedisposable t qd queuedisposable t d int m qd requestfusion queuedisposable any if m queuedisposable sync fusionmode m queue qd done true downstream onsubscribe this drain return if m queuedisposable async fusionmode m queue qd downstream onsubscribe this return queue new spsclinkedarrayqueue buffersize downstream onsubscribe this 
if done rxjavaplugins onerror t return done true dispose downstream onerror t 
if done return done true drain 
active false drain 
return disposed 
disposed true inner dispose upstream dispose worker dispose if getandincrement 0 queue clear 
if getandincrement 0 return worker schedule this 
for if disposed queue clear return if active boolean d done t t try t queue poll catch throwable ex exceptions throwiffatal ex dispose queue clear downstream onerror ex worker dispose return boolean empty t null if d empty disposed true downstream oncomplete worker dispose return if empty observablesource extends u o try o objects requirenonnull mapper apply t the mapper returned a null observablesource catch throwable ex exceptions throwiffatal ex dispose queue clear downstream onerror ex worker dispose return active true o subscribe inner if decrementandget 0 break 
disposablehelper replace this d 
parent dispose downstream onerror t 
parent innercomplete 
disposablehelper dispose this 
if disposablehelper validate this upstream d this upstream d if d instanceof queuedisposable suppresswarnings unchecked queuedisposable t qd queuedisposable t d int m qd requestfusion queuedisposable any if m queuedisposable sync sourcemode m queue qd done true downstream onsubscribe this drain return if m queuedisposable async sourcemode m queue qd downstream onsubscribe this return queue new spsclinkedarrayqueue buffersize downstream onsubscribe this 
if errors e done true drain 
done true drain 
return cancelled 
cancelled true upstream dispose observer dispose worker dispose errors 
if getandincrement 0 return worker schedule this 
observer super r downstream this downstream simplequeue t queue this queue atomicthrowable errors this errors for if active if cancelled queue clear return if tilltheend throwable ex errors get if ex null queue clear cancelled true errors tryterminateconsumer downstream worker dispose return boolean d done t v try v queue poll catch throwable ex exceptions throwiffatal ex cancelled true this upstream dispose errors ex errors tryterminateconsumer downstream worker dispose return boolean empty v null if d empty cancelled true errors tryterminateconsumer downstream worker dispose return if empty observablesource extends r o try o objects requirenonnull mapper apply v the mapper returned a null observablesource catch throwable ex exceptions throwiffatal ex cancelled true this upstream dispose queue clear errors ex errors tryterminateconsumer downstream worker dispose return if o instanceof supplier r w try w supplier r o get catch throwable ex exceptions throwiffatal ex errors ex continue if w null cancelled downstream onnext w continue else active true o subscribe observer if decrementandget 0 break 
disposablehelper replace this d 
r p parent if p errors e if p tilltheend p upstream dispose p active false p drain 
r p parent p active false p drain 
disposablehelper dispose this 
source subscribe new observer mapper delayerrors 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
active decrementandget if errors t if delayerrors set dispose drain 
active decrementandget drain 
cancelled true upstream dispose set dispose errors 
return cancelled 
spsclinkedarrayqueue r current queue get if current null return current current new spsclinkedarrayqueue observable buffersize if queue compareandset null current return current return queue get 
if getandincrement 0 drainloop 
spsclinkedarrayqueue r q queue get if q null q clear 
int missed 1 observer super r a downstream atomicinteger n active atomicreference spsclinkedarrayqueue r qr queue for for if cancelled clear return if delayerrors throwable ex errors get if ex null clear errors tryterminateconsumer a return boolean d n get 0 spsclinkedarrayqueue r q qr get r v q null q poll null boolean empty v null if d empty errors tryterminateconsumer downstream return if empty break a onnext v missed addandget missed if missed 0 break 
disposablehelper setonce this d 
innererror this e 
return disposablehelper isdisposed get 
disposablehelper dispose this 
iterator u it try it objects requirenonnull other iterator the iterator returned by other is null catch throwable e exceptions throwiffatal e emptydisposable error e t return boolean b try b it hasnext catch throwable e exceptions throwiffatal e emptydisposable error e t return if b emptydisposable complete t return source subscribe new zipiterableobserver t u v t it zipper 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
done true upstream dispose downstream onerror e 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
source subscribe new observer selector 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
final serializedobserver t serial new serializedobserver child final frc new 2 serial onsubscribe frc final skipuntilobserver t sus new skipuntilobserver serial frc other subscribe new skipuntil frc sus serial source subscribe sus 
if disposablehelper validate this upstream d this upstream d frc setresource 0 d 
frc dispose downstream onerror t 
frc dispose downstream oncomplete 
if disposablehelper validate this upstream d this upstream d frc setresource 1 d 
frc dispose serial onerror t 
sus notskipping true 
return rxjavaplugins onassembly new multicastreplay connectablefactory selector 
return create source default unbounded factory 
return source 
replayobserver t conn current get if conn null conn isdisposed current compareandset conn null 
onsubscribe subscribe observer 
boolean doconnect replayobserver t ps for ps current get if ps null ps isdisposed replaybuffer t buf bufferfactory call replayobserver t u new replayobserver buf current if current compareandset ps u continue ps u doconnect ps shouldconnect get ps shouldconnect compareandset false true break try connection accept ps catch throwable ex exceptions throwiffatal ex if doconnect ps shouldconnect compareandset true false exceptions throwiffatal ex throw exceptionhelper wraporthrow ex if doconnect source subscribe ps 
return observers get terminated 
observers set terminated current compareandset replayobserver this null disposablehelper dispose this 
if disposablehelper setonce this p replay 
if done done true buffer error e replayfinal else rxjavaplugins onerror e 
if done done true buffer complete replayfinal 
suppresswarnings unchecked innerdisposable t a observers get for innerdisposable t rp a buffer replay rp 
suppresswarnings unchecked innerdisposable t a observers getandset terminated for innerdisposable t rp a buffer replay rp 
return cancelled 
if cancelled cancelled true parent remove this index null 
return u index 
add notificationlite error e size 
add notificationlite complete size 
node head get node next head get size setfirst next 
node head get if head value null node n new node null n lazyset head get set n 
object o entertransform notificationlite error e node n new node o addlast n truncatefinal 
object o entertransform notificationlite complete node n new node o addlast n truncatefinal 
return value 
return value 
trimhead 
node n gethead for node next n get if next null object o next value object v leavetransform o if notificationlite iscomplete v notificationlite iserror v break output add notificationlite t getvalue v n next else break 
return tail value null notificationlite iserror leavetransform tail value 
return tail value null notificationlite iscomplete leavetransform tail value 
return get 
if size limit removefirst 
return new timed value scheduler now unit unit 
return timed value value 
long timelimit scheduler now unit maxage node prev get node next prev get int e 0 for if size 1 if size limit e size prev next next next get else timed v timed next value if v time timelimit e size prev next next next get else break else break if e 0 setfirst prev 
long timelimit scheduler now unit maxage node prev get node next prev get int e 0 for if size 1 timed v timed next value if v time timelimit e size prev next next next get else break else break if e 0 setfirst prev 
long timelimit scheduler now unit maxage node prev get node next prev get for if next null break timed v timed next value if notificationlite iscomplete v value notificationlite iserror v value break if v time timelimit prev next next next get else break return prev 
return new 16 
srw setresource r 
return new buffersize eagertruncate 
return new buffersize maxage unit scheduler eagertruncate 
for replayobserver t r curr get if r null replaybuffer t buf bufferfactory call replayobserver t u new replayobserver buf curr if curr compareandset null u continue r u innerdisposable t inner new innerdisposable r child child onsubscribe inner r add inner if inner isdisposed r remove inner return r buffer replay inner break 
u co observablesource r observable try co objects requirenonnull connectablefactory get the connectablefactory returned a null observable objects requirenonnull selector apply co the selector returned a null observablesource catch throwable e exceptions throwiffatal e emptydisposable error e child return final r srw new child observable subscribe srw co connect new disposeconsumer srw 
d resource try resource resourcesupplier get catch throwable e exceptions throwiffatal e emptydisposable error e observer return observablesource extends t source try source objects requirenonnull sourcesupplier apply resource the sourcesupplier returned a null observablesource catch throwable e exceptions throwiffatal e try disposer accept resource catch throwable ex exceptions throwiffatal ex emptydisposable error new compositeexception e ex observer return emptydisposable error e observer return usingobserver t d us new usingobserver observer resource disposer eager source subscribe us 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
if eager if compareandset false true try disposer accept resource catch throwable e exceptions throwiffatal e t new compositeexception t e downstream onerror t else downstream onerror t disposeresource 
if eager if compareandset false true try disposer accept resource catch throwable e exceptions throwiffatal e downstream onerror e return downstream oncomplete else downstream oncomplete disposeresource 
if eager disposeresource upstream dispose upstream disposablehelper disposed else upstream dispose upstream disposablehelper disposed disposeresource 
return get 
if compareandset false true try disposer accept resource catch throwable e exceptions throwiffatal e rxjavaplugins onerror e 
source subscribe new takeobserver observer limit 
if disposablehelper validate this upstream d upstream d if remaining 0 done true d dispose emptydisposable complete downstream else downstream onsubscribe this 
if done rxjavaplugins onerror t return done true upstream dispose downstream onerror t 
if done done true upstream dispose downstream oncomplete 
upstream dispose 
return upstream isdisposed 
t d new observer observer onsubscribe d if d isdisposed return t value try value exceptionhelper nullcheck supplier get supplier returned a null value catch throwable e exceptions throwiffatal e if d isdisposed observer onerror e else rxjavaplugins onerror e return d complete value 
return exceptionhelper nullcheck supplier get the supplier returned a null value 
source subscribe new concatwithobserver observer other 
if disposablehelper setonce this d incompletable downstream onsubscribe this 
downstream onerror e 
if incompletable downstream oncomplete else incompletable true disposablehelper replace this null completablesource cs other other null cs subscribe this 
disposablehelper dispose this 
return disposablehelper isdisposed get 
createemitter t parent new createemitter observer observer onsubscribe parent try source subscribe parent catch throwable ex exceptions throwiffatal ex parent onerror ex 
if tryonerror t rxjavaplugins onerror t 
if t null t exceptionhelper onerror called with a null throwable if isdisposed try observer onerror t finally dispose return true return false 
if isdisposed try observer oncomplete finally dispose 
disposablehelper set this d 
setdisposable new c 
return new serializedemitter this 
disposablehelper dispose this 
return disposablehelper isdisposed get 
return string format s s getclass getsimplename super tostring 
if tryonerror t rxjavaplugins onerror t 
if done emitter isdisposed return false if t null t exceptionhelper onerror called with a null throwable if errors tryaddthrowable t done true drain return true return false 
if done emitter isdisposed return done true drain 
if getandincrement 0 drainloop 
observableemitter t e emitter spsclinkedarrayqueue t q queue atomicthrowable errors this errors int missed 1 for for if e isdisposed q clear return if errors get null q clear errors tryterminateconsumer e return boolean d done t v q poll boolean empty v null if d empty e oncomplete return if empty break e onnext v missed addandget missed if missed 0 break 
emitter setdisposable d 
emitter setcancellable c 
return emitter isdisposed 
return this 
return emitter tostring 
source subscribe child if clients incrementandget numberofobservers source connect connection 
source subscribe new t time unit scheduler buffersize delayerror 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
error t done true drain 
done true drain 
if cancelled cancelled true upstream dispose if getandincrement 0 queue clear 
return cancelled 
if getandincrement 0 return int missed 1 final observer super t a downstream final spsclinkedarrayqueue object q queue final boolean delayerror this delayerror final timeunit unit this unit final scheduler scheduler this scheduler final long time this time for for if cancelled queue clear return boolean d done long ts long q peek boolean empty ts null long now scheduler now unit if empty ts now time empty true if d if delayerror if empty throwable e error if e null a onerror e else a oncomplete return else throwable e error if e null queue clear a onerror e return else if empty a oncomplete return if empty break q poll suppresswarnings unchecked t v t q poll a onnext v missed addandget missed if missed 0 break 
r seed try seed objects requirenonnull seedsupplier get the seedsupplier returned a null value catch throwable ex exceptions throwiffatal ex emptydisposable error ex observer return source subscribe new reduceseedobserver observer reducer seed 
source subscribe new anyobserver t predicate 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done done true downstream onnext false downstream oncomplete 
upstream dispose 
return upstream isdisposed 
source subscribe new skipobserver observer n 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
downstream onerror t 
downstream oncomplete 
upstream dispose 
return upstream isdisposed 
source subscribe new concatwithobserver observer other 
if disposablehelper setonce this d inmaybe downstream onsubscribe this 
downstream onerror e 
if inmaybe downstream oncomplete else inmaybe true disposablehelper replace this null maybesource extends t ms other other null ms subscribe this 
disposablehelper dispose this 
return disposablehelper isdisposed get 
source subscribe new observer mapper 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
if upstream disposablehelper disposed rxjavaplugins onerror e return upstream disposablehelper disposed downstream onerror e 
if upstream disposablehelper disposed return upstream disposablehelper disposed downstream oncomplete 
return upstream isdisposed 
upstream dispose upstream disposablehelper disposed 
source subscribe new takelastoneobserver observer 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
value null downstream onerror t 
emit 
t v value if v null value null downstream onnext v downstream oncomplete 
value null upstream dispose 
return upstream isdisposed 
equalcoordinator t ec new equalcoordinator observer buffersize first second comparer observer onsubscribe ec ec subscribe 
equalobserver t as observers first subscribe as 0 second subscribe as 1 
if cancelled cancelled true resources dispose if getandincrement 0 equalobserver t as observers as 0 queue clear as 1 queue clear 
return cancelled 
cancelled true q1 clear q2 clear 
if getandincrement 0 return int missed 1 equalobserver t as observers final equalobserver t observer1 as 0 final spsclinkedarrayqueue t q1 observer1 queue final equalobserver t observer2 as 1 final spsclinkedarrayqueue t q2 observer2 queue for for if cancelled q1 clear q2 clear return boolean d1 observer1 done if d1 throwable e observer1 error if e null cancel q1 q2 downstream onerror e return boolean d2 observer2 done if d2 throwable e observer2 error if e null cancel q1 q2 downstream onerror e return if v1 null v1 q1 poll boolean e1 v1 null if v2 null v2 q2 poll boolean e2 v2 null if d1 d2 e1 e2 downstream onnext true downstream oncomplete return if d1 d2 e1 e2 cancel q1 q2 downstream onnext false downstream oncomplete return if e1 e2 boolean c try c comparer test v1 v2 catch throwable ex exceptions throwiffatal ex cancel q1 q2 downstream onerror ex return if c cancel q1 q2 downstream onnext false downstream oncomplete return v1 null v2 null if e1 e2 break missed addandget missed if missed 0 break 
parent setdisposable d index 
error t done true parent drain 
done true parent drain 
if other null timeoutobserver t parent new timeoutobserver observer itemtimeoutindicator observer onsubscribe parent parent startfirsttimeout source subscribe parent else t parent new observer itemtimeoutindicator other observer onsubscribe parent parent startfirsttimeout source subscribe parent 
disposablehelper setonce upstream d 
if null timeoutconsumer consumer new timeoutconsumer 0l this if task replace consumer subscribe consumer 
if getandset long max value long max value task dispose downstream onerror t else rxjavaplugins onerror t 
if getandset long max value long max value task dispose downstream oncomplete 
disposablehelper dispose upstream task dispose 
return disposablehelper isdisposed upstream get 
disposablehelper setonce upstream d 
if null timeoutconsumer consumer new timeoutconsumer 0l this if task replace consumer subscribe consumer 
if index getandset long max value long max value task dispose downstream onerror t task dispose else rxjavaplugins onerror t 
if index getandset long max value long max value task dispose downstream oncomplete task dispose 
disposablehelper dispose upstream disposablehelper dispose this task dispose 
return disposablehelper isdisposed get 
disposablehelper setonce this d 
disposable upstream get if upstream disposablehelper disposed upstream dispose lazyset disposablehelper disposed parent ontimeout idx 
if get disposablehelper disposed lazyset disposablehelper disposed parent ontimeouterror idx t else rxjavaplugins onerror t 
if get disposablehelper disposed lazyset disposablehelper disposed parent ontimeout idx 
disposablehelper dispose this 
return disposablehelper isdisposed this get 
return source 
final blockingqueue object queue new linkedblockingqueue blockingobserver t bs new blockingobserver queue observer onsubscribe bs o subscribe bs for if bs isdisposed break object v queue poll if v null try v queue take catch interruptedexception ex bs dispose observer onerror ex return if bs isdisposed v blockingobserver terminated notificationlite acceptfull v observer break 
callback new lambdaobserver t ls new lambdaobserver functions emptyconsumer callback callback functions emptyconsumer o subscribe ls blockinghelper awaitforcomplete callback ls throwable e callback error if e null throw exceptionhelper wraporthrow e 
objects requirenonnull onnext onnext is null objects requirenonnull onerror onerror is null objects requirenonnull oncomplete oncomplete is null subscribe o new lambdaobserver t onnext onerror oncomplete functions emptyconsumer 
source subscribe new elementatobserver t index defaultvalue 
return rxjavaplugins onassembly new observableelementat source index defaultvalue true 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream dispose 
return upstream isdisposed 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done done true t v defaultvalue if v null downstream onsuccess v else downstream onerror new 
source subscribe new observer timeout unit scheduler createworker emitlast 
if disposablehelper validate upstream d upstream d downstream onsubscribe this 
error t done true drain 
done true drain 
cancelled true upstream dispose worker dispose if getandincrement 0 latest lazyset null 
return cancelled 
timerfired true drain 
if getandincrement 0 return int missed 1 atomicreference t latest this latest observer super t downstream this downstream for for if cancelled latest lazyset null return boolean d done if d error null latest lazyset null downstream onerror error worker dispose return t v latest get boolean empty v null if d v latest getandset null if empty emitlast downstream onnext v downstream oncomplete worker dispose return if empty if timerfired timerrunning false timerfired false break if timerrunning timerfired v latest getandset null downstream onnext v timerfired false timerrunning true worker schedule this timeout unit else break missed addandget missed if missed 0 break 
source subscribe new reduceobserver observer reducer 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
if done rxjavaplugins onerror e return done true value null downstream onerror e 
if done return done true t v value value null if v null downstream onsuccess v else downstream oncomplete 
upstream dispose 
return upstream isdisposed 
emptydisposable complete o 
return null 
source subscribe new observer keyselector comparer 
for t v qd poll if v null return null k key keyselector apply v if hasvalue hasvalue true last key return v if comparer test last key last key return v last key 
if timespan timeskip if maxsize long max value source subscribe new downstream timespan unit scheduler buffersize return source subscribe new downstream timespan unit scheduler buffersize maxsize return source subscribe new windowskipobserver downstream timespan timeskip unit scheduler createworker buffersize 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this createfirstwindow 
error t done true drain 
done true drain 
if downstreamcancelled compareandset false true windowdone 
return downstreamcancelled get 
if windowcount decrementandget 0 cleanupresources upstream dispose upstreamcancelled true drain 
if downstreamcancelled get windowcount getandincrement window unicastsubject create buffersize windowrunnable emitted 1 t intercept new window downstream onnext intercept timer replace scheduler this timespan timespan unit if intercept tryabandon window oncomplete 
queue offer next window drain 
if getandincrement 0 return final simpleplainqueue object queue this queue final observer super observable t downstream this downstream unicastsubject t window this window int missed 1 for if upstreamcancelled queue clear window null this window null else boolean isdone done object o queue poll boolean isempty o null if isdone isempty throwable ex error if ex null if window null window onerror ex downstream onerror ex else if window null window oncomplete downstream oncomplete cleanupresources upstreamcancelled true continue else if isempty if o next window if window null window oncomplete window null this window null if downstreamcancelled get timer dispose else emitted windowcount getandincrement window unicastsubject create buffersize windowrunnable this window window t intercept new window downstream onnext intercept if intercept tryabandon window oncomplete else if window null suppresswarnings unchecked t item t o window onnext item continue missed addandget missed if missed 0 break 
timer dispose 
windowdone 
if downstreamcancelled get emitted 1 windowcount getandincrement window unicastsubject create buffersize this t intercept new window downstream onnext intercept runnable boundarytask new this 1l if timer replace worker scheduleperiodically boundarytask timespan timespan unit else timer replace scheduler boundarytask timespan timespan unit if intercept tryabandon window oncomplete 
windowdone 
timer dispose worker w worker if w null w dispose 
if getandincrement 0 return int missed 1 final simpleplainqueue object queue this queue final observer super observable t downstream this downstream unicastsubject t window this window for if upstreamcancelled queue clear window null this window null else boolean isdone done object o queue poll boolean isempty o null if isdone isempty throwable ex error if ex null if window null window onerror ex downstream onerror ex else if window null window oncomplete downstream oncomplete cleanupresources upstreamcancelled true continue else if isempty if o instanceof boundary o if boundary index emitted this count 0 window createnewwindow window else if window null suppresswarnings unchecked t item t o window onnext item long count this count 1 if count maxsize this count 0 window createnewwindow window else this count count continue missed addandget missed if missed 0 break 
if window null window oncomplete window null if downstreamcancelled get cleanupresources else long emitted this emitted this emitted emitted windowcount getandincrement window unicastsubject create buffersize this this window window t intercept new window downstream onnext intercept if timer update worker scheduleperiodically new this emitted timespan timespan unit if intercept tryabandon window oncomplete return window 
parent boundary this 
if downstreamcancelled get emitted 1 windowcount getandincrement unicastsubject t window unicastsubject create buffersize this windows add window t intercept new window downstream onnext intercept worker schedule new this false timespan unit worker scheduleperiodically new this true timeskip timeskip unit if intercept tryabandon window oncomplete windows remove window 
worker dispose 
if getandincrement 0 return int missed 1 final simpleplainqueue object queue this queue final observer super observable t downstream this downstream final list unicastsubject t windows this windows for if upstreamcancelled queue clear windows clear else boolean isdone done object o queue poll boolean isempty o null if isdone isempty throwable ex error if ex null for unicastsubject t window windows window onerror ex downstream onerror ex else for unicastsubject t window windows window oncomplete downstream oncomplete cleanupresources upstreamcancelled true continue else if isempty if o window open if downstreamcancelled get long emitted this emitted this emitted emitted windowcount getandincrement unicastsubject t window unicastsubject create buffersize this windows add window t intercept new window downstream onnext intercept worker schedule new this false timespan unit if intercept tryabandon window oncomplete else if o window close if windows isempty windows remove 0 oncomplete else suppresswarnings unchecked t item t o for unicastsubject t window windows window onnext item continue missed addandget missed if missed 0 break 
windowdone 
parent boundary isopen 
return source parallelism 
upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done done true downstream oncomplete 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done done true downstream oncomplete 
return parallelism 
if subscriptionhelper validate this upstream s this upstream s if s instanceof queuesubscription suppresswarnings unchecked queuesubscription t qs queuesubscription t s int m qs requestfusion queuesubscription any queuesubscription boundary if m queuesubscription sync sourcemode m queue qs done true setupsubscribers drain return else if m queuesubscription async sourcemode m queue qs setupsubscribers s request prefetch return queue new spscarrayqueue prefetch setupsubscribers s request prefetch 
subscriber super t subs subscribers final int m subs length for int i 0 i m i subscribercount lazyset i 1 subs i onsubscribe new railsubscription i m 
if requests compareandset m j 0l 1l paralleldispatcher this cancel m m 
error t done true drain 
done true drain 
int missed 1 simplequeue t q queue subscriber super t a this subscribers atomiclongarray r this requests long e this emissions int n e length int idx index int consumed produced for int notready 0 for if cancelled q clear return boolean d done if d throwable ex error if ex null q clear for subscriber super t s a s onerror ex return boolean empty q isempty if d empty for subscriber super t s a s oncomplete return if empty break long requestatindex r get idx long emissionatindex e idx if requestatindex emissionatindex r get n idx 0 t v try v q poll catch throwable ex exceptions throwiffatal ex upstream cancel for subscriber super t s a s onerror ex return if v null break a idx onnext v e idx emissionatindex 1 int c consumed if c limit consumed 0 upstream request c notready 0 else notready idx if idx n idx 0 if notready n break int w get if w missed index idx produced consumed missed addandget missed if missed 0 break else missed w 
int missed 1 simplequeue t q queue subscriber super t a this subscribers atomiclongarray r this requests long e this emissions int n e length int idx index for int notready 0 for if cancelled q clear return boolean empty q isempty if empty for subscriber super t s a s oncomplete return long requestatindex r get idx long emissionatindex e idx if requestatindex emissionatindex r get n idx 0 t v try v q poll catch throwable ex exceptions throwiffatal ex upstream cancel for subscriber super t s a s onerror ex return if v null for subscriber super t s a s oncomplete return a idx onnext v e idx emissionatindex 1 notready 0 else notready idx if idx n idx 0 if notready n break int w get if w missed index idx missed addandget missed if missed 0 break else missed w 
if getandincrement 0 return if sourcemode queuesubscription sync drainsync else drainasync 
return source parallelism 
try parent oncancel run catch throwable ex exceptions throwiffatal ex rxjavaplugins onerror ex upstream cancel 
if subscriptionhelper validate this upstream s this upstream s try parent onsubscribe accept s catch throwable ex exceptions throwiffatal ex s cancel downstream onsubscribe emptysubscription instance onerror ex return downstream onsubscribe this 
if done rxjavaplugins onerror t return done true try parent onerror accept t catch throwable ex exceptions throwiffatal ex t new compositeexception t ex downstream onerror t try parent onafterterminated run catch throwable ex exceptions throwiffatal ex rxjavaplugins onerror ex 
if done done true try parent oncomplete run catch throwable ex exceptions throwiffatal ex downstream onerror ex return downstream oncomplete try parent onafterterminated run catch throwable ex exceptions throwiffatal ex rxjavaplugins onerror ex 
return source parallelism 
upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
return source parallelism 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true collection null downstream onerror t 
if done return done true c c collection collection null complete c 
super cancel upstream cancel 
return source parallelism 
upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done done true downstream oncomplete 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done done true downstream oncomplete 
return source parallelism 
t parent new s source parallelism comparator s onsubscribe parent source subscribe parent subscribers 
if cancelled cancelled true cancelall if getandincrement 0 arrays fill lists null 
for t s subscribers s cancel 
if error compareandset null e drain else if e error get rxjavaplugins onerror e 
if getandincrement 0 return int missed 1 subscriber super t a downstream list t lists this lists int indexes this indexes int n indexes length for long r requested get long e 0l while e r if cancelled arrays fill lists null return throwable ex error get if ex null cancelall arrays fill lists null a onerror ex return t min null int minindex 1 for int i 0 i n i list t list lists i int index indexes i if list size index if min null min list get index minindex i else t b list get index boolean smaller try smaller comparator compare min b 0 catch throwable exc exceptions throwiffatal exc cancelall arrays fill lists null if error compareandset null exc rxjavaplugins onerror exc a onerror error get return if smaller min b minindex i if min null arrays fill lists null a oncomplete return a onnext min indexes minindex e if cancelled arrays fill lists null return throwable ex error get if ex null cancelall arrays fill lists null a onerror ex return boolean empty true for int i 0 i n i if indexes i lists i size empty false break if empty arrays fill lists null a oncomplete return if e 0 backpressurehelper produced requested e missed addandget missed if missed 0 break 
subscriptionhelper setonce this s long max value 
parent innernext t index 
parent innererror t 
$EMPTY$
subscriptionhelper cancel this 
joinsubscriptionbase t parent if delayerrors parent new s source parallelism prefetch else parent new joinsubscription s source parallelism prefetch s onsubscribe parent source subscribe parent subscribers 
if cancelled cancelled true cancelall if getandincrement 0 cleanup 
for joininnersubscriber t s subscribers s cancel 
for joininnersubscriber t s subscribers s queue null 
if errors compareandset null e cancelall drain else if e errors get rxjavaplugins onerror e 
done decrementandget drain 
if getandincrement 0 return drainloop 
int missed 1 joininnersubscriber t s this subscribers int n s length subscriber super t a this downstream for long r requested get long e 0 middle while e r if cancelled cleanup return throwable ex errors get if ex null cleanup a onerror ex return boolean d done get 0 boolean empty true for int i 0 i s length i joininnersubscriber t inner s i simpleplainqueue t q inner queue if q null t v q poll if v null empty false a onnext v inner requestone if e r break middle if d empty a oncomplete return if empty break if e r if cancelled cleanup return throwable ex errors get if ex null cleanup a onerror ex return boolean d done get 0 boolean empty true for int i 0 i n i joininnersubscriber t inner s i simplequeue t q inner queue if q null q isempty empty false break if d empty a oncomplete return if e 0 backpressurehelper produced requested e missed addandget missed if missed 0 break 
if errors e done decrementandget drain 
done decrementandget drain 
if getandincrement 0 return drainloop 
int missed 1 joininnersubscriber t s this subscribers int n s length subscriber super t a this downstream for long r requested get long e 0 middle while e r if cancelled cleanup return boolean d done get 0 boolean empty true for int i 0 i n i joininnersubscriber t inner s i simpleplainqueue t q inner queue if q null t v q poll if v null empty false a onnext v inner requestone if e r break middle if d empty errors tryterminateconsumer a return if empty break if e r if cancelled cleanup return boolean d done get 0 boolean empty true for int i 0 i n i joininnersubscriber t inner s i simplequeue t q inner queue if q null q isempty empty false break if d empty errors tryterminateconsumer a return if e 0 backpressurehelper produced requested e missed addandget missed if missed 0 break 
subscriptionhelper setonce this s prefetch 
parent onerror t 
parent oncomplete 
long p produced 1 if p limit produced 0 get request p else produced p 
return subscriptionhelper cancel this 
simpleplainqueue t q queue if q null q new spscarrayqueue prefetch this queue q return q 
return source parallelism 
return source parallelism 
upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
t parent new s source parallelism reducer s onsubscribe parent source subscribe parent subscribers 
for t inner subscribers inner cancel 
if error compareandset null ex cancel downstream onerror ex else if ex error get rxjavaplugins onerror ex 
subscriptionhelper setonce this s long max value 
if done rxjavaplugins onerror t return done true parent innererror t 
if done done true parent innercomplete value 
subscriptionhelper cancel this 
for int acquired get if acquired 2 return 1 if compareandset acquired acquired 1 return acquired 
return releaseindex incrementandget 2 
return sources length 
return source parallelism 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true accumulator null downstream onerror t 
if done done true r a accumulator accumulator null complete a 
super cancel upstream cancel 
return source parallelism 
upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
return source parallelism 
if done rxjavaplugins onerror t return error t done true schedule 
if done return done true schedule 
if cancelled cancelled true upstream cancel worker dispose if getandincrement 0 queue clear 
if getandincrement 0 worker schedule this 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request prefetch 
int missed 1 int c consumed spscarrayqueue t q queue subscriber super t a downstream int lim limit for long r requested get long e 0l while e r if cancelled q clear return boolean d done if d throwable ex error if ex null q clear a onerror ex worker dispose return t v q poll boolean empty v null if d empty a oncomplete worker dispose return if empty break a onnext v e int p c if p lim c 0 upstream request p if e r if cancelled q clear return if done throwable ex error if ex null q clear a onerror ex worker dispose return if q isempty a oncomplete worker dispose return if e 0l r long max value requested addandget e int w get if w missed consumed c missed addandget missed if missed 0 break else missed w 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request prefetch 
int missed 1 int c consumed spscarrayqueue t q queue super t a downstream int lim limit for long r requested get long e 0l while e r if cancelled q clear return boolean d done if d throwable ex error if ex null q clear a onerror ex worker dispose return t v q poll boolean empty v null if d empty a oncomplete worker dispose return if empty break if a tryonnext v e int p c if p lim c 0 upstream request p if e r if cancelled q clear return if done throwable ex error if ex null q clear a onerror ex worker dispose return if q isempty a oncomplete worker dispose return if e 0l backpressurehelper produced requested e consumed c missed addandget missed if missed 0 break 
return source parallelism 
source subscribe new elementatsubscriber observer index defaultvalue 
return rxjavaplugins onassembly new flowableelementat source index defaultvalue true 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request index 1 
if done rxjavaplugins onerror t return done true upstream subscriptionhelper cancelled downstream onerror t 
upstream subscriptionhelper cancelled if done done true t v defaultvalue if v null downstream onsuccess v else downstream onerror new 
upstream cancel upstream subscriptionhelper cancelled 
return upstream subscriptionhelper cancelled 
source subscribe new lastsubscriber observer 
upstream cancel upstream subscriptionhelper cancelled 
return upstream subscriptionhelper cancelled 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
upstream subscriptionhelper cancelled item null downstream onerror t 
upstream subscriptionhelper cancelled t v item if v null item null downstream onsuccess v else downstream oncomplete 
source subscribe new skipsubscriber s n 
if subscriptionhelper validate this upstream s long n remaining this upstream s downstream onsubscribe this s request n 
downstream onerror t 
downstream oncomplete 
upstream cancel 
source subscribe new s time unit scheduler buffersize delayerror 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
error t done true drain 
done true drain 
if cancelled cancelled true upstream cancel if getandincrement 0 queue clear 
if getandincrement 0 return int missed 1 final subscriber super t a downstream final spsclinkedarrayqueue object q queue final boolean delayerror this delayerror final timeunit unit this unit final scheduler scheduler this scheduler final long time this time for long r requested get long e 0l while e r boolean d done long ts long q peek boolean empty ts null long now scheduler now unit if empty ts now time empty true if checkterminated d empty a delayerror return if empty break q poll suppresswarnings unchecked t v t q poll a onnext v e if e 0l backpressurehelper produced requested e missed addandget missed if missed 0 break 
tleft tright tleftend trightend r parent new s leftend rightend resultselector s onsubscribe parent leftrightsubscriber left new leftrightsubscriber parent true parent disposables add left leftrightsubscriber right new leftrightsubscriber parent false parent disposables add right source subscribe left other subscribe right 
if cancelled return cancelled true cancelall if getandincrement 0 queue clear 
disposables dispose 
throwable ex exceptionhelper terminate error for unicastprocessor tright up lefts values up onerror ex lefts clear rights clear a onerror ex 
exceptions throwiffatal exc exceptionhelper addthrowable error exc q clear cancelall errorall a 
if getandincrement 0 return int missed 1 spsclinkedarrayqueue object q queue subscriber super r a downstream for for if cancelled q clear return throwable ex error get if ex null q clear cancelall errorall a return boolean d active get 0 integer mode integer q poll boolean empty mode null if d empty for unicastprocessor up lefts values up oncomplete lefts clear rights clear disposables dispose a oncomplete return if empty break object val q poll if mode left value suppresswarnings unchecked tleft left tleft val unicastprocessor tright up unicastprocessor create int idx leftindex lefts put idx up publisher tleftend p try p objects requirenonnull leftend apply left the leftend returned a null publisher catch throwable exc fail exc a q return end new this true idx disposables add end p subscribe end ex error get if ex null q clear cancelall errorall a return r w try w objects requirenonnull resultselector apply left up the resultselector returned a null value catch throwable exc fail exc a q return if requested get 0l a onnext w backpressurehelper produced requested 1 else fail new could not emit value due to lack of requests a q return for tright right rights values up onnext right else if mode right value suppresswarnings unchecked tright right tright val int idx rightindex rights put idx right publisher trightend p try p objects requirenonnull rightend apply right the rightend returned a null publisher catch throwable exc fail exc a q return end new this false idx disposables add end p subscribe end ex error get if ex null q clear cancelall errorall a return for unicastprocessor tright up lefts values up onnext right else if mode left close end val unicastprocessor tright up lefts remove end index disposables remove end if up null up oncomplete else end val rights remove end index disposables remove end missed addandget missed if missed 0 break 
if exceptionhelper addthrowable error ex active decrementandget drain else rxjavaplugins onerror ex 
if exceptionhelper addthrowable error ex drain else rxjavaplugins onerror ex 
subscriptionhelper cancel this 
return get subscriptionhelper cancelled 
subscriptionhelper setonce this s long max value 
parent innervalue isleft t 
parent innererror t 
parent innercomplete this 
subscriptionhelper cancel this 
return get subscriptionhelper cancelled 
subscriptionhelper setonce this s long max value 
if subscriptionhelper cancel this parent innerclose isleft this 
parent innercloseerror t 
parent innerclose isleft this 
source subscribe new takesubscriber s limit 
t deferred new s s onsubscribe deferred t t try t objects requirenonnull callable call the callable returned a null value catch throwable ex exceptions throwiffatal ex if deferred iscancelled rxjavaplugins onerror ex else s onerror ex return deferred complete t 
return objects requirenonnull callable call the callable returned a null value 
return new simplegenerator consumer 
return new simplebigenerator consumer 
return new itemdelayfunction itemdelay 
subscriber onerror v 
subscriber oncomplete 
return new subscriberonnext subscriber 
return new subscriberonerror subscriber 
return new subscriberoncomplete subscriber 
return new combiner mapper 
return new flatmapintoiterable mapper 
return new replaysupplier parent 
t request long max value 
return parent replay 
return parent replay buffersize eagertruncate 
return parent replay buffersize time unit scheduler eagertruncate 
return parent replay time unit scheduler eagertruncate 
worker worker scheduler createworker if s instanceof source subscribe new super t s worker delayerror prefetch else source subscribe new observeonsubscriber s worker delayerror prefetch 
if done rxjavaplugins onerror t return error t done true tryschedule 
if done done true tryschedule 
if cancelled return cancelled true upstream cancel worker dispose if outputfused getandincrement 0 queue clear 
if getandincrement 0 return worker schedule this 
if outputfused runbackfused else if sourcemode sync runsync else runasync 
queue clear 
return queue isempty 
if subscriptionhelper validate this upstream s this upstream s if s instanceof queuesubscription suppresswarnings unchecked queuesubscription t f queuesubscription t s int m f requestfusion any boundary if m sync sourcemode sync queue f done true downstream onsubscribe this return else if m async sourcemode async queue f downstream onsubscribe this s request prefetch return queue new spscarrayqueue prefetch downstream onsubscribe this s request prefetch 
int missed 1 final subscriber super t a downstream final simplequeue t q queue long e produced for long r requested get while e r t v try v q poll catch throwable ex exceptions throwiffatal ex cancelled true upstream cancel a onerror ex worker dispose return if cancelled return if v null cancelled true a oncomplete worker dispose return a onnext v e if cancelled return if q isempty cancelled true a oncomplete worker dispose return produced e missed addandget missed if missed 0 break 
int missed 1 final subscriber super t a downstream final simplequeue t q queue long e produced for long r requested get while e r boolean d done t v try v q poll catch throwable ex exceptions throwiffatal ex cancelled true upstream cancel q clear a onerror ex worker dispose return boolean empty v null if checkterminated d empty a return if empty break a onnext v e if e limit if r long max value r requested addandget e upstream request e e 0l if e r checkterminated done q isempty a return int w get if missed w produced e missed addandget missed if missed 0 break else missed w 
int missed 1 for if cancelled return boolean d done downstream onnext null if d cancelled true throwable e error if e null downstream onerror e else downstream oncomplete worker dispose return missed addandget missed if missed 0 break 
t v queue poll if v null sourcemode sync long p produced 1 if p limit produced 0 upstream request p else produced p return v 
if subscriptionhelper validate this upstream s this upstream s if s instanceof queuesubscription suppresswarnings unchecked queuesubscription t f queuesubscription t s int m f requestfusion any boundary if m sync sourcemode sync queue f done true downstream onsubscribe this return else if m async sourcemode async queue f downstream onsubscribe this s request prefetch return queue new spscarrayqueue prefetch downstream onsubscribe this s request prefetch 
int missed 1 final super t a downstream final simplequeue t q queue long e produced for long r requested get while e r t v try v q poll catch throwable ex exceptions throwiffatal ex cancelled true upstream cancel a onerror ex worker dispose return if cancelled return if v null cancelled true a oncomplete worker dispose return if a tryonnext v e if cancelled return if q isempty cancelled true a oncomplete worker dispose return produced e missed addandget missed if missed 0 break 
int missed 1 final super t a downstream final simplequeue t q queue long emitted produced long polled consumed for long r requested get while emitted r boolean d done t v try v q poll catch throwable ex exceptions throwiffatal ex cancelled true upstream cancel q clear a onerror ex worker dispose return boolean empty v null if checkterminated d empty a return if empty break if a tryonnext v emitted polled if polled limit upstream request polled polled 0l if emitted r checkterminated done q isempty a return produced emitted consumed polled missed addandget missed if missed 0 break 
int missed 1 for if cancelled return boolean d done downstream onnext null if d cancelled true throwable e error if e null downstream onerror e else downstream oncomplete worker dispose return missed addandget missed if missed 0 break 
t v queue poll if v null sourcemode sync long p consumed 1 if p limit consumed 0 upstream request p else consumed p return v 
source subscribe new observer mapper delayerrors maxconcurrency 
return rxjavaplugins onassembly new source mapper delayerrors maxconcurrency 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this int m maxconcurrency if m integer max value s request long max value else s request m 
if errors e if delayerrors if decrementandget 0 errors tryterminateconsumer downstream else if maxconcurrency integer max value upstream request 1 else disposed true upstream cancel set dispose errors tryterminateconsumer downstream 
if decrementandget 0 errors tryterminateconsumer downstream else if maxconcurrency integer max value upstream request 1 
disposed true upstream cancel set dispose errors 
return set isdisposed 
disposablehelper setonce this d 
innercomplete this 
innererror this e 
disposablehelper dispose this 
return disposablehelper isdisposed get 
source subscribe child if clients incrementandget numberofsubscribers source connect connection 
source subscribe new t 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
downstream onerror t 
downstream oncomplete 
return null 
return true 
$EMPTY$
upstream cancel 
return source 
return rxjavaplugins onassembly new flowablereduce source reducer 
source subscribe new reducesubscriber observer reducer 
upstream cancel done true 
return done 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true t v value if v null downstream onsuccess v else downstream oncomplete 
source subscribe new concatwithsubscriber s other 
disposablehelper setonce otherdisposable d 
downstream onerror t 
if inmaybe downstream oncomplete else inmaybe true upstream subscriptionhelper cancelled maybesource extends t ms other other null ms subscribe this 
super cancel disposablehelper dispose otherdisposable 
source subscribe new skipwhilesubscriber s predicate 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
downstream onerror t 
downstream oncomplete 
upstream cancel 
t parent new s other s onsubscribe parent arbiter source subscribe parent 
arbiter setsubscription s 
downstream onerror t 
if empty empty false other subscribe this else downstream oncomplete 
mostrecentsubscriber t mostrecentsubscriber new mostrecentsubscriber initialvalue source subscribe mostrecentsubscriber return mostrecentsubscriber getiterable 
value notificationlite complete 
value notificationlite error e 
return new iterator 
buf value return notificationlite iscomplete buf 
try if buf null buf value if notificationlite iscomplete buf throw new if notificationlite iserror buf throw exceptionhelper wraporthrow notificationlite geterror buf return notificationlite getvalue buf finally buf null 
throw new read only iterator 
serializedsubscriber t z new serializedsubscriber s flowableprocessor throwable processor unicastprocessor throwable create 8 toserialized publisher when try when objects requirenonnull handler apply processor handler returned a null publisher catch throwable ex exceptions throwiffatal ex emptysubscription error ex s return whenreceiver t throwable receiver new whenreceiver source retrywhensubscriber t subscriber new retrywhensubscriber z processor receiver receiver subscriber subscriber s onsubscribe subscriber when subscribe receiver receiver onnext 0 
again t 
receiver cancel downstream oncomplete 
source subscribe new innersubscriber s predicate 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done done true downstream onerror t else rxjavaplugins onerror t 
if done done true downstream oncomplete 
upstream cancel 
source subscribe new serializedsubscriber s 
source subscribe new s 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
value null downstream onerror t 
t v value if v null complete v else downstream oncomplete 
super cancel upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
error t done true drain 
done true drain 
if cancelled cancelled true upstream cancel if getandincrement 0 current lazyset null 
if getandincrement 0 return final subscriber super r a downstream int missed 1 final atomiclong r requested final atomicreference r q current for long e 0l while e r get boolean d done r v q getandset null boolean empty v null if checkterminated d empty a q return if empty break a onnext v e if e r get checkterminated done q get null a q return if e 0l backpressurehelper produced r e missed addandget missed if missed 0 break 
publisher subscribe s 
serializedsubscriber t serial new serializedsubscriber s if emitlast source subscribe new sampletimedemitlast serial period unit scheduler else source subscribe new sampletimednolast serial period unit scheduler 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this timer replace scheduler this period period unit s request long max value 
canceltimer downstream onerror t 
canceltimer complete 
disposablehelper dispose timer 
canceltimer upstream cancel 
t value getandset null if value null long r requested get if r 0l downstream onnext value backpressurehelper produced requested 1 else cancel downstream onerror new couldn t emit value due to lack of requests 
downstream oncomplete 
emit 
emit if wip decrementandget 0 downstream oncomplete 
if wip incrementandget 2 emit if wip decrementandget 0 downstream oncomplete 
source subscribe new s supplier reducer 
equalcoordinator t parent new equalcoordinator s prefetch comparer s onsubscribe parent parent subscribe first second 
source1 subscribe first source2 subscribe second 
super cancel first cancel second cancel errors if wip getandincrement 0 first clear second clear 
first cancel first clear second cancel second clear 
if wip getandincrement 0 return int missed 1 for simplequeue t q1 first queue simplequeue t q2 second queue if q1 null q2 null for if iscancelled first clear second clear return throwable ex errors get if ex null cancelandclear errors tryterminateconsumer downstream return boolean d1 first done t a v1 if a null try a q1 poll catch throwable exc exceptions throwiffatal exc cancelandclear errors exc errors tryterminateconsumer downstream return v1 a boolean e1 a null boolean d2 second done t b v2 if b null try b q2 poll catch throwable exc exceptions throwiffatal exc cancelandclear errors exc errors tryterminateconsumer downstream return v2 b boolean e2 b null if d1 d2 e1 e2 complete true return if d1 d2 e1 e2 cancelandclear complete false return if e1 e2 break boolean c try c comparer test a b catch throwable exc exceptions throwiffatal exc cancelandclear errors exc errors tryterminateconsumer downstream return if c cancelandclear complete false return v1 null v2 null first request second request else if iscancelled first clear second clear return throwable ex errors get if ex null cancelandclear errors tryterminateconsumer downstream return missed wip addandget missed if missed 0 break 
if errors t drain 
if subscriptionhelper setonce this s if s instanceof queuesubscription suppresswarnings unchecked queuesubscription t qs queuesubscription t s int m qs requestfusion queuesubscription any if m queuesubscription sync sourcemode m queue qs done true parent drain return if m queuesubscription async sourcemode m queue qs s request prefetch return queue new spscarrayqueue prefetch s request prefetch 
parent innererror t 
done true parent drain 
if sourcemode queuesubscription sync long p produced 1 if p limit produced 0 get request p else produced p 
subscriptionhelper cancel this 
simplequeue t sq queue if sq null sq clear 
source subscribe new anysubscriber s predicate 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done done true complete false 
super cancel upstream cancel 
is new s start end s onsubscribe is scheduler sch scheduler if sch instanceof trampolinescheduler worker worker sch createworker is setresource worker worker scheduleperiodically is initialdelay period unit else disposable d sch is initialdelay period unit is setresource d 
disposablehelper dispose resource 
if resource get disposablehelper disposed long r get if r 0l long c count downstream onnext c if c end if resource get disposablehelper disposed downstream oncomplete disposablehelper dispose resource return count c 1 if r long max value decrementandget else downstream onerror new can t deliver value count due to lack of requests disposablehelper dispose resource 
disposablehelper setonce resource d 
if s instanceof source subscribe new t u super u s mapper else source subscribe new mapsubscriber t u s mapper 
t t qs poll return t null objects requirenonnull mapper apply t the mapper function returned a null value null 
t t qs poll return t null objects requirenonnull mapper apply t the mapper function returned a null value null 
source subscribe new s unit scheduler 
if subscriptionhelper validate this upstream s lasttime scheduler now unit this upstream s downstream onsubscribe this 
downstream onerror t 
downstream oncomplete 
upstream cancel 
final serializedsubscriber r serial new serializedsubscriber s final t u r wlf new serial combiner serial onsubscribe wlf other subscribe new wlf source subscribe wlf 
subscriptionhelper deferredsetonce this upstream requested s 
subscriptionhelper cancel other downstream onerror t 
subscriptionhelper cancel other downstream oncomplete 
subscriptionhelper cancel upstream subscriptionhelper cancel other 
return subscriptionhelper setonce other o 
subscriptionhelper cancel upstream downstream onerror e 
if wlf setother s s request long max value 
wlf othererror t 
$EMPTY$
switch errormode case boundary source subscribe new concatmapdelayed s mapper prefetch false scheduler createworker break case end source subscribe new concatmapdelayed s mapper prefetch true scheduler createworker break default source subscribe new concatmapimmediate s mapper prefetch scheduler createworker 
if subscriptionhelper validate this upstream s this upstream s if s instanceof queuesubscription suppresswarnings unchecked queuesubscription t f queuesubscription t s int m f requestfusion queuesubscription any queuesubscription boundary if m queuesubscription sync sourcemode m queue f done true subscribeactual schedule return if m queuesubscription async sourcemode m queue f subscribeactual s request prefetch return queue new spscarrayqueue prefetch subscribeactual s request prefetch 
done true schedule 
active false schedule 
downstream onsubscribe this 
if errors t inner cancel if getandincrement 0 errors tryterminateconsumer downstream worker dispose 
return get 0 compareandset 0 1 
if errors e upstream cancel if getandincrement 0 errors tryterminateconsumer downstream worker dispose 
if cancelled cancelled true inner cancel upstream cancel worker dispose errors 
if wip getandincrement 0 worker schedule this 
for if cancelled return if active boolean d done t v try v queue poll catch throwable e exceptions throwiffatal e upstream cancel errors e errors tryterminateconsumer downstream worker dispose return boolean empty v null if d empty downstream oncomplete worker dispose return if empty publisher extends r p try p objects requirenonnull mapper apply v the mapper returned a null publisher catch throwable e exceptions throwiffatal e upstream cancel errors e errors tryterminateconsumer downstream worker dispose return if sourcemode queuesubscription sync int c consumed 1 if c limit consumed 0 upstream request c else consumed c if p instanceof supplier suppresswarnings unchecked supplier r supplier supplier r p r vr try vr supplier get catch throwable e exceptions throwiffatal e upstream cancel errors e errors tryterminateconsumer downstream worker dispose return if vr null cancelled continue if inner isunbounded if tryenter downstream onnext vr if compareandset 1 0 errors tryterminateconsumer downstream worker dispose return continue else active true inner setsubscription new vr inner else active true p subscribe inner if wip decrementandget 0 break 
downstream onsubscribe this 
if errors t done true schedule 
if errors e if veryend upstream cancel done true active false schedule 
if cancelled cancelled true inner cancel upstream cancel worker dispose errors 
if getandincrement 0 worker schedule this 
for if cancelled return if active boolean d done if d veryend throwable ex errors get if ex null errors tryterminateconsumer downstream worker dispose return t v try v queue poll catch throwable e exceptions throwiffatal e upstream cancel errors e errors tryterminateconsumer downstream worker dispose return boolean empty v null if d empty errors tryterminateconsumer downstream worker dispose return if empty publisher extends r p try p objects requirenonnull mapper apply v the mapper returned a null publisher catch throwable e exceptions throwiffatal e upstream cancel errors e errors tryterminateconsumer downstream worker dispose return if sourcemode queuesubscription sync int c consumed 1 if c limit consumed 0 upstream request c else consumed c if p instanceof supplier suppresswarnings unchecked supplier r supplier supplier r p r vr try vr supplier get catch throwable e exceptions throwiffatal e errors e if veryend upstream cancel errors tryterminateconsumer downstream worker dispose return vr null if vr null cancelled continue if inner isunbounded downstream onnext vr continue else active true inner setsubscription new vr inner else active true p subscribe inner if decrementandget 0 break 
this source subscribe new s ondrop 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
upstream cancel 
source subscribe new s mapper delayerrors maxconcurrency 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this int m maxconcurrency if m integer max value s request long max value else s request maxconcurrency 
active decrementandget if errors t if delayerrors set dispose drain 
active decrementandget drain 
cancelled true upstream cancel set dispose errors 
spsclinkedarrayqueue r current queue get if current null return current current new spsclinkedarrayqueue flowable buffersize if queue compareandset null current return current return queue get 
if getandincrement 0 drainloop 
spsclinkedarrayqueue r q queue get if q null q clear 
int missed 1 subscriber super r a downstream atomicinteger n active atomicreference spsclinkedarrayqueue r qr queue for long r requested get long e 0l while e r if cancelled clear return if delayerrors throwable ex errors get if ex null clear errors tryterminateconsumer a return boolean d n get 0 spsclinkedarrayqueue r q qr get r v q null q poll null boolean empty v null if d empty errors tryterminateconsumer a return if empty break a onnext v e if e r if cancelled clear return if delayerrors throwable ex errors get if ex null clear errors tryterminateconsumer a return boolean d n get 0 spsclinkedarrayqueue r q qr get boolean empty q null q isempty if d empty errors tryterminateconsumer a return if e 0l backpressurehelper produced requested e if maxconcurrency integer max value upstream request e missed addandget missed if missed 0 break 
disposablehelper setonce this d 
innererror this e 
innercomplete this 
return disposablehelper isdisposed get 
disposablehelper dispose this 
source subscribe new s timeout unit scheduler createworker emitlast 
if subscriptionhelper validate upstream s upstream s downstream onsubscribe this s request long max value 
error t done true drain 
done true drain 
cancelled true upstream cancel worker dispose if getandincrement 0 latest lazyset null 
timerfired true drain 
if getandincrement 0 return int missed 1 atomicreference t latest this latest atomiclong requested this requested subscriber super t downstream this downstream for for if cancelled latest lazyset null return boolean d done if d error null latest lazyset null downstream onerror error worker dispose return t v latest get boolean empty v null if d if empty emitlast v latest getandset null long e emitted if e requested get emitted e 1 downstream onnext v downstream oncomplete else downstream onerror new could not emit final value due to lack of requests else latest lazyset null downstream oncomplete worker dispose return if empty if timerfired timerrunning false timerfired false break if timerrunning timerfired v latest getandset null long e emitted if e requested get downstream onnext v emitted e 1 else upstream cancel downstream onerror new could not emit value due to lack of requests worker dispose return timerfired false timerrunning true worker schedule this timeout unit else break missed addandget missed if missed 0 break 
upstream subscribe new subscriberobserver s 
downstream oncomplete 
downstream onerror e 
this upstream d downstream onsubscribe this 
upstream dispose 
if s instanceof source subscribe new super t s onfinally else source subscribe new dofinallysubscriber s onfinally 
if subscriptionhelper validate this upstream s this upstream s if s instanceof queuesubscription this qs queuesubscription t s downstream onsubscribe this 
downstream onerror t runfinally 
downstream oncomplete runfinally 
upstream cancel runfinally 
qs clear 
return qs isempty 
t v qs poll if v null syncfused runfinally return v 
if compareandset 0 1 try onfinally run catch throwable ex exceptions throwiffatal ex rxjavaplugins onerror ex 
if subscriptionhelper validate this upstream s this upstream s if s instanceof queuesubscription this qs queuesubscription t s downstream onsubscribe this 
downstream onerror t runfinally 
downstream oncomplete runfinally 
upstream cancel runfinally 
qs clear 
return qs isempty 
t v qs poll if v null syncfused runfinally return v 
if compareandset 0 1 try onfinally run catch throwable ex exceptions throwiffatal ex rxjavaplugins onerror ex 
final blockingqueue object queue new linkedblockingqueue blockingsubscriber t bs new blockingsubscriber queue source subscribe bs try for if bs iscancelled break object v queue poll if v null if bs iscancelled break blockinghelper verifynonblocking v queue take if bs iscancelled break if v blockingsubscriber terminated notificationlite acceptfull v subscriber break catch interruptedexception e bs cancel subscriber onerror e 
callback new lambdasubscriber t ls new lambdasubscriber functions emptyconsumer callback callback functions request max source subscribe ls blockinghelper awaitforcomplete callback ls throwable e callback error if e null throw exceptionhelper wraporthrow e 
objects requirenonnull onnext onnext is null objects requirenonnull onerror onerror is null objects requirenonnull oncomplete oncomplete is null subscribe o new lambdasubscriber t onnext onerror oncomplete functions request max 
return source 
source subscribe new t observer 
upstream dispose upstream disposablehelper disposed 
if disposablehelper validate this upstream d this upstream d downstream onsubscribe this 
upstream disposablehelper disposed downstream oncomplete 
upstream disposablehelper disposed downstream onerror e 
u coll try coll exceptionhelper nullcheck collectionsupplier get the collectionsupplier returned a null collection catch throwable e exceptions throwiffatal e emptysubscription error e s return source subscribe new tolistsubscriber s coll 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
value null downstream onerror t 
complete value 
super cancel upstream cancel 
r seed try seed objects requirenonnull seedsupplier get the seedsupplier returned a null value catch throwable ex exceptions throwiffatal ex emptydisposable error ex observer return source subscribe new reduceseedobserver observer reducer seed 
iterator u it try it objects requirenonnull other iterator the iterator returned by other is null catch throwable e exceptions throwiffatal e emptysubscription error e t return boolean b try b it hasnext catch throwable e exceptions throwiffatal e emptysubscription error e t return if b emptysubscription complete t return source subscribe new t u v t it zipper 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
exceptions throwiffatal e done true upstream cancel downstream onerror e 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
upstream cancel 
source subscribe new s 
throwable error try error exceptionhelper nullcheck errorsupplier get callable returned a null throwable catch throwable t exceptions throwiffatal t error t emptysubscription error error s 
serializedsubscriber t z new serializedsubscriber s flowableprocessor object processor unicastprocessor create 8 toserialized publisher when try when objects requirenonnull handler apply processor handler returned a null publisher catch throwable ex exceptions throwiffatal ex emptysubscription error ex s return whenreceiver t object receiver new whenreceiver source repeatwhensubscriber t subscriber new repeatwhensubscriber z processor receiver receiver subscriber subscriber s onsubscribe subscriber when subscribe receiver receiver onnext 0 
subscriptionhelper deferredsetonce upstream requested s 
if getandincrement 0 for if upstream get subscriptionhelper cancelled return source subscribe subscriber if decrementandget 0 break 
subscriber cancel subscriber downstream onerror t 
subscriber cancel subscriber downstream oncomplete 
subscriptionhelper cancel upstream 
setsubscription s 
super cancel receiver cancel 
receiver cancel downstream onerror t 
again 0 
if s instanceof s onsubscribe new super t s array else s onsubscribe new arraysubscription s array 
int i index t arr array if i arr length return null index i 1 return objects requirenonnull arr i array element is null 
return index array length 
index array length 
cancelled true 
t arr array int f arr length subscriber super t a downstream for int i index i f i if cancelled return t t arr i if t null a onerror new nullpointerexception the element at index i is null return else a onnext t if cancelled return a oncomplete 
t arr array int f arr length super t a downstream for int i index i f i if cancelled return t t arr i if t null a onerror new nullpointerexception the element at index i is null return else a tryonnext t if cancelled return a oncomplete 
if skip size source subscribe new s size buffersize else if skip size source subscribe new windowskipsubscriber s size skip buffersize else source subscribe new s size skip buffersize 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
processor t t w window if w null window null w onerror t downstream onerror t 
processor t t w window if w null window null w oncomplete downstream oncomplete 
if once compareandset false true run 
if decrementandget 0 upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
processor t t w window if w null window null w onerror t downstream onerror t 
processor t t w window if w null window null w oncomplete downstream oncomplete 
if once compareandset false true run 
if decrementandget 0 upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
for processor t t w windows w onerror t windows clear error t done true drain 
for processor t t w windows w oncomplete windows clear done true drain 
if wip getandincrement 0 return final subscriber super flowable t a downstream final spsclinkedarrayqueue unicastprocessor t q queue int missed 1 outer for if cancelled unicastprocessor t up null while up q poll null up oncomplete else long r requested get long e 0 while e r boolean d done unicastprocessor t t q poll boolean empty t null if cancelled continue outer if checkterminated d empty a q return if empty break t intercept new t a onnext intercept if intercept tryabandon t oncomplete e if e r if cancelled continue if checkterminated done q isempty a q return if e 0l r long max value requested addandget e missed wip addandget missed if missed 0 break 
cancelled true if once compareandset false true run drain 
if decrementandget 0 upstream cancel 
source subscribe new elementatsubscriber s index defaultvalue erroronfewer 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done done true t v defaultvalue if v null if erroronfewer downstream onerror new else downstream oncomplete else complete v 
super cancel upstream cancel 
source subscribe new s mapper delayerrors maxconcurrency 
source subscribe new takewhilesubscriber s predicate 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
upstream cancel 
d resource try resource resourcesupplier get catch throwable e exceptions throwiffatal e emptysubscription error e s return publisher extends t source try source objects requirenonnull sourcesupplier apply resource the sourcesupplier returned a null publisher catch throwable e exceptions throwiffatal e try disposer accept resource catch throwable ex exceptions throwiffatal ex emptysubscription error new compositeexception e ex s return emptysubscription error e s return usingsubscriber t d us new usingsubscriber s resource disposer eager source subscribe us 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if eager throwable innererror null if compareandset false true try disposer accept resource catch throwable e exceptions throwiffatal e innererror e if innererror null downstream onerror new compositeexception t innererror else downstream onerror t else downstream onerror t disposeresource 
if eager if compareandset false true try disposer accept resource catch throwable e exceptions throwiffatal e downstream onerror e return downstream oncomplete else downstream oncomplete disposeresource 
if eager disposeresource upstream cancel upstream subscriptionhelper cancelled else upstream cancel upstream subscriptionhelper cancelled disposeresource 
if compareandset false true try disposer accept resource catch throwable e exceptions throwiffatal e rxjavaplugins onerror e 
source subscribe new s valuesupplier 
t v try v objects requirenonnull valuesupplier apply t the valuesupplier returned a null value catch throwable ex exceptions throwiffatal ex downstream onerror new compositeexception t ex return complete v 
downstream oncomplete 
source subscribe new t 
return rxjavaplugins onassembly new source 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
upstream subscriptionhelper cancelled downstream onerror t 
upstream subscriptionhelper cancelled downstream oncomplete 
upstream cancel upstream subscriptionhelper cancelled 
return upstream subscriptionhelper cancelled 
source subscribe new reducesubscriber s reducer 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if upstream subscriptionhelper cancelled rxjavaplugins onerror t return upstream subscriptionhelper cancelled downstream onerror t 
if upstream subscriptionhelper cancelled return upstream subscriptionhelper cancelled t v value if v null complete v else downstream oncomplete 
super cancel upstream cancel upstream subscriptionhelper cancelled 
u u try u objects requirenonnull initialsupplier get the initial value supplied is null catch throwable e exceptions throwiffatal e emptysubscription error e s return source subscribe new collectsubscriber s u collector 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true complete u 
super cancel upstream cancel 
source subscribe new s 
complete notification createonerror t 
complete notification createoncomplete 
if n isonerror rxjavaplugins onerror n geterror 
subscriptionarbiter sa new subscriptionarbiter false s onsubscribe sa retrybisubscriber t rs new retrybisubscriber s predicate sa source rs subscribenext 
sa setsubscription s 
boolean b try b predicate test retries t catch throwable e exceptions throwiffatal e downstream onerror new compositeexception t e return if b downstream onerror t return subscribenext 
downstream oncomplete 
if getandincrement 0 int missed 1 for if sa iscancelled return long p produced if p 0l produced 0l sa produced p source subscribe this missed addandget missed if missed 0 break 
joinsubscription tleft tright tleftend trightend r parent new joinsubscription s leftend rightend resultselector s onsubscribe parent leftrightsubscriber left new leftrightsubscriber parent true parent disposables add left leftrightsubscriber right new leftrightsubscriber parent false parent disposables add right source subscribe left other subscribe right 
if cancelled return cancelled true cancelall if getandincrement 0 queue clear 
disposables dispose 
throwable ex exceptionhelper terminate error lefts clear rights clear a onerror ex 
exceptions throwiffatal exc exceptionhelper addthrowable error exc q clear cancelall errorall a 
if getandincrement 0 return int missed 1 spsclinkedarrayqueue object q queue subscriber super r a downstream for for if cancelled q clear return throwable ex error get if ex null q clear cancelall errorall a return boolean d active get 0 integer mode integer q poll boolean empty mode null if d empty lefts clear rights clear disposables dispose a oncomplete return if empty break object val q poll if mode left value suppresswarnings unchecked tleft left tleft val int idx leftindex lefts put idx left publisher tleftend p try p objects requirenonnull leftend apply left the leftend returned a null publisher catch throwable exc fail exc a q return end new this true idx disposables add end p subscribe end ex error get if ex null q clear cancelall errorall a return long r requested get long e 0l for tright right rights values r w try w objects requirenonnull resultselector apply left right the resultselector returned a null value catch throwable exc fail exc a q return if e r a onnext w e else exceptionhelper addthrowable error new could not emit value due to lack of requests q clear cancelall errorall a return if e 0l backpressurehelper produced requested e else if mode right value suppresswarnings unchecked tright right tright val int idx rightindex rights put idx right publisher trightend p try p objects requirenonnull rightend apply right the rightend returned a null publisher catch throwable exc fail exc a q return end new this false idx disposables add end p subscribe end ex error get if ex null q clear cancelall errorall a return long r requested get long e 0l for tleft left lefts values r w try w objects requirenonnull resultselector apply left right the resultselector returned a null value catch throwable exc fail exc a q return if e r a onnext w e else exceptionhelper addthrowable error new could not emit value due to lack of requests q clear cancelall errorall a return if e 0l backpressurehelper produced requested e else if mode left close end val lefts remove end index disposables remove end else end val rights remove end index disposables remove end missed addandget missed if missed 0 break 
if exceptionhelper addthrowable error ex active decrementandget drain else rxjavaplugins onerror ex 
if exceptionhelper addthrowable error ex drain else rxjavaplugins onerror ex 
source subscribe new s buffersize unbounded delayerror onoverflow 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
error t done true if outputfused downstream onerror t else drain 
done true if outputfused downstream oncomplete else drain 
if cancelled cancelled true upstream cancel if outputfused getandincrement 0 queue clear 
if getandincrement 0 int missed 1 final simpleplainqueue t q queue final subscriber super t a downstream for if checkterminated done q isempty a return long r requested get long e 0l while e r boolean d done t v q poll boolean empty v null if checkterminated d empty a return if empty break a onnext v e if e r boolean d done boolean empty q isempty if checkterminated d empty a return if e 0l if r long max value requested addandget e missed addandget missed if missed 0 break 
return queue poll 
queue clear 
return queue isempty 
source subscribe new s mapper maxconcurrency prefetch errormode 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request maxconcurrency integer max value long max value maxconcurrency 
if errors t done true drain 
done true drain 
if cancelled return cancelled true upstream cancel errors drainandcancel 
if getandincrement 0 do cancelall while decrementandget 0 
r inner current current null if inner null inner cancel while inner subscribers poll null inner cancel 
if errors e inner setdone if errormode errormode end upstream cancel drain 
inner setdone drain 
if getandincrement 0 return int missed 1 r inner current subscriber super r a downstream errormode em errormode for long r requested get long e 0l if inner null if em errormode end throwable ex errors get if ex null cancelall errors tryterminateconsumer downstream return boolean outerdone done inner subscribers poll if outerdone inner null errors tryterminateconsumer downstream return if inner null current inner boolean continuenextsource false if inner null simplequeue r q inner queue if q null while e r if cancelled cancelall return if em errormode immediate throwable ex errors get if ex null current null inner cancel cancelall errors tryterminateconsumer downstream return boolean d inner isdone r v try v q poll catch throwable ex exceptions throwiffatal ex current null inner cancel cancelall a onerror ex return boolean empty v null if d empty inner null current null upstream request 1 continuenextsource true break if empty break a onnext v e inner request 1l if e r if cancelled cancelall return if em errormode immediate throwable ex errors get if ex null current null inner cancel cancelall errors tryterminateconsumer downstream return boolean d inner isdone boolean empty q isempty if d empty inner null current null upstream request 1 continuenextsource true if e 0l r long max value requested addandget e if continuenextsource continue missed addandget missed if missed 0 break 
source subscribe new takesubscriber s n 
if subscriptionhelper validate this upstream s if remaining 0l s cancel emptysubscription complete downstream else this upstream s downstream onsubscribe this 
if remaining 0l remaining 0l downstream onerror t else rxjavaplugins onerror t 
if remaining 0l remaining 0l downstream oncomplete 
upstream cancel 
source subscribe new s onoverflow strategy buffersize 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return error t done true drain 
done true drain 
cancelled true upstream cancel if getandincrement 0 clear deque 
synchronized dq dq clear 
if getandincrement 0 return int missed 1 deque t dq deque subscriber super t a downstream for long r requested get long e 0l while e r if cancelled clear dq return boolean d done t v synchronized dq v dq poll boolean empty v null if d throwable ex error if ex null clear dq a onerror ex return if empty a oncomplete return if empty break a onnext v e if e r if cancelled clear dq return boolean d done boolean empty synchronized dq empty dq isempty if d throwable ex error if ex null clear dq a onerror ex return if empty a oncomplete return if e 0l backpressurehelper produced requested e missed addandget missed if missed 0 break 
return source 
mergewithsubscriber t parent new mergewithsubscriber subscriber subscriber onsubscribe parent source subscribe parent other subscribe parent otherobserver 
subscriptionhelper deferredsetonce mainsubscription requested s 
disposablehelper dispose otherobserver halfserializer onerror downstream ex this errors 
maindone true if otherdone halfserializer oncomplete downstream this errors 
subscriptionhelper cancel mainsubscription disposablehelper dispose otherobserver errors 
subscriptionhelper cancel mainsubscription halfserializer onerror downstream ex this errors 
otherdone true if maindone halfserializer oncomplete downstream this errors 
disposablehelper setonce this d 
parent othererror e 
parent othercomplete 
subscriptionarbiter sa new subscriptionarbiter false s onsubscribe sa repeatsubscriber t rs new repeatsubscriber s count long max value count 1 long max value sa source rs subscribenext 
sa setsubscription s 
downstream onerror t 
long r remaining if r long max value remaining r 1 if r 0l subscribenext else downstream oncomplete 
if getandincrement 0 int missed 1 for if sa iscancelled return long p produced if p 0l produced 0l sa produced p source subscribe this missed addandget missed if missed 0 break 
multicastprocessor t mp new multicastprocessor prefetch delayerror publisher extends r other try other objects requirenonnull selector apply mp selector returned a null publisher catch throwable ex exceptions throwiffatal ex emptysubscription error ex s return outputcanceller r out new outputcanceller s mp other subscribe out source subscribe mp 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
downstream onerror t processor dispose 
downstream oncomplete processor dispose 
upstream cancel processor dispose 
if subscriptionhelper setonce this upstream s if s instanceof queuesubscription suppresswarnings unchecked queuesubscription t qs queuesubscription t s int m qs requestfusion queuesubscription any if m queuesubscription sync sourcemode m queue qs done true drain return if m queuesubscription async sourcemode m queue qs queuedrainhelper request s prefetch return queue queuedrainhelper createqueue prefetch queuedrainhelper request s prefetch 
if done subscriptionhelper cancel upstream if wip getandincrement 0 simplequeue t q queue if q null q clear 
return upstream get subscriptionhelper cancelled 
if done rxjavaplugins onerror t return error t done true drain 
if done done true drain 
t ms new s this s onsubscribe ms if add ms if ms iscancelled remove ms return drain else throwable ex error if ex null s onerror ex else s oncomplete 
if wip getandincrement 0 return int missed 1 simplequeue t q queue int upstreamconsumed consumed int locallimit limit boolean canrequest sourcemode queuesubscription sync atomicreference t subs subscribers t array subs get outer for int n array length if q null n 0 long r long max value for t ms array long u ms get ms emitted if u long min value if r u r u else n if n 0 r 0 while r 0 if isdisposed q clear return boolean d done if d delayerror throwable ex error if ex null errorall ex return t v try v q poll catch throwable ex exceptions throwiffatal ex subscriptionhelper cancel upstream errorall ex return boolean empty v null if d empty throwable ex error if ex null errorall ex else completeall return if empty break boolean subscriberschange false for t ms array long msr ms get if msr long min value if msr long max value ms emitted ms downstream onnext v else subscriberschange true r if canrequest upstreamconsumed locallimit upstreamconsumed 0 upstream get request locallimit t fresharray subs get if subscriberschange fresharray array array fresharray continue outer if r 0 if isdisposed q clear return boolean d done if d delayerror throwable ex error if ex null errorall ex return if d q isempty throwable ex error if ex null errorall ex else completeall return consumed upstreamconsumed missed wip addandget missed if missed 0 break if q null q queue array subs get 
for t ms subscribers getandset terminated if ms get long min value ms downstream onerror ex 
for t ms subscribers getandset terminated if ms get long min value ms downstream oncomplete 
if getandset long min value long min value parent remove this parent drain 
return get long min value 
if source instanceof supplier t t try t supplier t source get catch throwable ex exceptions throwiffatal ex emptysubscription error ex subscriber return true if t null emptysubscription complete subscriber return true publisher extends r r try r objects requirenonnull mapper apply t the mapper returned a null publisher catch throwable ex exceptions throwiffatal ex emptysubscription error ex subscriber return true if r instanceof supplier r u try u supplier r r get catch throwable ex exceptions throwiffatal ex emptysubscription error ex subscriber return true if u null emptysubscription complete subscriber return true subscriber onsubscribe new scalarsubscription subscriber u else r subscribe subscriber return true return false 
publisher extends r other try other objects requirenonnull mapper apply value the mapper returned a null publisher catch throwable e exceptions throwiffatal e emptysubscription error e s return if other instanceof supplier r u try u supplier r other get catch throwable ex exceptions throwiffatal ex emptysubscription error ex s return if u null emptysubscription complete s return s onsubscribe new scalarsubscription s u else other subscribe s 
source subscribe new s scheduler 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if get rxjavaplugins onerror t return downstream onerror t 
if get downstream oncomplete 
if compareandset false true scheduler scheduledirect new cancellation 
upstream cancel 
iterator extends t it try it source iterator catch throwable e exceptions throwiffatal e emptysubscription error e s return subscribe s it 
boolean hasnext try hasnext it hasnext catch throwable e exceptions throwiffatal e emptysubscription error e s return if hasnext emptysubscription complete s return if s instanceof s onsubscribe new t super t s it else s onsubscribe new iteratorsubscription t s it 
if iterator null return null if once once true else if iterator hasnext return null return objects requirenonnull iterator next iterator next returned a null value 
iterator extends t it this iterator if it null if once it hasnext return false clear return true 
iterator null 
cancelled true 
iterator extends t it this iterator subscriber super t a downstream for if cancelled return t t try t it next catch throwable ex exceptions throwiffatal ex a onerror ex return if cancelled return if t null a onerror new nullpointerexception iterator next returned a null value return else a onnext t if cancelled return boolean b try b it hasnext catch throwable ex exceptions throwiffatal ex a onerror ex return if b if cancelled a oncomplete return 
iterator extends t it this iterator super t a downstream for if cancelled return t t try t it next catch throwable ex exceptions throwiffatal ex a onerror ex return if cancelled return if t null a onerror new nullpointerexception iterator next returned a null value return else a tryonnext t if cancelled return boolean b try b it hasnext catch throwable ex exceptions throwiffatal ex a onerror ex return if b if cancelled a oncomplete return 
mainsubscriber t parent new mainsubscriber child main child onsubscribe parent other subscribe parent other 
main subscribe this 
downstream onerror t 
downstream oncomplete 
subscriptionhelper cancel other subscriptionhelper cancel upstream 
subscriptionhelper deferredsetonce upstream this s 
if subscriptionhelper setonce this s s request long max value 
subscription s get if s subscriptionhelper cancelled lazyset subscriptionhelper cancelled s cancel next 
subscription s get if s subscriptionhelper cancelled downstream onerror t else rxjavaplugins onerror t 
subscription s get if s subscriptionhelper cancelled next 
baseemitter t emitter switch backpressure case missing emitter new missingemitter t break case error emitter new errorasyncemitter t break case drop emitter new dropasyncemitter t break case latest emitter new latestasyncemitter t break default emitter new bufferasyncemitter t buffersize break t onsubscribe emitter try source subscribe emitter catch throwable ex exceptions throwiffatal ex emitter onerror ex 
if tryonerror t rxjavaplugins onerror t 
if emitter iscancelled done return false if t null t exceptionhelper onerror called with a null throwable if errors tryaddthrowable t done true drain return true return false 
if emitter iscancelled done return done true drain 
if getandincrement 0 drainloop 
baseemitter t e emitter simpleplainqueue t q queue atomicthrowable errors this errors int missed 1 for for if e iscancelled q clear return if errors get null q clear errors tryterminateconsumer e return boolean d done t v q poll boolean empty v null if d empty e oncomplete return if empty break e onnext v missed addandget missed if missed 0 break 
emitter setdisposable d 
emitter setcancellable c 
return emitter requested 
return emitter iscancelled 
return this 
return emitter tostring 
completedownstream 
if iscancelled return try downstream oncomplete finally serial dispose 
if e null e exceptionhelper onerror called with a null throwable if signalerror e rxjavaplugins onerror e 
if e null e exceptionhelper tryonerror called with a null throwable return signalerror e 
return errordownstream e 
if iscancelled return false try downstream onerror e finally serial dispose return true 
serial dispose onunsubscribed 
$EMPTY$
return serial isdisposed 
$EMPTY$
serial update d 
setdisposable new c 
return get 
return new serializedemitter this 
return string format s s getclass getsimplename super tostring 
$EMPTY$
onerror new create could not emit value due to lack of requests 
if done iscancelled return false error e done true drain return true 
done true drain 
drain 
if wip getandincrement 0 queue clear 
if wip getandincrement 0 return int missed 1 final subscriber super t a downstream final spsclinkedarrayqueue t q queue for long r get long e 0l while e r if iscancelled q clear return boolean d done t o q poll boolean empty o null if d empty throwable ex error if ex null errordownstream ex else completedownstream return if empty break a onnext o e if e r if iscancelled q clear return boolean d done boolean empty q isempty if d empty throwable ex error if ex null errordownstream ex else completedownstream return if e 0 backpressurehelper produced this e missed wip addandget missed if missed 0 break 
if done iscancelled return false error e done true drain return true 
done true drain 
drain 
if wip getandincrement 0 queue lazyset null 
if wip getandincrement 0 return int missed 1 final subscriber super t a downstream final atomicreference t q queue for long r get long e 0l while e r if iscancelled q lazyset null return boolean d done t o q getandset null boolean empty o null if d empty throwable ex error if ex null errordownstream ex else completedownstream return if empty break a onnext o e if e r if iscancelled q lazyset null return boolean d done boolean empty q get null if d empty throwable ex error if ex null errordownstream ex else completedownstream return if e 0 backpressurehelper produced this e missed wip addandget missed if missed 0 break 
source subscribe new countsubscriber s 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
count 
downstream onerror t 
complete count 
super cancel upstream cancel 
if size skip source subscribe new s size buffersupplier else if skip size source subscribe new s size skip buffersupplier else source subscribe new s size skip buffersupplier 
upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return buffer null done true downstream onerror t 
if done return done true c b buffer buffer null if b null downstream onnext b downstream oncomplete 
upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true buffer null downstream onerror t 
if done return done true c b buffer buffer null if b null downstream onnext b downstream oncomplete 
return cancelled 
cancelled true upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done rxjavaplugins onerror t return done true buffers clear downstream onerror t 
if done return done true long p produced if p 0l backpressurehelper produced this p queuedrainhelper postcomplete downstream buffers this this 
if other null timeoutsubscriber t parent new timeoutsubscriber s itemtimeoutindicator s onsubscribe parent parent startfirsttimeout source subscribe parent else t parent new s itemtimeoutindicator other s onsubscribe parent parent startfirsttimeout source subscribe parent 
subscriptionhelper deferredsetonce upstream requested s 
if null timeoutconsumer consumer new timeoutconsumer 0l this if task replace consumer subscribe consumer 
if getandset long max value long max value task dispose downstream onerror t else rxjavaplugins onerror t 
if getandset long max value long max value task dispose downstream oncomplete 
subscriptionhelper cancel upstream task dispose 
if subscriptionhelper setonce this upstream s setsubscription s 
if null timeoutconsumer consumer new timeoutconsumer 0l this if task replace consumer subscribe consumer 
if index getandset long max value long max value task dispose downstream onerror t task dispose else rxjavaplugins onerror t 
if index getandset long max value long max value task dispose downstream oncomplete task dispose 
super cancel task dispose 
subscriptionhelper setonce this s long max value 
subscription upstream get if upstream subscriptionhelper cancelled upstream cancel lazyset subscriptionhelper cancelled parent ontimeout idx 
if get subscriptionhelper cancelled lazyset subscriptionhelper cancelled parent ontimeouterror idx t else rxjavaplugins onerror t 
if get subscriptionhelper cancelled lazyset subscriptionhelper cancelled parent ontimeout idx 
subscriptionhelper cancel this 
return this get subscriptionhelper cancelled 
mergewithobserver t parent new mergewithobserver subscriber subscriber onsubscribe parent source subscribe parent other subscribe parent otherobserver 
subscriptionhelper setonce mainsubscription s prefetch 
if errors ex disposablehelper dispose otherobserver drain 
maindone true drain 
cancelled true subscriptionhelper cancel mainsubscription disposablehelper dispose otherobserver errors if getandincrement 0 queue null singleitem null 
if errors ex subscriptionhelper cancel mainsubscription drain 
simpleplainqueue t q queue if q null q new spscarrayqueue buffersize queue q return q 
if getandincrement 0 drainloop 
subscriber super t actual this downstream int missed 1 long e emitted int c consumed int lim limit for long r requested get while e r if cancelled singleitem null queue null return if errors get null singleitem null queue null errors tryterminateconsumer downstream return int os otherstate if os other state has value t v singleitem singleitem null otherstate other state consumed or empty os other state consumed or empty actual onnext v e continue boolean d maindone simpleplainqueue t q queue t v q null q poll null boolean empty v null if d empty os other state consumed or empty queue null actual oncomplete return if empty break actual onnext v e if c lim c 0 mainsubscription get request lim if e r if cancelled singleitem null queue null return if errors get null singleitem null queue null errors tryterminateconsumer downstream return boolean d maindone simpleplainqueue t q queue boolean empty q null q isempty if d empty otherstate 2 queue null actual oncomplete return emitted e consumed c missed addandget missed if missed 0 break 
disposablehelper setonce this d 
parent othererror e 
source subscribe new subscriber mapper delayerrors maxconcurrency 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this int m maxconcurrency if m integer max value s request long max value else s request m 
if errors e if delayerrors if decrementandget 0 errors tryterminateconsumer downstream else if maxconcurrency integer max value upstream request 1 else cancelled true upstream cancel set dispose errors tryterminateconsumer downstream 
if decrementandget 0 errors tryterminateconsumer downstream else if maxconcurrency integer max value upstream request 1 
cancelled true upstream cancel set dispose errors 
return null 
return true 
$EMPTY$
disposablehelper setonce this d 
innercomplete this 
innererror this e 
disposablehelper dispose this 
return disposablehelper isdisposed get 
t b parent new subscriber capacityhint subscriber onsubscribe parent parent innernext other subscribe parent boundarysubscriber source subscribe parent 
subscriptionhelper setonce upstream s long max value 
boundarysubscriber dispose if errors e done true drain 
boundarysubscriber dispose done true drain 
if stopwindows compareandset false true boundarysubscriber dispose if windows decrementandget 0 subscriptionhelper cancel upstream 
if windows decrementandget 0 subscriptionhelper cancel upstream 
queue offer next window drain 
subscriptionhelper cancel upstream if errors e done true drain 
subscriptionhelper cancel upstream done true drain 
if getandincrement 0 return int missed 1 subscriber super flowable t downstream this downstream mpsclinkedqueue object queue this queue atomicthrowable errors this errors long emitted this emitted for for if windows get 0 queue clear window null return unicastprocessor t w window boolean d done if d errors get null queue clear throwable ex errors terminate if w null window null w onerror ex downstream onerror ex return object v queue poll boolean empty v null if d empty throwable ex errors terminate if ex null if w null window null w oncomplete downstream oncomplete else if w null window null w onerror ex downstream onerror ex return if empty break if v next window w onnext t v continue if w null window null w oncomplete if stopwindows get w unicastprocessor create capacityhint this window w windows getandincrement if emitted requested get emitted t intercept new w downstream onnext intercept if intercept tryabandon w oncomplete else subscriptionhelper cancel upstream boundarysubscriber dispose errors new could not deliver a window due to lack of requests done true this emitted emitted missed addandget missed if missed 0 break 
if done rxjavaplugins onerror t return done true parent innererror t 
if done return done true parent innercomplete 
timersubscriber ios new timersubscriber s s onsubscribe ios disposable d scheduler scheduledirect ios delay unit ios setresource d 
disposablehelper dispose this 
if get disposablehelper disposed if requested downstream onnext 0l lazyset emptydisposable instance downstream oncomplete else lazyset emptydisposable instance downstream onerror new can t deliver value due to lack of requests 
disposablehelper tryset this d 
t parent new sources delayerror s s onsubscribe parent parent oncomplete 
setsubscription s 
if delayerror list throwable list errors if list null list new arraylist sources length index 1 errors list list add t oncomplete else downstream onerror t 
if wip getandincrement 0 publisher extends t sources this sources int n sources length int i index for if i n list throwable list errors if list null if list size 1 downstream onerror list get 0 else downstream onerror new compositeexception list else downstream oncomplete return publisher extends t p sources i if p null throwable ex new nullpointerexception a publisher entry is null if delayerror list throwable list errors if list null list new arraylist n i 1 errors list list add ex i continue else downstream onerror ex return else long r produced if r 0l produced 0l produced r p subscribe this index i if wip decrementandget 0 break 
this source subscribe new s 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true downstream oncomplete 
upstream cancel 
return new multicastflowable connectablefactory selector 
return create source default unbounded factory 
final atomicreference replaysubscriber t curr new atomicreference publisher t onsubscribe new replaypublisher curr bufferfactory return rxjavaplugins onassembly new flowablereplay onsubscribe source curr bufferfactory 
return source 
onsubscribe subscribe s 
replaysubscriber t conn current get if conn null conn isdisposed current compareandset conn null 
boolean doconnect replaysubscriber t ps for ps current get if ps null ps isdisposed replaybuffer t buf try buf bufferfactory get catch throwable ex exceptions throwiffatal ex throw exceptionhelper wraporthrow ex replaysubscriber t u new replaysubscriber buf current if current compareandset ps u continue ps u doconnect ps shouldconnect get ps shouldconnect compareandset false true break try connection accept ps catch throwable ex exceptions throwiffatal ex if doconnect ps shouldconnect compareandset true false exceptions throwiffatal ex throw exceptionhelper wraporthrow ex if doconnect source subscribe ps 
return subscribers get terminated 
subscribers set terminated current compareandset replaysubscriber this null subscriptionhelper cancel this 
if subscriptionhelper setonce this p managerequests for innersubscription t rp subscribers get buffer replay rp 
if done done true buffer error e for innersubscription t rp subscribers getandset terminated buffer replay rp else rxjavaplugins onerror e 
if done done true buffer complete for innersubscription t rp subscribers getandset terminated buffer replay rp 
atomicinteger m management if m getandincrement 0 return int missed 1 for if isdisposed return subscription p get if p null long alreadyrequested long downstreammaxrequest alreadyrequested for innersubscription t rp subscribers get downstreammaxrequest math max downstreammaxrequest rp totalrequested get long diff downstreammaxrequest alreadyrequested if diff 0l downstreammaxrequest p request diff missed m addandget missed if missed 0 break 
return get cancelled 
dispose 
if getandset cancelled cancelled parent remove this parent managerequests index null 
return u index 
add notificationlite error e size 
add notificationlite complete size 
node head get node next head get if next null throw new empty list size setfirst next 
object o entertransform notificationlite error e true node n new node o index addlast n truncatefinal 
object o entertransform notificationlite complete true node n new node o index addlast n truncatefinal 
node head get if head value null node n new node null 0l n lazyset head get set n 
return value 
trimhead 
node n gethead for node next n get if next null object o next value object v leavetransform o if notificationlite iscomplete v notificationlite iserror v break output add notificationlite t getvalue v n next else break 
return tail value null notificationlite iserror leavetransform tail value 
return tail value null notificationlite iscomplete leavetransform tail value 
return get 
if size limit removefirst 
return timed value value 
long timelimit scheduler now unit maxage node prev get node next prev get int e 0 for if size 1 if size limit e size prev next next next get else timed v timed next value if v time timelimit e size prev next next next get else break else break if e 0 setfirst prev 
long timelimit scheduler now unit maxage node prev get node next prev get int e 0 for if size 1 timed v timed next value if v time timelimit e size prev next next next get else break else break if e 0 setfirst prev 
long timelimit scheduler now unit maxage node prev get node next prev get for if next null break timed v timed next value if notificationlite iscomplete v value notificationlite iserror v value break if v time timelimit prev next next next get else break return prev 
connectableflowable u cf try cf exceptionhelper nullcheck connectablefactory get the connectablefactory returned a null connectableflowable catch throwable e exceptions throwiffatal e emptysubscription error e child return publisher r observable try observable exceptionhelper nullcheck selector apply cf the selector returned a null publisher catch throwable e exceptions throwiffatal e emptysubscription error e child return final r srw new child observable subscribe srw cf connect new disposableconsumer srw 
srw setresource r 
return new buffersize eagertruncate 
return new buffersize maxage unit scheduler eagertruncate 
for replaysubscriber t r curr get if r null replaybuffer t buf try buf bufferfactory get catch throwable ex exceptions throwiffatal ex emptysubscription error ex child return replaysubscriber t u new replaysubscriber buf curr if curr compareandset null u continue r u innersubscription t inner new innersubscription r child child onsubscribe inner r add inner if inner isdisposed r remove inner return r managerequests r buffer replay inner break 
return new 16 
source subscribe new allsubscriber observer predicate 
return rxjavaplugins onassembly new flowableall source predicate 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true upstream subscriptionhelper cancelled downstream onerror t 
if done return done true upstream subscriptionhelper cancelled downstream onsuccess true 
upstream cancel upstream subscriptionhelper cancelled 
return upstream subscriptionhelper cancelled 
source subscribe new s mapper delayerrors maxconcurrency 
s onsubscribe new scalarsubscription s value 
return value 
t qs new subscriber onsubscribe qs if qs isdisposed try run run catch throwable ex exceptions throwiffatal ex if qs isdisposed subscriber onerror ex else rxjavaplugins onerror ex return if qs isdisposed subscriber oncomplete 
run run return null 
u coll try coll exceptionhelper nullcheck collectionsupplier get the collectionsupplier returned a null collection catch throwable e exceptions throwiffatal e emptydisposable error e observer return source subscribe new tolistsubscriber observer coll 
return rxjavaplugins onassembly new flowabletolist source collectionsupplier 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
value null upstream subscriptionhelper cancelled downstream onerror t 
upstream subscriptionhelper cancelled downstream onsuccess value 
upstream cancel upstream subscriptionhelper cancelled 
return upstream subscriptionhelper cancelled 
if s instanceof source subscribe new super t s onnext onerror oncomplete onafterterminate else source subscribe new dooneachsubscriber s onnext onerror oncomplete onafterterminate 
if done rxjavaplugins onerror t return done true boolean relay true try onerror accept t catch throwable e exceptions throwiffatal e downstream onerror new compositeexception t e relay false if relay downstream onerror t try onafterterminate run catch throwable e exceptions throwiffatal e rxjavaplugins onerror e 
if done return try oncomplete run catch throwable e fail e return done true downstream oncomplete try onafterterminate run catch throwable e exceptions throwiffatal e rxjavaplugins onerror e 
t v try v qs poll catch throwable ex exceptions throwiffatal ex try onerror accept ex catch throwable exc exceptions throwiffatal exc throw new compositeexception ex exc throw exceptionhelper exception throwifthrowable ex if v null try try onnext accept v catch throwable ex exceptions throwiffatal ex try onerror accept ex catch throwable exc exceptions throwiffatal exc throw new compositeexception ex exc throw exceptionhelper exception throwifthrowable ex finally onafterterminate run else if sourcemode sync oncomplete run onafterterminate run return v 
if done rxjavaplugins onerror t return done true boolean relay true try onerror accept t catch throwable e exceptions throwiffatal e downstream onerror new compositeexception t e relay false if relay downstream onerror t try onafterterminate run catch throwable e exceptions throwiffatal e rxjavaplugins onerror e 
if done return try oncomplete run catch throwable e fail e return done true downstream oncomplete try onafterterminate run catch throwable e exceptions throwiffatal e rxjavaplugins onerror e 
t v try v qs poll catch throwable ex exceptions throwiffatal ex try onerror accept ex catch throwable exc exceptions throwiffatal exc throw new compositeexception ex exc throw exceptionhelper exception throwifthrowable ex if v null try try onnext accept v catch throwable ex exceptions throwiffatal ex try onerror accept ex catch throwable exc exceptions throwiffatal exc throw new compositeexception ex exc throw exceptionhelper exception throwifthrowable ex finally onafterterminate run else if sourcemode sync oncomplete run onafterterminate run return v 
emptysubscription complete s 
return null 
source subscribe new lastsubscriber observer defaultitem 
upstream cancel upstream subscriptionhelper cancelled 
return upstream subscriptionhelper cancelled 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
upstream subscriptionhelper cancelled item null downstream onerror t 
upstream subscriptionhelper cancelled t v item if v null item null downstream onsuccess v else v defaultitem if v null downstream onsuccess v else downstream onerror new 
source subscribe new observer defaultvalue 
return rxjavaplugins onassembly new flowablesingle source defaultvalue true 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true upstream subscriptionhelper cancelled downstream onerror t 
if done return done true upstream subscriptionhelper cancelled t v value value null if v null v defaultvalue if v null downstream onsuccess v else downstream onerror new 
upstream cancel upstream subscriptionhelper cancelled 
return upstream subscriptionhelper cancelled 
source subscribe new s open closingindicator buffersize 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this open subscribe startsubscriber s request long max value 
startsubscriber cancel resources dispose if error t upstreamdone true drain 
startsubscriber cancel resources dispose upstreamdone true drain 
if downstreamcancelled compareandset false true if windowcount decrementandget 0 upstream cancel startsubscriber cancel resources dispose error upstreamcanceled true drain else startsubscriber cancel 
if windowcount decrementandget 0 upstream cancel startsubscriber cancel resources dispose error upstreamcanceled true drain 
upstream cancel resources dispose if error t upstreamdone true drain 
opendone true drain 
upstream cancel startsubscriber cancel resources dispose if error t upstreamdone true drain 
if getandincrement 0 return int missed 1 final subscriber super flowable t downstream this downstream final simpleplainqueue object queue this queue final list unicastprocessor t windows this windows for if upstreamcanceled queue clear windows clear else boolean isdone upstreamdone object o queue poll boolean isempty o null if isdone if isempty error get null terminatedownstream downstream upstreamcanceled true continue if isempty if o instanceof windowstartitem if downstreamcancelled get long emitted this emitted if requested get emitted this emitted emitted suppresswarnings unchecked b startitem windowstartitem b o item publisher v endsource try endsource objects requirenonnull closingindicator apply startitem the closingindicator returned a null publisher catch throwable ex exceptions throwiffatal ex upstream cancel startsubscriber cancel resources dispose exceptions throwiffatal ex error ex upstreamdone true continue windowcount getandincrement unicastprocessor t newwindow unicastprocessor create buffersize this t v endsubscriber new this newwindow downstream onnext endsubscriber if endsubscriber tryabandon newwindow oncomplete else windows add newwindow resources add endsubscriber endsource subscribe endsubscriber else upstream cancel startsubscriber cancel resources dispose error new flowablewindowtimed emitted upstreamdone true else if o instanceof suppresswarnings unchecked unicastprocessor t w t v o window windows remove w resources delete disposable o w oncomplete else suppresswarnings unchecked t item t o for unicastprocessor t w windows w onnext item continue else if opendone windows size 0 upstream cancel startsubscriber cancel resources dispose terminatedownstream downstream upstreamcanceled true continue missed addandget missed if missed 0 break 
throwable ex error terminate if ex null for unicastprocessor t w windows w oncomplete downstream oncomplete else if ex exceptionhelper terminated for unicastprocessor t w windows w onerror ex downstream onerror ex 
if subscriptionhelper setonce this s s request long max value 
parent openerror t 
parent opencomplete 
subscriptionhelper cancel this 
if subscriptionhelper setonce upstream s s request long max value 
if isdisposed rxjavaplugins onerror t else parent closeerror t 
parent close this 
subscriptionhelper cancel upstream 
return upstream get subscriptionhelper cancelled 
window subscribe s once set true 
return once get once compareandset false true 
t qs new subscriber onsubscribe qs if qs isdisposed try action run catch throwable ex exceptions throwiffatal ex if qs isdisposed subscriber onerror ex else rxjavaplugins onerror ex return if qs isdisposed subscriber oncomplete 
action run return null 
publisher others otherarray int n 0 if others null others new publisher 8 try for publisher p otheriterable if n others length others arrays copyof others n n 1 others n p catch throwable ex exceptions throwiffatal ex emptysubscription error ex s return else n others length if n 0 new flowablemap source new singletonarrayfunc subscribeactual s return t r parent new s combiner n s onsubscribe parent parent subscribe others n source subscribe parent 
subscriptionhelper deferredsetonce this upstream requested s 
if done rxjavaplugins onerror t return done true cancelallbut 1 halfserializer onerror downstream t this error 
if done done true cancelallbut 1 halfserializer oncomplete downstream this error 
subscriptionhelper cancel upstream for s subscribers s dispose 
subscriptionhelper setonce this s long max value 
if hasvalue hasvalue true parent innernext index t 
parent innererror index t 
parent innercomplete index hasvalue 
subscriptionhelper cancel this 
source subscribe new s defaultvalue failonempty 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true downstream onerror t 
if done return done true t v value value null if v null v defaultvalue if v null if failonempty downstream onerror new else downstream oncomplete else complete v 
super cancel upstream cancel 
equalcoordinator t parent new equalcoordinator observer prefetch comparer observer onsubscribe parent parent subscribe first second 
return rxjavaplugins onassembly new first second comparer prefetch 
source1 subscribe first source2 subscribe second 
first cancel second cancel errors if getandincrement 0 first clear second clear 
return first get subscriptionhelper cancelled 
first cancel first clear second cancel second clear 
if getandincrement 0 return int missed 1 for simplequeue t q1 first queue simplequeue t q2 second queue if q1 null q2 null for if isdisposed first clear second clear return throwable ex errors get if ex null cancelandclear errors tryterminateconsumer downstream return boolean d1 first done t a v1 if a null try a q1 poll catch throwable exc exceptions throwiffatal exc cancelandclear errors exc errors tryterminateconsumer downstream return v1 a boolean e1 a null boolean d2 second done t b v2 if b null try b q2 poll catch throwable exc exceptions throwiffatal exc cancelandclear errors exc errors tryterminateconsumer downstream return v2 b boolean e2 b null if d1 d2 e1 e2 downstream onsuccess true return if d1 d2 e1 e2 cancelandclear downstream onsuccess false return if e1 e2 break boolean c try c comparer test a b catch throwable exc exceptions throwiffatal exc cancelandclear errors exc errors tryterminateconsumer downstream return if c cancelandclear downstream onsuccess false return v1 null v2 null first request second request else if isdisposed first clear second clear return throwable ex errors get if ex null cancelandclear errors tryterminateconsumer downstream return missed addandget missed if missed 0 break 
if errors t drain 
source subscribe new anysubscriber observer predicate 
return rxjavaplugins onassembly new flowableany source predicate 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true upstream subscriptionhelper cancelled downstream onerror t 
if done done true upstream subscriptionhelper cancelled downstream onsuccess false 
upstream cancel upstream subscriptionhelper cancelled 
return upstream subscriptionhelper cancelled 
if source instanceof supplier t v try v supplier t source get catch throwable ex exceptions throwiffatal ex emptysubscription error ex s return if v null emptysubscription complete s return iterator extends r it try iterable extends r iterable mapper apply v it iterable iterator catch throwable ex exceptions throwiffatal ex emptysubscription error ex s return flowablefromiterable subscribe s it return source subscribe new s mapper prefetch 
if subscriptionhelper validate this upstream s this upstream s if s instanceof queuesubscription suppresswarnings unchecked queuesubscription t qs queuesubscription t s int m qs requestfusion any if m sync fusionmode m this queue qs done true downstream onsubscribe this return if m async fusionmode m this queue qs downstream onsubscribe this s request prefetch return queue new spscarrayqueue prefetch downstream onsubscribe this s request prefetch 
if done exceptionhelper addthrowable error t done true drain else rxjavaplugins onerror t 
if done return done true drain 
if cancelled cancelled true upstream cancel if getandincrement 0 queue clear 
if getandincrement 0 return final subscriber super r a downstream final simplequeue t q queue final boolean replenish fusionmode sync int missed 1 iterator extends r it current for if it null boolean d done t t try t q poll catch throwable ex exceptions throwiffatal ex upstream cancel exceptionhelper addthrowable error ex ex exceptionhelper terminate error current null q clear a onerror ex return boolean empty t null if checkterminated d empty a q return if t null iterable extends r iterable boolean b try iterable mapper apply t it iterable iterator b it hasnext catch throwable ex exceptions throwiffatal ex upstream cancel exceptionhelper addthrowable error ex ex exceptionhelper terminate error a onerror ex return if b it null consumedone replenish continue current it if it null long r requested get long e 0l while e r if checkterminated done false a q return r v try v objects requirenonnull it next the iterator returned a null value catch throwable ex exceptions throwiffatal ex current null upstream cancel exceptionhelper addthrowable error ex ex exceptionhelper terminate error a onerror ex return a onnext v if checkterminated done false a q return e boolean b try b it hasnext catch throwable ex exceptions throwiffatal ex current null upstream cancel exceptionhelper addthrowable error ex ex exceptionhelper terminate error a onerror ex return if b consumedone replenish it null current null break if e r boolean d done boolean empty q isempty it null if checkterminated d empty a q return if e 0l if r long max value requested addandget e if it null continue missed addandget missed if missed 0 break 
current null queue clear 
return current null queue isempty 
iterator extends r it current for if it null t v queue poll if v null return null it mapper apply v iterator if it hasnext it null continue current it r r objects requirenonnull it next the iterator returned a null value if it hasnext current null return r 
scheduler worker w scheduler createworker final t sos new s w source nonscheduledrequests s onsubscribe sos w schedule sos 
lazyset thread currentthread publisher t src source source null src subscribe this 
if subscriptionhelper setonce this upstream s long r requested getandset 0l if r 0l requestupstream r s 
downstream onerror t worker dispose 
downstream oncomplete worker dispose 
subscriptionhelper cancel upstream worker dispose 
upstream request n 
r r try r objects requirenonnull seedsupplier get the seed supplied is null catch throwable e exceptions throwiffatal e emptysubscription error e s return source subscribe new scanseedsubscriber s accumulator r buffersize 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request prefetch 1 
if done rxjavaplugins onerror t return error t done true drain 
if done return done true drain 
cancelled true upstream cancel if getandincrement 0 queue clear 
if getandincrement 0 return int missed 1 subscriber super r a downstream simpleplainqueue r q queue int lim limit int c consumed for long r requested get long e 0l while e r if cancelled q clear return boolean d done if d throwable ex error if ex null q clear a onerror ex return r v q poll boolean empty v null if d empty a oncomplete return if empty break a onnext v e if c lim c 0 upstream request lim if e r if done throwable ex error if ex null q clear a onerror ex return if q isempty a oncomplete return if e 0l backpressurehelper produced requested e consumed c missed addandget missed if missed 0 break 
publisher extends t sources array int count if sources null count 0 sources new publisher 8 try for publisher extends t p iterable if count sources length publisher extends t b new publisher count count 2 system arraycopy sources 0 b 0 count sources b sources count objects requirenonnull p the iterator returned a null publisher catch throwable ex exceptions throwiffatal ex emptysubscription error ex s return else count sources length if count 0 emptysubscription complete s return if count 1 sources 0 subscribe new mapsubscriber s new singletonarrayfunc return t r coordinator new s combiner count buffersize delayerrors s onsubscribe coordinator coordinator subscribe sources count 
cancelled true cancelall drain 
final subscriber super r a downstream final spsclinkedarrayqueue object q queue int missed 1 for if cancelled q clear return throwable ex error get if ex null q clear a onerror ex return boolean d done boolean empty q isempty if empty a onnext null if d empty a oncomplete return missed addandget missed if missed 0 break 
final subscriber super r a downstream final spsclinkedarrayqueue object q queue int missed 1 for long r requested get long e 0l while e r boolean d done object v q poll boolean empty v null if checkterminated d empty a q return if empty break t va t q poll r w try w objects requirenonnull combiner apply va the combiner returned a null value catch throwable ex exceptions throwiffatal ex cancelall exceptionhelper addthrowable error ex ex exceptionhelper terminate error a onerror ex return a onnext w t v requestone e if e r if checkterminated done q isempty a q return if e 0l r long max value requested addandget e missed addandget missed if missed 0 break 
if getandincrement 0 return if outputfused drainoutput else drainasync 
for t inner subscribers inner cancel 
object e queue poll if e null return null t a t queue poll r r objects requirenonnull combiner apply a the combiner returned a null value t e requestone return r 
queue clear 
return queue isempty 
subscriptionhelper setonce this s prefetch 
parent innererror index t 
parent innercomplete index 
subscriptionhelper cancel this 
int p produced 1 if p limit produced 0 get request p else produced p 
if flowablescalarxmap source s mapper return source subscribe new switchmapsubscriber s mapper buffersize delayerrors 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if done errors tryaddthrowable t if delayerrors disposeinner done true drain else rxjavaplugins onerror t 
if done return done true drain 
if cancelled cancelled true upstream cancel disposeinner errors 
t r a active getandset t r cancelled if a cancelled a null a cancel 
if getandincrement 0 return final subscriber super r a downstream int missing 1 for if cancelled return if done if delayerrors if active get null errors tryterminateconsumer a return else throwable err errors get if err null disposeinner errors tryterminateconsumer a return else if active get null a oncomplete return t r inner active get simplequeue r q inner null inner queue null if q null long r requested get long e 0l boolean retry false while e r if cancelled return boolean d inner done r v try v q poll catch throwable ex exceptions throwiffatal ex inner cancel errors ex d true v null boolean empty v null if inner active get retry true break if d if delayerrors throwable err errors get if err null errors tryterminateconsumer a return else if empty active compareandset inner null retry true break else if empty active compareandset inner null retry true break if empty break a onnext v e if e r if inner done if delayerrors throwable err errors get if err null disposeinner errors tryterminateconsumer a return else if q isempty active compareandset inner null continue else if q isempty active compareandset inner null continue if e 0l if cancelled if r long max value requested addandget e inner request e if retry continue missing addandget missing if missing 0 break 
if subscriptionhelper setonce this s if s instanceof queuesubscription suppresswarnings unchecked queuesubscription r qs queuesubscription r s int m qs requestfusion queuesubscription any queuesubscription boundary if m queuesubscription sync fusionmode m queue qs done true parent drain return if m queuesubscription async fusionmode m queue qs s request buffersize return queue new spscarrayqueue buffersize s request buffersize 
switchmapsubscriber t r p parent if index p unique p errors tryaddthrowable t if p delayerrors p upstream cancel p done true done true p drain else rxjavaplugins onerror t 
switchmapsubscriber t r p parent if index p unique done true p drain 
subscriptionhelper cancel this 
publisher extends t pub try pub objects requirenonnull supplier get the publisher supplied is null catch throwable t exceptions throwiffatal t emptysubscription error t s return pub subscribe s 
source subscribe new detachsubscriber s 
subscription s this upstream this upstream emptycomponent instance this downstream emptycomponent assubscriber s cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
subscriber super t a downstream this upstream emptycomponent instance this downstream emptycomponent assubscriber a onerror t 
subscriber super t a downstream this upstream emptycomponent instance this downstream emptycomponent assubscriber a oncomplete 
publisher extends t sources this sources int count 0 if sources null sources new publisher 8 try for publisher extends t p sourcesiterable if p null emptysubscription error new nullpointerexception one of the sources is null s return if count sources length publisher extends t b new publisher count count 2 system arraycopy sources 0 b 0 count sources b sources count p catch throwable e exceptions throwiffatal e emptysubscription error e s return else count sources length if count 0 emptysubscription complete s return else if count 1 sources 0 subscribe s return ambcoordinator t ac new ambcoordinator s count ac subscribe sources 
if winner get 1 winner lazyset 1 for ambinnersubscriber t a subscribers a cancel 
subscriptionhelper deferredsetonce this missedrequested s 
if won downstream onerror t else if parent win index won true downstream onerror t else get cancel rxjavaplugins onerror t 
if won downstream oncomplete else if parent win index won true downstream oncomplete else get cancel 
subscriptionhelper cancel this 
subscriber super t downstream if delayerror downstream t else downstream new serializedsubscriber t scheduler worker w scheduler createworker source subscribe new delaysubscriber downstream delay unit w delayerror 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
w schedule new onerror t delayerror delay 0 unit 
w schedule new oncomplete delay unit 
upstream cancel w dispose 
downstream onnext t 
try downstream onerror t finally w dispose 
try downstream oncomplete finally w dispose 
if s instanceof source subscribe new super t s onafternext else source subscribe new doaftersubscriber s onafternext 
t v qs poll if v null onafternext accept v return v 
t v qs poll if v null onafternext accept v return v 
s state try state statesupplier get catch throwable e exceptions throwiffatal e emptysubscription error e s return s onsubscribe new s generator disposestate state 
if cancelled cancelled true if backpressurehelper add this 1 0 s s state state null dispose s 
if terminate rxjavaplugins onerror t else if t null t exceptionhelper onerror called with a null throwable terminate true downstream onerror t 
if terminate terminate true downstream oncomplete 
source subscribe new takelastsubscriber s count 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
downstream onerror t 
done true drain 
cancelled true upstream cancel 
if wip getandincrement 0 subscriber super t a downstream long r requested get do if cancelled return if done long e 0l while e r if cancelled return t v poll if v null a oncomplete return a onnext v e if isempty a oncomplete return if e 0l r backpressurehelper produced requested e while wip decrementandget 0 
t u open close parent new s bufferopen bufferclose buffersupplier s onsubscribe parent source subscribe parent 
if subscriptionhelper setonce this upstream s bufferopensubscriber open open new bufferopensubscriber this subscribers add open bufferopen subscribe open s request long max value 
if errors t subscribers dispose synchronized this buffers null done true drain 
subscribers dispose synchronized this map long c bufs buffers if bufs null return for c b bufs values queue offer b buffers null done true drain 
if subscriptionhelper cancel upstream cancelled true subscribers dispose synchronized this buffers null if getandincrement 0 queue clear 
subscriptionhelper cancel upstream subscribers delete subscriber onerror ex 
if getandincrement 0 return int missed 1 long e emitted subscriber super c a downstream spsclinkedarrayqueue c q queue for long r requested get while e r if cancelled q clear return boolean d done if d errors get null q clear errors tryterminateconsumer a return c v q poll boolean empty v null if d empty a oncomplete return if empty break a onnext v e if e r if cancelled q clear return if done if errors get null q clear errors tryterminateconsumer a return else if q isempty a oncomplete return emitted e missed addandget missed if missed 0 break 
subscriptionhelper setonce this s long max value 
lazyset subscriptionhelper cancelled parent boundaryerror this t 
lazyset subscriptionhelper cancelled parent opencomplete this 
subscriptionhelper cancel this 
return get subscriptionhelper cancelled 
subscriptionhelper setonce this s long max value 
subscription s get if s subscriptionhelper cancelled lazyset subscriptionhelper cancelled s cancel parent close this index 
if get subscriptionhelper cancelled lazyset subscriptionhelper cancelled parent boundaryerror this t else rxjavaplugins onerror t 
if get subscriptionhelper cancelled lazyset subscriptionhelper cancelled parent close this index 
subscriptionhelper cancel this 
return get subscriptionhelper cancelled 
collection super k collection try collection exceptionhelper nullcheck collectionsupplier get the collectionsupplier returned a null collection catch throwable ex exceptions throwiffatal ex emptysubscription error ex subscriber return source subscribe new distinctsubscriber subscriber keyselector collection 
if done rxjavaplugins onerror e else done true collection clear downstream onerror e 
if done done true collection clear downstream oncomplete 
for t v qs poll if v null collection add objects requirenonnull keyselector apply v the keyselector returned a null key return v else if sourcemode queuefuseable async upstream request 1 
collection clear super clear 
source subscribe new s onnextmapper onerrormapper oncompletesupplier 
r p try p objects requirenonnull onerrormapper apply t the onerror publisher returned is null catch throwable e exceptions throwiffatal e downstream onerror new compositeexception t e return complete p 
r p try p objects requirenonnull oncompletesupplier get the oncomplete publisher returned is null catch throwable e exceptions throwiffatal e downstream onerror e return complete p 
mergewithobserver t parent new mergewithobserver subscriber subscriber onsubscribe parent source subscribe parent other subscribe parent otherobserver 
subscriptionhelper setonce mainsubscription s prefetch 
if errors ex disposablehelper dispose otherobserver drain 
maindone true drain 
cancelled true subscriptionhelper cancel mainsubscription disposablehelper dispose otherobserver errors if getandincrement 0 queue null singleitem null 
if errors ex subscriptionhelper cancel mainsubscription drain 
otherstate other state consumed or empty drain 
simpleplainqueue t q queue if q null q new spscarrayqueue buffersize queue q return q 
if getandincrement 0 drainloop 
subscriber super t actual this downstream int missed 1 long e emitted int c consumed int lim limit for long r requested get while e r if cancelled singleitem null queue null return if errors get null singleitem null queue null errors tryterminateconsumer downstream return int os otherstate if os other state has value t v singleitem singleitem null otherstate other state consumed or empty os other state consumed or empty actual onnext v e continue boolean d maindone simpleplainqueue t q queue t v q null q poll null boolean empty v null if d empty os other state consumed or empty queue null actual oncomplete return if empty break actual onnext v e if c lim c 0 mainsubscription get request lim if e r if cancelled singleitem null queue null return if errors get null singleitem null queue null errors tryterminateconsumer downstream return boolean d maindone simpleplainqueue t q queue boolean empty q null q isempty if d empty otherstate 2 queue null actual oncomplete return emitted e consumed c missed addandget missed if missed 0 break 
disposablehelper setonce this d 
parent othererror e 
parent othercomplete 
source subscribe new elementatsubscriber observer index 
return rxjavaplugins onassembly new flowableelementat source index null false 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request index 1 
if done rxjavaplugins onerror t return done true upstream subscriptionhelper cancelled downstream onerror t 
upstream subscriptionhelper cancelled if done done true downstream oncomplete 
upstream cancel upstream subscriptionhelper cancelled 
return upstream subscriptionhelper cancelled 
source subscribe new s count time unit scheduler buffersize delayerror 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if delayerror trim scheduler now unit queue error t done true drain 
trim scheduler now unit queue done true drain 
if cancelled cancelled true upstream cancel if getandincrement 0 queue clear 
if getandincrement 0 return int missed 1 final subscriber super t a downstream final spsclinkedarrayqueue object q queue final boolean delayerror this delayerror for if done boolean empty q isempty if checkterminated empty a delayerror return long r requested get long e 0l for object ts q peek empty ts null if checkterminated empty a delayerror return if r e break q poll suppresswarnings unchecked t o t q poll a onnext o e if e 0l backpressurehelper produced requested e missed addandget missed if missed 0 break 
source subscribe new hidesubscriber s 
upstream cancel 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
downstream onerror t 
downstream oncomplete 
publisher extends t sources this sources int count 0 if sources null sources new publisher 8 for publisher extends t p sourcesiterable if count sources length publisher extends t b new publisher count count 2 system arraycopy sources 0 b 0 count sources b sources count p else count sources length if count 0 emptysubscription complete s return zipcoordinator t r coordinator new zipcoordinator s zipper count buffersize delayerror s onsubscribe coordinator coordinator subscribe sources count 
if cancelled cancelled true cancelall 
for zipsubscriber t r s subscribers s cancel 
if getandincrement 0 return final subscriber super r a downstream final zipsubscriber t r qs subscribers final int n qs length object values current int missed 1 for long r requested get long e 0l while r e if cancelled return if delayerrors errors get null cancelall errors tryterminateconsumer a return boolean empty false for int j 0 j n j zipsubscriber t r inner qs j if values j null boolean d inner done simplequeue t q inner queue t v null try v q null q poll null catch throwable ex exceptions throwiffatal ex errors ex if delayerrors cancelall errors tryterminateconsumer a return d true boolean sourceempty v null if d sourceempty cancelall errors tryterminateconsumer a return if sourceempty values j v else empty true if empty break r v try v objects requirenonnull zipper apply values clone the zipper returned a null value catch throwable ex exceptions throwiffatal ex cancelall errors ex errors tryterminateconsumer a return a onnext v e arrays fill values null if r e if cancelled return if delayerrors errors get null cancelall errors tryterminateconsumer a return for int j 0 j n j zipsubscriber t r inner qs j if values j null boolean d inner done simplequeue t q inner queue t v null try v q null q poll null catch throwable ex exceptions throwiffatal ex errors ex if delayerrors cancelall errors tryterminateconsumer a return d true boolean empty v null if d empty cancelall errors tryterminateconsumer a return if empty values j v if e 0l for zipsubscriber t r inner qs inner request e if r long max value requested addandget e missed addandget missed if missed 0 break 
if subscriptionhelper setonce this s if s instanceof queuesubscription queuesubscription t f queuesubscription t s int m f requestfusion queuesubscription any queuesubscription boundary if m queuesubscription sync sourcemode m queue f done true parent drain return if m queuesubscription async sourcemode m queue f s request prefetch return queue new spscarrayqueue prefetch s request prefetch 
parent error this t 
done true parent drain 
subscriptionhelper cancel this 
if s instanceof s onsubscribe new super integer s start end else s onsubscribe new rangesubscription s start end 
int i index if i end return null index i 1 return i 
return index end 
index end 
cancelled true 
int f end subscriber super integer a downstream for int i index i f i if cancelled return a onnext i if cancelled return a oncomplete 
int f end super integer a downstream for int i index i f i if cancelled return a tryonnext i if cancelled return a oncomplete 
source subscribe new s onsubscribe onrequest oncancel 
try onsubscribe accept s catch throwable e exceptions throwiffatal e s cancel this upstream subscriptionhelper cancelled emptysubscription error e downstream return if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
if upstream subscriptionhelper cancelled downstream onerror t else rxjavaplugins onerror t 
if upstream subscriptionhelper cancelled downstream oncomplete 
subscription s upstream if s subscriptionhelper cancelled upstream subscriptionhelper cancelled try oncancel run catch throwable e exceptions throwiffatal e rxjavaplugins onerror e s cancel 
if other null timeoutsubscriber t parent new timeoutsubscriber s timeout unit scheduler createworker s onsubscribe parent parent starttimeout 0l source subscribe parent else t parent new s timeout unit scheduler createworker other s onsubscribe parent parent starttimeout 0l source subscribe parent 
subscriptionhelper deferredsetonce upstream requested s 
if getandset long max value long max value task dispose downstream onerror t worker dispose else rxjavaplugins onerror t 
if getandset long max value long max value task dispose downstream oncomplete worker dispose 
subscriptionhelper cancel upstream worker dispose 
parent ontimeout idx 
if subscriptionhelper setonce upstream s setsubscription s 
if index getandset long max value long max value task dispose downstream onerror t worker dispose else rxjavaplugins onerror t 
if index getandset long max value long max value task dispose downstream oncomplete worker dispose 
super cancel worker dispose 
arbiter setsubscription s 
downstream onerror t 
downstream oncomplete 
if flowablescalarxmap source s mapper return source subscribe subscribe s mapper delayerrors maxconcurrency buffersize 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this if cancelled if maxconcurrency integer max value s request long max value else s request maxconcurrency 
simpleplainqueue u q queue if q null if maxconcurrency integer max value q new spsclinkedarrayqueue buffersize else q new spscarrayqueue maxconcurrency queue q return q 
if done rxjavaplugins onerror t return if errors t done true if delayerrors for innersubscriber a subscribers getandset cancelled a dispose drain 
if done return done true drain 
if cancelled cancelled true upstream cancel disposeall if getandincrement 0 simplequeue u q queue if q null q clear 
if getandincrement 0 drainloop 
final subscriber super u child this downstream int missed 1 for if checkterminate return simpleplainqueue u svq queue long r requested get boolean unbounded r long max value long replenishmain 0 if svq null long scalaremission 0 u o null while r 0l o svq poll if checkterminate return if o null break child onnext o replenishmain scalaremission r if scalaremission 0l if unbounded r long max value else r requested addandget scalaremission boolean d done svq queue innersubscriber inner subscribers get int n inner length if d svq null svq isempty n 0 errors tryterminateconsumer downstream return boolean innercompleted false if n 0 long startid lastid int index lastindex if n index inner index id startid if n index index 0 int j index for int i 0 i n i if inner j id startid break j if j n j 0 index j lastindex j lastid inner j id int j index sourceloop for int i 0 i n i if checkterminate return suppresswarnings unchecked innersubscriber t u is innersubscriber t u inner j u o null for simplequeue u q is queue if q null break long produced 0 while r 0l if checkterminate return try o q poll catch throwable ex exceptions throwiffatal ex is dispose errors ex if delayerrors upstream cancel if checkterminate return removeinner is innercompleted true i continue sourceloop if o null break child onnext o r produced if produced 0l if unbounded r requested addandget produced else r long max value is requestmore produced if r 0 o null break boolean innerdone is done simplequeue u innerqueue is queue if innerdone innerqueue null innerqueue isempty removeinner is if checkterminate return replenishmain innercompleted true if r 0l break j if j n j 0 lastindex j lastid inner j id if replenishmain 0l cancelled upstream request replenishmain if innercompleted continue missed addandget missed if missed 0 break 
if cancelled clearscalarqueue return true if delayerrors errors get null clearscalarqueue errors tryterminateconsumer downstream return true return false 
simplequeue u q queue if q null q clear 
innersubscriber a subscribers getandset cancelled if a cancelled for innersubscriber inner a inner dispose errors 
if subscriptionhelper setonce this s if s instanceof queuesubscription suppresswarnings unchecked queuesubscription u qs queuesubscription u s int m qs requestfusion queuesubscription any queuesubscription boundary if m queuesubscription sync fusionmode m queue qs done true parent drain return if m queuesubscription async fusionmode m queue qs s request buffersize 
lazyset subscriptionhelper cancelled parent innererror this t 
done true parent drain 
subscriptionhelper cancel this 
return get subscriptionhelper cancelled 
return source 
publishconnection t conn boolean doconnect false for conn current get if conn null conn isdisposed publishconnection t fresh new publishconnection current buffersize if current compareandset conn fresh continue conn fresh doconnect conn connect get conn connect compareandset false true break try connection accept conn catch throwable ex exceptions throwiffatal ex throw exceptionhelper wraporthrow ex if doconnect source subscribe conn 
publishconnection t conn for conn current get if conn null publishconnection t fresh new publishconnection current buffersize if current compareandset conn fresh continue conn fresh break innersubscription t inner new innersubscription s conn s onsubscribe inner if conn add inner if inner iscancelled conn remove inner else conn drain return throwable ex conn error if ex null inner downstream onerror ex else inner downstream oncomplete 
publishconnection t conn current get if conn null conn isdisposed current compareandset conn null 
subscribers getandset terminated current compareandset this null subscriptionhelper cancel upstream 
return subscribers get terminated 
if subscriptionhelper setonce this upstream s if s instanceof queuesubscription suppresswarnings unchecked queuesubscription t qs queuesubscription t s int m qs requestfusion queuesubscription any queuesubscription boundary if m queuesubscription sync sourcemode m queue qs done true drain return if m queuesubscription async sourcemode m queue qs s request buffersize return queue new spscarrayqueue buffersize s request buffersize 
if done rxjavaplugins onerror t else error t done true drain 
done true drain 
if getandincrement 0 return int missed 1 simplequeue t queue this queue int consumed this consumed int limit this buffersize this buffersize 2 boolean async this sourcemode queuesubscription sync outer for if queue null long mindemand long max value boolean hasdemand false innersubscription t consumers subscribers get for innersubscription t inner consumers long request inner get if request long min value hasdemand true mindemand math min request inner emitted mindemand if hasdemand mindemand 0l while mindemand 0l boolean d done t v try v queue poll catch throwable ex exceptions throwiffatal ex upstream get cancel queue clear done true signalerror ex return boolean empty v null if checkterminated d empty return if empty break for innersubscription t inner consumers if inner iscancelled inner downstream onnext v inner emitted if async consumed limit consumed 0 upstream get request limit mindemand if consumers subscribers get continue outer if checkterminated done queue isempty return this consumed consumed missed addandget missed if missed 0 break if queue null queue this queue 
for innersubscription t inner subscribers getandset terminated if inner iscancelled inner downstream onerror ex 
if getandset long min value long min value parent remove this parent drain 
return get long min value 
if timespan timeskip if maxsize long max value source subscribe new downstream timespan unit scheduler buffersize return source subscribe new downstream timespan unit scheduler buffersize maxsize return source subscribe new windowskipsubscriber downstream timespan timeskip unit scheduler createworker buffersize 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this createfirstwindow 
error t done true drain 
done true drain 
if downstreamcancelled compareandset false true windowdone 
if windowcount decrementandget 0 cleanupresources upstream cancel upstreamcancelled true drain 
if downstreamcancelled get if requested get 0l windowcount getandincrement window unicastprocessor create buffersize windowrunnable emitted 1 t intercept new window downstream onnext intercept timer replace scheduler this timespan timespan unit if intercept tryabandon window oncomplete upstream request long max value else upstream cancel downstream onerror new emitted cleanupresources upstreamcancelled true 
queue offer next window drain 
if getandincrement 0 return final simpleplainqueue object queue this queue final subscriber super flowable t downstream this downstream unicastprocessor t window this window int missed 1 for if upstreamcancelled queue clear window null this window null else boolean isdone done object o queue poll boolean isempty o null if isdone isempty throwable ex error if ex null if window null window onerror ex downstream onerror ex else if window null window oncomplete downstream oncomplete cleanupresources upstreamcancelled true continue else if isempty if o next window if window null window oncomplete window null this window null if downstreamcancelled get timer dispose else if requested get emitted upstream cancel cleanupresources upstreamcancelled true downstream onerror new emitted else emitted windowcount getandincrement window unicastprocessor create buffersize windowrunnable this window window t intercept new window downstream onnext intercept if intercept tryabandon window oncomplete else if window null suppresswarnings unchecked t item t o window onnext item continue missed addandget missed if missed 0 break 
timer dispose 
windowdone 
if downstreamcancelled get if requested get 0l emitted 1 windowcount getandincrement window unicastprocessor create buffersize this t intercept new window downstream onnext intercept runnable boundarytask new this 1l if timer replace worker scheduleperiodically boundarytask timespan timespan unit else timer replace scheduler boundarytask timespan timespan unit if intercept tryabandon window oncomplete upstream request long max value else upstream cancel downstream onerror new emitted cleanupresources upstreamcancelled true 
windowdone 
timer dispose worker w worker if w null w dispose 
if getandincrement 0 return int missed 1 final simpleplainqueue object queue this queue final subscriber super flowable t downstream this downstream unicastprocessor t window this window for if upstreamcancelled queue clear window null this window null else boolean isdone done object o queue poll boolean isempty o null if isdone isempty throwable ex error if ex null if window null window onerror ex downstream onerror ex else if window null window oncomplete downstream oncomplete cleanupresources upstreamcancelled true continue else if isempty if o instanceof boundary o if boundary index emitted this count 0 window createnewwindow window else if window null suppresswarnings unchecked t item t o window onnext item long count this count 1 if count maxsize this count 0 window createnewwindow window else this count count continue missed addandget missed if missed 0 break 
if window null window oncomplete window null if downstreamcancelled get cleanupresources else long emitted this emitted if requested get emitted upstream cancel cleanupresources upstreamcancelled true downstream onerror new emitted else this emitted emitted windowcount getandincrement window unicastprocessor create buffersize this this window window t intercept new window downstream onnext intercept if timer update worker scheduleperiodically new this emitted timespan timespan unit if intercept tryabandon window oncomplete return window 
parent boundary this 
if downstreamcancelled get if requested get 0l emitted 1 windowcount getandincrement unicastprocessor t window unicastprocessor create buffersize this windows add window t intercept new window downstream onnext intercept worker schedule new this false timespan unit worker scheduleperiodically new this true timeskip timeskip unit if intercept tryabandon window oncomplete windows remove window upstream request long max value else upstream cancel downstream onerror new emitted cleanupresources upstreamcancelled true 
worker dispose 
if getandincrement 0 return int missed 1 final simpleplainqueue object queue this queue final subscriber super flowable t downstream this downstream final list unicastprocessor t windows this windows for if upstreamcancelled queue clear windows clear else boolean isdone done object o queue poll boolean isempty o null if isdone isempty throwable ex error if ex null for unicastprocessor t window windows window onerror ex downstream onerror ex else for unicastprocessor t window windows window oncomplete downstream oncomplete cleanupresources upstreamcancelled true continue else if isempty if o window open if downstreamcancelled get long emitted this emitted if requested get emitted this emitted emitted windowcount getandincrement unicastprocessor t window unicastprocessor create buffersize this windows add window t intercept new window downstream onnext intercept worker schedule new this false timespan unit if intercept tryabandon window oncomplete else upstream cancel throwable ex new emitted for unicastprocessor t window windows window onerror ex downstream onerror ex cleanupresources upstreamcancelled true continue else if o window close if windows isempty windows remove 0 oncomplete else suppresswarnings unchecked t item t o for unicastprocessor t window windows window onnext item continue missed addandget missed if missed 0 break 
windowdone 
parent boundary isopen 
final map object groupedunicast k v groups final queue groupedunicast k v evictedgroups try if mapfactory null evictedgroups null groups new concurrenthashmap else evictedgroups new consumer object evictionaction consumer new evictionaction evictedgroups groups map mapfactory apply evictionaction catch throwable e exceptions throwiffatal e s onsubscribe emptycomponent instance s onerror e return groupbysubscriber t k v subscriber new groupbysubscriber s keyselector valueselector buffersize delayerror groups evictedgroups source subscribe subscriber 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request buffersize 
if done rxjavaplugins onerror t return done true for groupedunicast k v g groups values g onerror t groups clear completeevictions downstream onerror t 
if done for groupedunicast k v g groups values g oncomplete groups clear completeevictions done true downstream oncomplete 
if cancelled compareandset false true completeevictions if groupcount decrementandget 0 upstream cancel 
if evictedgroups null int count 0 groupedunicast k v evictedgroup while evictedgroup evictedgroups poll null if evictedgroup state trycomplete count if count 0 groupcount addandget count 
state subscribe s 
state onerror e 
state oncomplete 
if cancelled compareandset false true cancelparent drain 
for int s once get if s has subscriber 0 break int u s has subscriber if once compareandset s u subscriber onsubscribe this actual lazyset subscriber if cancelled get actual lazyset null else drain return emptysubscription error new only one subscriber allowed subscriber 
error e done true drain 
done true drain 
boolean canevict evictonce compareandset false true done true drain return canevict 
if once get abandoned 0 if evictonce compareandset false true parent cancel key 
return once get fresh once compareandset fresh abandoned 
if getandincrement 0 return if outputfused drainfused else drainnormal 
int missed 1 final spsclinkedarrayqueue t q this queue subscriber super t a this actual get for if a null if cancelled get return boolean d done if d delayerror throwable ex error if ex null q clear a onerror ex return a onnext null if d throwable ex error if ex null a onerror ex else a oncomplete return missed addandget missed if missed 0 return if a null a this actual get 
int missed 1 final spsclinkedarrayqueue t q queue final boolean delayerror this delayerror subscriber super t a actual get final atomicboolean cancelled this cancelled outer for if cancelled get cleanupqueue 0 false else if a null long r requested get long e 0 while e r boolean d done t v q poll boolean empty v null if checkterminated d empty a delayerror e empty continue outer if empty break a onnext v e if e r checkterminated done q isempty a delayerror e false continue outer if e 0l backpressurehelper produced requested e requestparent e missed addandget missed if missed 0 break if a null a actual get 
int p produced if p 0 produced 0 requestparent p 
t v queue poll if v null produced return v tryreplenish return null 
if queue isempty tryreplenish return true tryreplenish return false 
spsclinkedarrayqueue t q queue while q poll null produced tryreplenish 
u u try u objects requirenonnull initialsupplier get the initialsupplier returned a null value catch throwable e exceptions throwiffatal e emptydisposable error e observer return source subscribe new collectsubscriber observer u collector 
return rxjavaplugins onassembly new flowablecollect source initialsupplier collector 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this s request long max value 
if done rxjavaplugins onerror t return done true upstream subscriptionhelper cancelled downstream onerror t 
if done return done true upstream subscriptionhelper cancelled downstream onsuccess u 
upstream cancel upstream subscriptionhelper cancelled 
return upstream subscriptionhelper cancelled 
if s instanceof super t cs super t s source subscribe new cs keyselector comparer else source subscribe new s keyselector comparer 
for t v qs poll if v null return null k key keyselector apply v if hasvalue hasvalue true last key return v if comparer test last key last key return v last key if sourcemode sync upstream request 1 
for t v qs poll if v null return null k key keyselector apply v if hasvalue hasvalue true last key return v if comparer test last key last key return v last key if sourcemode sync upstream request 1 
t lio new flowable t frompublisher source materialize subscribe lio return lio 
boolean wasnotavailable value getandset args null if wasnotavailable notify release 
rxjavaplugins onerror e 
$EMPTY$
if iteratornotification null iteratornotification isonerror throw exceptionhelper wraporthrow iteratornotification geterror if iteratornotification null iteratornotification isonnext if iteratornotification null try blockinghelper verifynonblocking notify acquire catch interruptedexception ex dispose iteratornotification notification createonerror ex throw exceptionhelper wraporthrow ex notification t n value getandset null iteratornotification n if n isonerror throw exceptionhelper wraporthrow n geterror return iteratornotification isonnext 
if hasnext if iteratornotification isonnext t v iteratornotification getvalue iteratornotification null return v throw new 
throw new read only iterator 
t it new buffersize source subscribe it return it 
for if isdisposed throwable e error if e null throw exceptionhelper wraporthrow e return false boolean d done boolean empty queue isempty if d throwable e error if e null throw exceptionhelper wraporthrow e else if empty return false if empty blockinghelper verifynonblocking lock lock try while done queue isempty isdisposed condition await catch interruptedexception ex run throw exceptionhelper wraporthrow ex finally lock unlock else return true 
if hasnext t v queue poll long p produced 1 if p limit produced 0 get request p else produced p return v throw new 
subscriptionhelper setonce this s batchsize 
error t done true signalconsumer 
done true signalconsumer 
lock lock try condition signalall finally lock unlock 
subscriptionhelper cancel this signalconsumer 
throw new remove 
subscriptionhelper cancel this signalconsumer 
return get subscriptionhelper cancelled 
source subscribe new skiplastsubscriber s skip 
if subscriptionhelper validate this upstream s this upstream s downstream onsubscribe this 
downstream onerror t 
downstream oncomplete 
upstream cancel 
if s instanceof s onsubscribe new super long s start end else s onsubscribe new rangesubscription s start end 
long i index if i end return null index i 1 return i 
return index end 
index end 
cancelled true 
long f end subscriber super long a downstream for long i index i f i if cancelled return a onnext i if cancelled return a oncomplete 
long f end super long a downstream for long i index i f i if cancelled return a tryonnext i if cancelled return a oncomplete 
nextsubscriber t nextsubscriber new nextsubscriber return new nextiterator source nextsubscriber 
if error null throw exceptionhelper wraporthrow error if hasnext return false return isnextconsumed movetonext 
try if started started true subscriber setwaiting flowable t frompublisher items materialize subscribe subscriber notification t nextnotification subscriber takenext if nextnotification isonnext isnextconsumed false next nextnotification getvalue return true hasnext false if nextnotification isoncomplete return false error nextnotification geterror throw exceptionhelper wraporthrow error catch interruptedexception e subscriber dispose error e throw exceptionhelper wraporthrow e 
if error null throw exceptionhelper wraporthrow error if hasnext isnextconsumed true return next else throw new no more elements 
throw new read only iterator 
$EMPTY$
rxjavaplugins onerror e 
if waiting getandset 0 1 args isonnext notification t tooffer args while buf offer tooffer notification t concurrentitem buf poll if concurrentitem null concurrentitem isonnext tooffer concurrentitem 
setwaiting blockinghelper verifynonblocking return buf take 
waiting set 1 
if s instanceof source subscribe new super t s predicate else source subscribe new filtersubscriber s predicate 
queuesubscription t qs this qs predicate super t f filter for t t qs poll if t null return null if f test t return t if sourcemode async qs request 1 
queuesubscription t qs this qs predicate super t f filter for t t qs poll if t null return null if f test t return t if sourcemode async qs request 1 
source subscribe new observer 
return rxjavaplugins onassembly new flowablesingle source null false 
