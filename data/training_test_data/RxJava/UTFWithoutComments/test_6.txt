publishprocessor integer pp publishprocessor create testhelper checkdisposed pp singleelement count 
testhelper new function maybe object singlesource long override public singlesource long apply maybe object f throws exception return f count 
assertsame maybe empty object maybe empty count source 
maybe fromobservable observable empty hide test assertresult 
maybe fromobservable observable just 1 hide test assertresult 1 
maybe fromobservable observable range 1 5 hide test assertresult 1 
maybe fromobservable observable error new testexception hide test assertfailure testexception class 
publishprocessor object pp publishprocessor create testobserver integer to maybe just 1 delaysubscription pp test asserttrue pp hassubscribers to assertempty pp onnext one assertfalse pp hassubscribers to assertresult 1 
maybe just 1 delaysubscription 100 timeunit milliseconds test awaitdone 5 timeunit seconds assertresult 1 
maybe integer empty delaysubscription 100 timeunit milliseconds test awaitdone 5 timeunit seconds assertresult 
testscheduler scheduler new testscheduler testobserver integer to maybe just 1 delaysubscription 100 timeunit milliseconds scheduler test to assertempty scheduler advancetimeby 99 timeunit milliseconds to assertempty scheduler advancetimeby 1 timeunit milliseconds to assertresult 1 
maybe just 1 delaysubscription flowable error new testexception test assertfailure testexception class 
maybe error new testexception delaysubscription flowable empty test assertfailure testexception class 
testhelper checkdisposed maybe just 1 delaysubscription flowable never 
testhelper new function maybe object maybesource object override public maybesource object apply maybe object m throws exception return m delaysubscription flowable just 1 
list throwable errors testhelper trackpluginerrors try flowable integer f new flowable integer override protected void subscribeactual subscriber super integer subscriber subscriber onsubscribe new booleansubscription subscriber onnext 1 subscriber onerror new testexception subscriber oncomplete subscriber onnext 2 maybe just 1 delaysubscription f test assertresult 1 testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
testhelper f maybe just 1 delaysubscription f 
maybe integer m maybe just 1 assertsame m m toobservable source 
testhelper new function maybe object observablesource object override public observablesource object apply maybe object m throws exception return m toobservable 
maybe just notification createonnext 1 dematerialize functions notification integer identity test assertresult 1 
maybe just notification integer createoncomplete dematerialize functions notification integer identity test assertresult 
suppresswarnings unchecked function notification integer notification integer function mock function class maybe notification integer empty dematerialize function test assertresult verify function never apply any 
maybe notification integer error new testexception dematerialize functions notification integer identity test assertfailure testexception class 
maybe just notification integer createonerror new testexception dematerialize functions notification integer identity test assertfailure testexception class 
testhelper new function maybe object maybesource object suppresswarnings unchecked rawtypes override public maybesource object apply maybe object v throws exception return v dematerialize function functions identity 
testhelper checkdisposed maybesubject notification integer create dematerialize functions notification integer identity 
maybe just notification createonnext 1 dematerialize new function notification integer notification integer override public notification integer apply notification integer v throws exception throw new testexception test assertfailure testexception class 
maybe just notification createonnext 1 dematerialize functions justfunction notification integer null test assertfailure nullpointerexception class 
maybe just notification createonnext 1 dematerialize new function notification integer notification string override public notification string apply notification integer v throws exception return notification createonnext value 1 test assertresult value 1 
testhelper checkdisposed maybe just 1 flatmap functions justfunction maybe just 1 functions justfunction maybe just 1 functions justsupplier maybe just 1 
testhelper new function maybe integer maybesource integer override public maybesource integer apply maybe integer m throws exception return m flatmap functions justfunction maybe just 1 functions justfunction maybe just 1 functions justsupplier maybe just 1 
maybe just 1 flatmap functions justfunction maybe integer null functions justfunction maybe just 1 functions justsupplier maybe just 1 test assertfailure nullpointerexception class 
testobserverex integer to maybe integer error new testexception flatmap functions justfunction maybe just 1 functions justfunction maybe integer null functions justsupplier maybe just 1 to testhelper integer testconsumer assertfailure compositeexception class list throwable ce testhelper compositelist to errors get 0 testhelper asserterror ce 0 testexception class testhelper asserterror ce 1 nullpointerexception class 
maybe integer empty flatmap functions justfunction maybe just 1 functions justfunction maybe just 1 functions justsupplier maybe integer null test assertfailure nullpointerexception class 
maybe just 1 flatmap functions justfunction maybe integer empty functions justfunction maybe just 1 functions justsupplier maybe just 1 test assertresult 
maybe just 1 flatmap functions justfunction maybe integer error new testexception functions justfunction maybe integer null functions justsupplier maybe just 1 test assertfailure testexception class 
testhelper checkdisposed maybe just 1 flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just 2 
testhelper new function maybe integer maybesource integer override public maybesource integer apply maybe integer v throws exception return v flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just 2 
maybe integer error new testexception flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just 2 test assertfailure testexception class 
maybe integer empty flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just 2 test assertresult 
maybe just 1 flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception throw new testexception test assertfailure testexception class 
maybe just 1 flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception return null test assertfailure nullpointerexception class 
testsubscriberex integer ts new testsubscriberex integer setinitialfusionmode queuefuseable sync maybe mergearray maybe just 1 maybe just 2 subscribe ts ts assertfuseable assertfusionmode queuefuseable none assertresult 1 2 
testsubscriberex integer ts new testsubscriberex integer setinitialfusionmode queuefuseable any maybe mergearray maybe just 1 maybe integer empty maybe just 2 subscribe ts ts assertfuseable assertfusionmode queuefuseable async assertresult 1 2 
maybe mergearray maybe just 1 maybe integer empty maybe just 2 subscribe new flowablesubscriber integer queuesubscription integer qs override public void onsubscribe subscription s qs queuesubscription integer s assertequals queuefuseable async qs requestfusion queuefuseable any override public void onnext integer value assertfalse qs isempty qs clear asserttrue qs isempty qs cancel override public void onerror throwable e override public void oncomplete 
testsubscriber integer ts new testsubscriber 0l maybe mergearray maybe just 1 maybe integer empty maybe just 2 subscribe ts ts cancel ts request 10 ts assertempty 
testsubscriber integer ts new testsubscriber 0l maybe mergearray maybe integer error new testexception maybe integer empty maybe just 2 subscribe ts ts assertfailure testexception class 
testsubscriberex integer ts new testsubscriberex integer setinitialfusionmode queuefuseable any maybe mergearray maybe integer error new testexception maybe just 2 subscribe ts ts assertfuseable assertfusionmode queuefuseable async assertfailure testexception class 
for int i 0 i testhelper race default loops i list throwable errors testhelper trackpluginerrors try final publishsubject integer ps1 publishsubject create final publishsubject integer ps2 publishsubject create testsubscriber integer ts maybe mergearray ps1 singleelement ps2 singleelement test final testexception ex new testexception runnable r1 new runnable override public void run ps1 onerror ex runnable r2 new runnable override public void run ps2 onerror ex testhelper race r1 r2 ts assertfailure throwable class if errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
maybe mergearray new maybe integer override protected void subscribeactual maybeobserver super integer observer observer onsubscribe disposable empty observer onsuccess 1 observer onsuccess 2 observer onsuccess 3 maybe never test assertresult 1 2 
maybe mergearray maybe never maybe never subscribe new flowablesubscriber object suppresswarnings rawtypes override public void onsubscribe subscription s mergemaybeobserver o mergemaybeobserver s try o queue offer 1 2 fail should have thrown catch ex override public void onnext object t override public void onerror throwable t override public void oncomplete 
maybe integer a new maybe 1024 arrays fill a maybe never maybe mergearray a subscribe new flowablesubscriber object suppresswarnings rawtypes override public void onsubscribe subscription s mergemaybeobserver o mergemaybeobserver s try o queue offer 1 2 fail should have thrown catch ex o queue drop override public void onnext object t override public void onerror throwable t override public void oncomplete 
testhelper maybe mergearray maybesubject create maybesubject create 
testhelper checkdisposed maybe mergearray maybesubject create maybesubject create 
maybe mergearray maybe just 1 maybe empty maybe just 2 doonsubscribe s s request long max value take 1 test assertresult 1 
maybe integer m maybe just 1 assertsame m m toflowable source 
testhelper new function maybe object publisher object override public publisher object apply maybe object m throws exception return m toflowable 
calls 
maybe just 1 dofinally this test assertresult 1 assertequals 1 calls 
maybe empty dofinally this test assertresult assertequals 1 calls 
maybe error new testexception dofinally this test assertfailure testexception class assertequals 1 calls 
testhelper new function maybe object maybe object override public maybe object apply maybe object f throws exception return f dofinally maybedofinallytest this testhelper new function maybe object maybe object override public maybe object apply maybe object f throws exception return f dofinally maybedofinallytest this filter functions alwaystrue 
maybe just 1 dofinally this filter functions alwaystrue test assertresult 1 assertequals 1 calls 
maybe empty dofinally this filter functions alwaystrue test assertresult assertequals 1 calls 
maybe error new testexception dofinally this filter functions alwaystrue test assertfailure testexception class assertequals 1 calls 
list throwable errors testhelper trackpluginerrors try maybe just 1 dofinally new action override public void run throws exception throw new testexception test assertresult 1 dispose testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try maybe just 1 dofinally new action override public void run throws exception throw new testexception filter functions alwaystrue test assertresult 1 dispose testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
testhelper checkdisposed publishsubject create singleelement dofinally this 
maybe just 1 hide test assertresult 1 
maybe empty hide test assertresult 
maybe error new testexception hide test assertfailure testexception class 
asserttrue maybe just 1 instanceof scalarsupplier assertfalse maybe just 1 hide instanceof scalarsupplier 
testhelper checkdisposedmaybe new function maybe object maybesource object override public maybesource object apply maybe object m throws exception return m hide 
publishprocessor integer pp publishprocessor create testhelper checkdisposed pp singleelement hide 
testhelper new function maybe object maybe object override public maybe object apply maybe object f throws exception return f hide 
maybe error new supplier throwable override public throwable get throws exception throw new testexception test assertfailure testexception class 
maybe just 1 takeuntil flowable never test assertresult 1 
maybe just 1 takeuntil maybe never test assertresult 1 
maybe just 1 takeuntil flowable just one test assertresult 
maybe just 1 takeuntil maybe just one test assertresult 
testhelper checkdisposed publishprocessor create singleelement takeuntil maybe never 
testhelper new function maybe object maybesource object override public maybesource object apply maybe object m throws exception return m takeuntil maybe never 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement takeuntil pp2 singleelement test asserttrue pp1 hassubscribers asserttrue pp2 hassubscribers pp1 onerror new testexception assertfalse pp1 hassubscribers assertfalse pp2 hassubscribers to assertfailure testexception class 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement takeuntil pp2 singleelement test asserttrue pp1 hassubscribers asserttrue pp2 hassubscribers pp2 onerror new testexception assertfalse pp1 hassubscribers assertfalse pp2 hassubscribers to assertfailure testexception class 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement takeuntil pp2 singleelement test asserttrue pp1 hassubscribers asserttrue pp2 hassubscribers pp1 oncomplete assertfalse pp1 hassubscribers assertfalse pp2 hassubscribers to assertresult 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement takeuntil pp2 singleelement test asserttrue pp1 hassubscribers asserttrue pp2 hassubscribers pp2 oncomplete assertfalse pp1 hassubscribers assertfalse pp2 hassubscribers to assertresult 
for int i 0 i testhelper race default loops i final publishprocessor integer pp1 publishprocessor create final publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement takeuntil pp2 singleelement test final testexception ex1 new testexception final testexception ex2 new testexception list throwable errors testhelper trackpluginerrors try runnable r1 new runnable override public void run pp1 onerror ex1 runnable r2 new runnable override public void run pp2 onerror ex2 testhelper race r1 r2 to assertfailure testexception class if errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
for int i 0 i testhelper race default loops i final publishprocessor integer pp1 publishprocessor create final publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement takeuntil pp2 singleelement test runnable r1 new runnable override public void run pp1 oncomplete runnable r2 new runnable override public void run pp2 oncomplete testhelper race r1 r2 to assertresult 
maybesubject integer main maybesubject create maybesubject integer other maybesubject create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hasobservers main onsuccess 1 assertfalse main has observers main hasobservers assertfalse other has observers other hasobservers to assertresult 1 
maybesubject integer main maybesubject create maybesubject integer other maybesubject create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hasobservers main oncomplete assertfalse main has observers main hasobservers assertfalse other has observers other hasobservers to assertresult 
maybesubject integer main maybesubject create maybesubject integer other maybesubject create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hasobservers main onerror new testexception assertfalse main has observers main hasobservers assertfalse other has observers other hasobservers to assertfailure testexception class 
maybesubject integer main maybesubject create maybesubject integer other maybesubject create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hasobservers other onsuccess 1 assertfalse main has observers main hasobservers assertfalse other has observers other hasobservers to assertresult 
maybesubject integer main maybesubject create maybesubject integer other maybesubject create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hasobservers other oncomplete assertfalse main has observers main hasobservers assertfalse other has observers other hasobservers to assertresult 
maybesubject integer main maybesubject create maybesubject integer other maybesubject create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hasobservers other onerror new testexception assertfalse main has observers main hasobservers assertfalse other has observers other hasobservers to assertfailure testexception class 
maybesubject integer main maybesubject create maybesubject integer other maybesubject create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hasobservers to dispose assertfalse main has observers main hasobservers assertfalse other has observers other hasobservers to assertempty 
maybesubject integer main maybesubject create publishprocessor integer other publishprocessor create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hassubscribers main onsuccess 1 assertfalse main has observers main hasobservers assertfalse other has observers other hassubscribers to assertresult 1 
maybesubject integer main maybesubject create publishprocessor integer other publishprocessor create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hassubscribers main oncomplete assertfalse main has observers main hasobservers assertfalse other has observers other hassubscribers to assertresult 
maybesubject integer main maybesubject create publishprocessor integer other publishprocessor create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hassubscribers main onerror new testexception assertfalse main has observers main hasobservers assertfalse other has observers other hassubscribers to assertfailure testexception class 
maybesubject integer main maybesubject create publishprocessor integer other publishprocessor create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hassubscribers other onnext 1 assertfalse main has observers main hasobservers assertfalse other has observers other hassubscribers to assertresult 
maybesubject integer main maybesubject create publishprocessor integer other publishprocessor create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hassubscribers other oncomplete assertfalse main has observers main hasobservers assertfalse other has observers other hassubscribers to assertresult 
maybesubject integer main maybesubject create publishprocessor integer other publishprocessor create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hassubscribers other onerror new testexception assertfalse main has observers main hasobservers assertfalse other has observers other hassubscribers to assertfailure testexception class 
maybesubject integer main maybesubject create publishprocessor integer other publishprocessor create testobserver integer to main takeuntil other test asserttrue main no observers main hasobservers asserttrue other no observers other hassubscribers to dispose assertfalse main has observers main hasobservers assertfalse other has observers other hassubscribers to assertempty 
testhelper new function maybe object maybesource object override public maybesource object apply maybe object m throws exception return m map functions identity 
maybe mergedelayerror flowable just maybe just 1 maybe just 2 maybe just 3 1 test assertresult 1 2 3 
maybe mergedelayerror flowable just maybe just 1 maybe integer error new testexception maybe just 3 1 test assertfailure testexception class 1 3 
final atomicinteger count new atomicinteger suppresswarnings unchecked maybe integer sources new maybe 3 for int i 0 i 3 i final int j i 1 sources i maybe fromcallable new callable integer override public integer call throws exception return count incrementandget j subscribeon schedulers io for int i 0 i 1000 i count set 0 maybe mergedelayerror flowable fromarray sources 1 test awaitdone 5 timeunit seconds assertresult 0 0 0 
final atomicinteger count new atomicinteger suppresswarnings unchecked maybe integer sources new maybe 3 for int i 0 i 3 i final int j i 1 sources i maybe fromcallable new callable integer override public integer call throws exception return count incrementandget j subscribeon schedulers io sources 1 maybe fromcallable new callable integer override public integer call throws exception throw new testexception count incrementandget subscribeon schedulers io for int i 0 i 1000 i count set 0 maybe mergedelayerror flowable fromarray sources 1 to testhelper integer testconsumer awaitdone 5 timeunit seconds testexception class 2 0 0 
maybe mergedelayerror flowable just maybe just 1 test assertresult 1 
maybe just 1 flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception if integer 1 return single just 2 return single just 1 tosingle test assertresult 2 
maybe just 1 flatmapsingle new function integer singlesource string override public singlesource string apply final integer integer throws exception if integer 1 return single just 2 return single just 1 tosingle test assertresult 2 
maybe just 1 flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return null tosingle to testhelper integer testconsumer assertnovalues asserterror nullpointerexception class asserterrormessage the mapper returned a null singlesource 
maybe just 1 flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception throw new runtimeexception something went terribly wrong tosingle to testhelper integer testconsumer assertnovalues asserterror runtimeexception class asserterrormessage something went terribly wrong 
runtimeexception exception new runtimeexception test maybe error exception flatmapsingle new function object singlesource object override public singlesource object apply final object integer throws exception return single just new object tosingle test asserterror exception 
maybe integer empty flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single just 2 tosingle test assertnovalues asserterror class 
testhelper checkdisposed maybe just 1 flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single just 2 tosingle 
testhelper new function maybe integer singlesource integer override public singlesource integer apply maybe integer m throws exception return m flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single just 2 tosingle 
maybe just 1 flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single error new testexception tosingle test assertfailure testexception class 
maybe frompublisher flowable empty hide test assertresult 
maybe frompublisher flowable just 1 hide test assertresult 1 
maybe frompublisher flowable range 1 5 hide test assertresult 1 
maybe frompublisher flowable error new testexception hide test assertfailure testexception class 
maybe concat arrays aslist maybe just 1 maybe just 2 maybe just 3 take 1 test assertresult 1 
maybe concat new iterable maybesource object override public iterator maybesource object iterator throw new testexception iterator to testhelper object testconsumer testexception class iterator 
maybe concat arrays aslist maybe just 1 maybe integer error new testexception maybe just 3 test assertfailure testexception class 1 
for int i 0 i testhelper race default loops i final publishprocessor integer pp publishprocessor create final testsubscriber integer ts maybe concat arrays aslist pp singleelement test pp onnext 1 runnable r1 new runnable override public void run ts cancel runnable r2 new runnable override public void run pp oncomplete testhelper race r1 r2 
maybe concat new 100 1 100 new function integer maybe integer override public maybe integer apply integer v throws exception return maybe just 1 to testhelper integer testconsumer testexception class hasnext 
maybe concat new 100 100 1 new function integer maybe integer override public maybe integer apply integer v throws exception return maybe just 1 to testhelper integer testconsumer testexception class next 
maybe concat new 100 100 100 new function integer maybe integer override public maybe integer apply integer v throws exception return null test assertfailure nullpointerexception class 
final int calls 0 maybe integer source maybe create new maybeonsubscribe integer override public void subscribe maybeemitter integer s throws exception calls 0 s onsuccess 1 maybe concat arrays aslist source source firstelement test assertresult 1 assertequals 1 calls 0 
final int calls 0 maybe integer source maybe create new maybeonsubscribe integer override public void subscribe maybeemitter integer s throws exception calls 0 s onsuccess 1 maybe concatdelayerror arrays aslist source source firstelement test assertresult 1 assertequals 1 calls 0 
testhelper maybe concat arrays aslist maybesubject create maybesubject create 
final atomicinteger atomicinteger new atomicinteger maybe fromcallable new callable object override public object call throws exception atomicinteger incrementandget return null test assertresult assertequals 1 atomicinteger get 
final atomicinteger atomicinteger new atomicinteger callable object callable new callable object override public object call throws exception atomicinteger incrementandget return null maybe fromcallable callable test assertresult assertequals 1 atomicinteger get maybe fromcallable callable test assertresult assertequals 2 atomicinteger get 
final atomicinteger atomicinteger new atomicinteger maybe object completable maybe fromcallable new callable object override public object call throws exception atomicinteger incrementandget return null assertequals 0 atomicinteger get completable test assertresult assertequals 1 atomicinteger get 
maybe fromcallable new callable object override public object call throws exception throw new test assertfailure class 
final int counter 0 maybe integer m maybe fromcallable new callable integer override public integer call throws exception counter 0 return 0 asserttrue m getclass tostring m instanceof supplier assertequals 0 supplier void m get assertequals 1 counter 0 
list throwable errors testhelper trackpluginerrors try final countdownlatch cdl1 new countdownlatch 1 final countdownlatch cdl2 new countdownlatch 1 testobserver integer to maybe fromcallable new callable integer override public integer call throws exception cdl1 countdown cdl2 await 5 timeunit seconds return 1 subscribeon schedulers single test asserttrue cdl1 await 5 timeunit seconds to dispose int timeout 10 while timeout 0 errors isempty thread sleep 100 testhelper assertundeliverable errors 0 interruptedexception class finally rxjavaplugins reset 
callable string func mock callable class final countdownlatch funclatch new countdownlatch 1 final countdownlatch observerlatch new countdownlatch 1 when func call thenanswer new answer string override public string answer invocationonmock invocation throws throwable observerlatch countdown try funclatch await catch interruptedexception e thread currentthread interrupt return should not be delivered maybe string maybe fromcallable func observer object observer testhelper mockobserver testobserver string outer new testobserver observer subscribeon schedulers computation subscribe outer observerlatch await outer dispose funclatch countdown verify func call verify observer onsubscribe any disposable class observer 
maybe fromcallable 1 test true assertempty 
maybe fromcallable 1 test assertresult 1 
maybe concateager arrays aslist maybe just 1 maybe empty maybe just 2 test assertresult 1 2 
maybe concateager arrays aslist maybe just 1 maybe empty maybe just 2 1 test assertresult 1 2 
maybe concateager arrays aslist maybe just 1 maybe error new testexception maybe empty maybe just 2 test assertfailure testexception class 1 
maybe concateager arrays aslist maybe just 1 maybe error new testexception maybe empty maybe just 2 1 test assertfailure testexception class 1 
maybe concateager flowable fromarray maybe just 1 maybe empty maybe just 2 test assertresult 1 2 
maybe concateager flowable fromarray maybe just 1 maybe empty maybe just 2 1 test assertresult 1 2 
maybe concateager flowable fromarray maybe just 1 maybe error new testexception maybe empty maybe just 2 test assertfailure testexception class 1 
maybe arrays aslist maybe just 1 maybe error new testexception maybe empty maybe just 2 test assertfailure testexception class 1 2 
maybe arrays aslist maybe just 1 maybe error new testexception maybe empty maybe just 2 1 test assertfailure testexception class 1 2 
maybe flowable fromarray maybe just 1 maybe error new testexception maybe empty maybe just 2 test assertfailure testexception class 1 2 
maybe flowable fromarray maybe just 1 maybe error new testexception maybe empty maybe just 2 1 test assertfailure testexception class 1 2 
maybe integer m maybe just 1 asserttrue m getclass tostring m instanceof scalarsupplier assertequals 1 scalarsupplier integer m get intvalue 
maybe just 1 timeout 1 timeunit days test assertresult 1 
maybe just 1 timeout maybe timer 1 timeunit days test assertresult 1 
maybe never timeout 1 timeunit milliseconds test awaitdone 5 timeunit seconds assertfailure timeoutexception class 
maybe never timeout maybe timer 1 timeunit milliseconds test awaitdone 5 timeunit seconds assertfailure timeoutexception class 
maybe just 1 timeout 1 timeunit days maybe just 2 test assertresult 1 
maybe just 1 timeout maybe timer 1 timeunit days maybe just 2 test assertresult 1 
maybe never timeout 1 timeunit milliseconds maybe just 2 test awaitdone 5 timeunit seconds assertresult 2 
maybe never timeout maybe timer 1 timeunit milliseconds maybe just 2 test awaitdone 5 timeunit seconds assertresult 2 
maybe never timeout 1 timeunit milliseconds schedulers single maybe just 2 test awaitdone 5 timeunit seconds assertresult 2 
maybe never timeout 1 timeunit milliseconds schedulers single test awaitdone 5 timeunit seconds assertfailure timeoutexception class 
maybe just 1 timeout flowable timer 1 timeunit days maybe just 2 test assertresult 1 
maybe never timeout flowable timer 1 timeunit milliseconds maybe just 2 test awaitdone 5 timeunit seconds assertresult 2 
maybe just 1 timeout flowable timer 1 timeunit days test assertresult 1 
maybe never timeout flowable timer 1 timeunit milliseconds test awaitdone 5 timeunit seconds assertfailure timeoutexception class 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement timeout pp2 singleelement test asserttrue pp1 hassubscribers asserttrue pp2 hassubscribers pp1 onerror new testexception assertfalse pp1 hassubscribers assertfalse pp2 hassubscribers to assertfailure testexception class 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement timeout pp2 singleelement test asserttrue pp1 hassubscribers asserttrue pp2 hassubscribers pp2 onerror new testexception assertfalse pp1 hassubscribers assertfalse pp2 hassubscribers to assertfailure testexception class 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement timeout pp2 singleelement maybe integer error new testexception test asserttrue pp1 hassubscribers asserttrue pp2 hassubscribers pp2 onnext 1 pp2 oncomplete assertfalse pp1 hassubscribers assertfalse pp2 hassubscribers to assertfailure testexception class 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement timeout pp2 singleelement maybe integer empty test asserttrue pp1 hassubscribers asserttrue pp2 hassubscribers pp2 onnext 1 pp2 oncomplete assertfalse pp1 hassubscribers assertfalse pp2 hassubscribers to assertresult 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement timeout pp2 singleelement test asserttrue pp1 hassubscribers asserttrue pp2 hassubscribers pp1 oncomplete assertfalse pp1 hassubscribers assertfalse pp2 hassubscribers to assertresult 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement timeout pp2 singleelement test asserttrue pp1 hassubscribers asserttrue pp2 hassubscribers pp2 oncomplete assertfalse pp1 hassubscribers assertfalse pp2 hassubscribers to assertfailure timeoutexception class 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testhelper checkdisposed pp1 singleelement timeout pp2 singleelement 
publishprocessor integer pp1 publishprocessor create publishprocessor integer pp2 publishprocessor create testhelper checkdisposed pp1 singleelement timeout pp2 singleelement maybe just 1 
for int i 0 i testhelper race default loops i testhelper trackpluginerrors try final publishprocessor integer pp1 publishprocessor create final publishprocessor integer pp2 publishprocessor create testobserver integer to pp1 singleelement timeout pp2 singleelement test final testexception ex new testexception runnable r1 new runnable override public void run pp1 onerror ex runnable r2 new runnable override public void run pp2 onerror ex testhelper race r1 r2 to assertfailure testexception class finally rxjavaplugins reset 
for int i 0 i testhelper race default loops i final publishprocessor integer pp1 publishprocessor create final publishprocessor integer pp2 publishprocessor create testobserverex integer to pp1 singleelement timeout pp2 singleelement to testhelper integer testconsumer runnable r1 new runnable override public void run pp1 oncomplete runnable r2 new runnable override public void run pp2 oncomplete testhelper race r1 r2 to assertsubscribed assertnovalues if to errors size 0 to asserterror timeoutexception class assertnotcomplete else to assertnoerrors assertcomplete 
maybesubject integer ms maybesubject create new maybe integer override protected void subscribeactual nonnull maybeobserver super integer observer observer onsubscribe disposable empty ms onsuccess 2 observer onsuccess 1 timeout ms test assertfailure timeoutexception class 
maybe just 1 isempty test assertresult false 
maybe empty isempty test assertresult true 
maybe error new testexception isempty test assertfailure testexception class 
asserttrue maybe just 1 isempty tomaybe instanceof maybeisempty 
maybe just 1 isempty tomaybe test assertresult false 
maybe empty isempty tomaybe test assertresult true 
maybe error new testexception isempty tomaybe test assertfailure testexception class 
testhelper new function maybe object singlesource boolean override public singlesource boolean apply maybe object m throws exception return m isempty 
publishprocessor integer pp publishprocessor create testhelper checkdisposed pp singleelement isempty 
testhelper new function maybe object single boolean override public single boolean apply maybe object f throws exception return f isempty 
testhelper checkdisposedmaybe new function maybe object maybe boolean override public maybe boolean apply maybe object m throws exception return m isempty tomaybe 
publishprocessor integer pp publishprocessor create testhelper checkdisposed pp singleelement isempty tomaybe 
testhelper new function maybe object maybe boolean override public maybe boolean apply maybe object f throws exception return f isempty tomaybe 
maybe zip maybe error new testexception maybe just 1 addstring test assertfailure testexception class 
maybe zip maybe just 1 maybe integer error new testexception addstring test assertfailure testexception class 
publishprocessor integer pp publishprocessor create testobserver object to maybe zip pp singleelement pp singleelement addstring test asserttrue pp hassubscribers to dispose assertfalse pp hassubscribers 
maybe zip maybe just 1 maybe just 2 new bifunction integer integer object override public object apply integer a integer b throws exception throw new testexception test assertfailure testexception class 
maybe zip maybe just 1 maybe just 2 new bifunction integer integer object override public object apply integer a integer b throws exception return null test assertfailure nullpointerexception class 
publishprocessor integer pp0 publishprocessor create publishprocessor integer pp1 publishprocessor create testobserver object to maybe zip pp0 singleelement pp1 singleelement pp0 singleelement addstring3 test pp1 onerror new testexception assertfalse pp0 hassubscribers to assertfailure testexception class 
for int i 0 i testhelper race default loops i list throwable errors testhelper trackpluginerrors try final publishprocessor integer pp0 publishprocessor create final publishprocessor integer pp1 publishprocessor create final testobserver object to maybe zip pp0 singleelement pp1 singleelement addstring test final testexception ex new testexception runnable r1 new runnable override public void run pp0 onerror ex runnable r2 new runnable override public void run pp1 onerror ex testhelper race r1 r2 to assertfailure testexception class if errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
maybe ziparray new function object object override public object apply object v return 1 maybe just 1 null blockingget 
maybe ziparray functions justfunction null maybe just 1 to testhelper object testconsumer nullpointerexception class the zipper returned a null value 
testhelper checkdisposed maybe ziparray v v maybesubject create maybesubject create 
atomicreference maybeobserver super integer ref1 new atomicreference atomicreference maybeobserver super integer ref2 new atomicreference maybe integer m1 new maybe integer override protected void subscribeactual nonnull maybeobserver super integer observer ref1 set observer maybe integer m2 new maybe integer override protected void subscribeactual nonnull maybeobserver super integer observer ref2 set observer testobserver object to maybe ziparray v v m1 m2 test ref1 get onsubscribe disposable empty ref2 get onsubscribe disposable empty ref1 get oncomplete ref2 get oncomplete to assertresult 
maybe ziparray v arrays aslist v maybe just 1 maybe just 2 test assertresult arrays aslist 1 2 
maybe ziparray v arrays aslist v maybe just 1 test assertresult arrays aslist 1 
atomicreference maybeobserver super integer emitter new atomicreference testobserver list object to maybe ziparray arrays aslist maybesource integer o emitter set o maybe integer never test emitter get onsubscribe disposable empty to dispose emitter get onsuccess 1 to assertempty 
maybe just 1 concatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception if integer 1 return single just 2 return single just 1 test assertresult 2 
maybe just 1 concatmapsingle new function integer singlesource string override public singlesource string apply final integer integer throws exception if integer 1 return single just 2 return single just 1 test assertresult 2 
maybe just 1 concatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return null to testhelper integer testconsumer assertnovalues asserterror nullpointerexception class asserterrormessage the mapper returned a null singlesource 
maybe just 1 concatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception throw new runtimeexception something went terribly wrong to testhelper integer testconsumer assertnovalues asserterror runtimeexception class asserterrormessage something went terribly wrong 
runtimeexception exception new runtimeexception test maybe error exception concatmapsingle new function object singlesource object override public singlesource object apply final object integer throws exception return single just new object test asserterror exception 
maybe integer empty concatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single just 2 test assertnovalues assertresult 
testhelper checkdisposed maybe just 1 concatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single just 2 
testhelper new function maybe integer maybe integer override public maybe integer apply maybe integer m throws exception return m concatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single just 2 
maybe just 1 concatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single error new testexception test assertfailure testexception class 
maybe just 1 switchifempty single just 2 test assertresult 1 
maybe integer empty switchifempty single just 2 test assertresult 2 
maybe integer error new testexception switchifempty single just 2 test assertfailure testexception class 
maybe empty switchifempty single integer error new testexception test assertfailure testexception class 
publishprocessor integer pp publishprocessor create testobserver integer to pp singleelement switchifempty single just 2 test asserttrue pp hassubscribers to dispose assertfalse pp hassubscribers 
publishprocessor integer pp publishprocessor create testhelper checkdisposed pp singleelement switchifempty single just 2 
testhelper new function maybe integer single integer override public single integer apply maybe integer f throws exception return f switchifempty single just 2 
for int i 0 i testhelper race default loops i final publishprocessor integer pp publishprocessor create final testobserver integer to pp singleelement switchifempty single just 2 test runnable r1 new runnable override public void run pp oncomplete runnable r2 new runnable override public void run to dispose testhelper race r1 r2 
assertsame maybe empty maybe integer empty switchifempty single just 1 source 
maybe just 1 flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception if integer 1 return single just 2 return single just 1 test assertresult 2 
maybe just 1 flatmapsingle new function integer singlesource string override public singlesource string apply final integer integer throws exception if integer 1 return single just 2 return single just 1 test assertresult 2 
maybe just 1 flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return null to testhelper integer testconsumer assertnovalues asserterror nullpointerexception class asserterrormessage the mapper returned a null singlesource 
maybe just 1 flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception throw new runtimeexception something went terribly wrong to testhelper integer testconsumer assertnovalues asserterror runtimeexception class asserterrormessage something went terribly wrong 
runtimeexception exception new runtimeexception test maybe error exception flatmapsingle new function object singlesource object override public singlesource object apply final object integer throws exception return single just new object test asserterror exception 
maybe integer empty flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single just 2 test assertnovalues assertresult 
testhelper checkdisposed maybe just 1 flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single just 2 
testhelper new function maybe integer maybe integer override public maybe integer apply maybe integer m throws exception return m flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single just 2 
maybe just 1 flatmapsingle new function integer singlesource integer override public singlesource integer apply final integer integer throws exception return single error new testexception test assertfailure testexception class 
maybe just 1 flattenasobservable new function integer iterable integer override public iterable integer apply integer v throws exception return arrays aslist v v 1 test assertresult 1 2 
maybe just 1 flattenasobservable new function integer iterable integer override public iterable integer apply integer v throws exception return collections integer emptylist test assertresult 
maybe integer error new testexception flattenasobservable new function integer iterable integer override public iterable integer apply integer v throws exception return arrays aslist v v 1 test assertfailure testexception class 
maybe integer empty flattenasobservable new function integer iterable integer override public iterable integer apply integer v throws exception return arrays aslist v v 1 test assertresult 
maybe just 1 flattenasobservable new function integer iterable integer override public iterable integer apply integer v throws exception return arrays aslist v v 1 take 1 test assertresult 1 
testobserverex integer to new testobserverex queuefuseable any maybe just 1 flattenasobservable new function integer iterable integer override public iterable integer apply integer v throws exception return arrays aslist v v 1 subscribe to to assertfuseable assertfusionmode queuefuseable async assertresult 1 2 
testobserverex integer to new testobserverex queuefuseable sync maybe just 1 flattenasobservable new function integer iterable integer override public iterable integer apply integer v throws exception return arrays aslist v v 1 subscribe to to assertfuseable assertfusionmode queuefuseable none assertresult 1 2 
maybe just 1 flattenasobservable new function integer iterable integer override public iterable integer apply integer v throws exception return new crashingiterable 1 100 100 to testhelper integer testconsumer testexception class iterator 
maybe just 1 flattenasobservable new function integer iterable integer override public iterable integer apply integer v throws exception return new crashingiterable 100 1 100 to testhelper integer testconsumer testexception class hasnext 
maybe just 1 flattenasobservable new function integer iterable integer override public iterable integer apply integer v throws exception return new crashingiterable 100 100 1 to testhelper integer testconsumer testexception class next 
maybe just 1 flattenasobservable new function integer iterable integer override public iterable integer apply integer v throws exception return new crashingiterable 100 2 100 to testhelper integer testconsumer testexception class hasnext 0 
testhelper new function maybe object observablesource integer override public observablesource integer apply maybe object o throws exception return o flattenasobservable new function object iterable integer override public iterable integer apply object v throws exception return collections singleton 1 
testhelper checkdisposed maybe just 1 flattenasobservable new function object iterable integer override public iterable integer apply object v throws exception return collections singleton 1 
maybe just 1 flattenasobservable new function object iterable integer override public iterable integer apply object v throws exception integer array new integer 1000 1000 arrays fill array 1 return arrays aslist array hide observeon schedulers single to testhelper integer testconsumer awaitdone 5 timeunit seconds assertsubscribed assertvaluecount 1000 1000 assertnoerrors assertcomplete 
maybe just 1 flattenasobservable new function object iterable integer override public iterable integer apply object v throws exception integer array new integer 1000 1000 arrays fill array 1 return arrays aslist array observeon schedulers single to testhelper integer testconsumer awaitdone 5 timeunit seconds assertsubscribed assertvaluecount 1000 1000 assertnoerrors assertcomplete 
maybe just 1 flattenasobservable new function object iterable integer override public iterable integer apply object v throws exception integer array new integer 1000 1000 arrays fill array 1 return arrays aslist array take 500 1000 observeon schedulers single to testhelper integer testconsumer awaitdone 5 timeunit seconds assertsubscribed assertvaluecount 500 1000 assertnoerrors assertcomplete 
maybe just 1 flattenasobservable new function object iterable integer override public iterable integer apply object v throws exception integer array new integer 1000 1000 arrays fill array 1 return arrays aslist array observeon schedulers single take 500 1000 to testhelper integer testconsumer awaitdone 5 timeunit seconds assertsubscribed assertvaluecount 500 1000 assertnoerrors assertcomplete 
maybe just 1 flattenasobservable new function object iterable integer override public iterable integer apply object v throws exception return arrays aslist 1 2 3 subscribe new observer integer queuedisposable integer qd suppresswarnings unchecked override public void onsubscribe disposable d qd queuedisposable integer d assertequals queuefuseable async qd requestfusion queuefuseable any override public void onnext integer value assertfalse qd isempty qd clear asserttrue qd isempty qd dispose override public void onerror throwable e override public void oncomplete 
maybe create new maybeonsubscribe object override public void subscribe maybeemitter object e throws exception throw new testexception test assertfailure testexception class 
maybe create new maybeonsubscribe object override public void subscribe maybeemitter object e throws exception e onsuccess null test assertfailure nullpointerexception class 
maybe create new maybeonsubscribe object override public void subscribe maybeemitter object e throws exception e onerror null test assertfailure nullpointerexception class 
testhelper checkdisposed maybe create new maybeonsubscribe object override public void subscribe maybeemitter object e throws exception e onsuccess 1 
maybe create new maybeonsubscribe object override public void subscribe maybeemitter object e throws exception disposable d disposable empty e setdisposable d try e onsuccess 1 fail should have thrown catch testexception ex asserttrue d isdisposed asserttrue e isdisposed subscribe new maybeobserver object override public void onsubscribe disposable d override public void onsuccess object value throw new testexception override public void onerror throwable e override public void oncomplete 
maybe create new maybeonsubscribe object override public void subscribe maybeemitter object e throws exception disposable d disposable empty e setdisposable d try e onerror new ioexception fail should have thrown catch testexception ex asserttrue d isdisposed asserttrue e isdisposed subscribe new maybeobserver object override public void onsubscribe disposable d override public void onsuccess object value override public void onerror throwable e throw new testexception override public void oncomplete 
maybe create new maybeonsubscribe object override public void subscribe maybeemitter object e throws exception disposable d disposable empty e setdisposable d try e oncomplete fail should have thrown catch testexception ex asserttrue d isdisposed asserttrue e isdisposed subscribe new maybeobserver object override public void onsubscribe disposable d override public void onsuccess object value override public void onerror throwable e override public void oncomplete throw new testexception 
maybe create new maybeonsubscribe object override public void subscribe maybeemitter object e throws exception try e onsuccess 1 fail should have thrown catch testexception ex asserttrue e isdisposed subscribe new maybeobserver object override public void onsubscribe disposable d override public void onsuccess object value throw new testexception override public void onerror throwable e override public void oncomplete 
maybe create new maybeonsubscribe object override public void subscribe maybeemitter object e throws exception try e onerror new ioexception fail should have thrown catch testexception ex asserttrue e isdisposed subscribe new maybeobserver object override public void onsubscribe disposable d override public void onsuccess object value override public void onerror throwable e throw new testexception override public void oncomplete 
maybe create new maybeonsubscribe object override public void subscribe maybeemitter object e throws exception try e oncomplete fail should have thrown catch testexception ex asserttrue e isdisposed subscribe new maybeobserver object override public void onsubscribe disposable d override public void onsuccess object value override public void onerror throwable e override public void oncomplete throw new testexception 
list throwable errors testhelper trackpluginerrors try final boolean response null maybe create new maybeonsubscribe object override public void subscribe maybeemitter object e throws exception e onsuccess 1 response 0 e tryonerror new testexception test assertresult 1 assertfalse response 0 asserttrue errors tostring errors isempty finally rxjavaplugins reset 
maybe create new maybeonsubscribe object override public void subscribe maybeemitter object emitter throws exception asserttrue emitter tostring contains maybecreate emitter class getsimplename test assertempty 
maybe just 1 mergewith maybe just 2 test assertresult 1 2 
publishprocessor integer pp publishprocessor create final string name null final countdownlatch cdl new countdownlatch 1 pp dooncancel new action override public void run throws exception name 0 thread currentthread getname cdl countdown singleelement unsubscribeon schedulers single test true asserttrue cdl await 5 timeunit seconds int times 10 while times 0 pp hassubscribers thread sleep 100 assertfalse pp hassubscribers assertnotequals thread currentthread getname name 0 
maybe just 1 unsubscribeon schedulers single test assertresult 1 
maybe integer error new testexception unsubscribeon schedulers single test assertfailure testexception class 
maybe empty unsubscribeon schedulers single test assertresult 
testhelper checkdisposed maybe just 1 unsubscribeon schedulers single 
testhelper new function maybe object maybesource object override public maybesource object apply maybe object v throws exception return v unsubscribeon schedulers single 
for int i 0 i testhelper race default loops i publishprocessor integer pp publishprocessor create final disposable ds null pp singleelement unsubscribeon schedulers computation subscribe new maybeobserver integer override public void onsubscribe disposable d ds 0 d override public void onsuccess integer value override public void onerror throwable e override public void oncomplete runnable r new runnable override public void run ds 0 dispose testhelper race r r 
maybe integer m maybe just 1 assertsame m m isempty source 
maybe just 1 oftype integer class test assertresult 1 
testobserver number to maybe just 1 oftype number class test to assertresult number 1 
testobserver string to maybe just 1 oftype string class test to assertresult 
testobserver number to maybe integer error new testexception oftype number class test to assertfailure testexception class 
testobserver string to maybe integer error new testexception oftype string class test to assertfailure testexception class 
testhelper checkdisposedmaybe new function maybe object maybe object override public maybe object apply maybe object m throws exception return m oftype object class 
publishprocessor integer pp publishprocessor create testhelper checkdisposed pp singleelement oftype object class 
testhelper new function maybe object maybe object override public maybe object apply maybe object f throws exception return f oftype object class 
testhelper new function maybe object maybesource object override public maybesource object apply maybe object m throws exception return m onterminatedetach 
testhelper checkdisposed publishprocessor create singleelement onterminatedetach 
maybe error new testexception onterminatedetach test assertfailure testexception class 
maybe empty onterminatedetach test assertresult 
disposable d disposable empty final weakreference disposable wr new weakreference d testobserver object to new maybe object override protected void subscribeactual maybeobserver super object observer observer onsubscribe wr get onterminatedetach test d null to dispose system gc thread sleep 200 to assertempty assertnull wr get 
disposable d disposable empty final weakreference disposable wr new weakreference d testobserver integer to new maybe integer override protected void subscribeactual maybeobserver super integer observer observer onsubscribe wr get observer oncomplete observer oncomplete onterminatedetach test d null system gc thread sleep 200 to assertresult assertnull wr get 
disposable d disposable empty final weakreference disposable wr new weakreference d testobserver integer to new maybe integer override protected void subscribeactual maybeobserver super integer observer observer onsubscribe wr get observer onerror new testexception observer onerror new ioexception onterminatedetach test d null system gc thread sleep 200 to assertfailure testexception class assertnull wr get 
disposable d disposable empty final weakreference disposable wr new weakreference d testobserver integer to new maybe integer override protected void subscribeactual maybeobserver super integer observer observer onsubscribe wr get observer onsuccess 1 observer onsuccess 2 onterminatedetach test d null system gc thread sleep 200 to assertresult 1 assertnull wr get 
assertequals integer 1 maybe just 1 subscribeon schedulers computation tofuture get 
assertnull maybe empty subscribeon schedulers computation tofuture get 
try maybe error new testexception subscribeon schedulers computation tofuture get fail should have thrown catch executionexception ex asserttrue ex getcause ex getcause instanceof testexception 
maybesubject integer ms maybesubject create future integer f ms tofuture asserttrue ms hasobservers f cancel true assertfalse ms hasobservers 
maybesubject integer ms maybesubject create future integer f ms tofuture asserttrue ms hasobservers f cancel false assertfalse ms hasobservers 
maybe just 1 timestamp test assertvaluecount 1 assertnoerrors assertcomplete 
maybe empty timestamp test assertresult 
maybe error new testexception timestamp test assertfailure testexception class 
maybe just 1 timestamp timeunit seconds test assertvaluecount 1 assertnoerrors assertcomplete 
maybe just 1 timestamp schedulers single test assertvaluecount 1 assertnoerrors assertcomplete 
maybe just 1 timestamp timeunit seconds schedulers single test assertvaluecount 1 assertnoerrors assertcomplete 
testhelper m m timestamp 
testhelper checkdisposed maybesubject create timestamp 
testscheduler scheduler new testscheduler maybesubject integer ms maybesubject create testobserver timed integer to ms timestamp scheduler test scheduler advancetimeby 1000 timeunit milliseconds ms onsuccess 1 to assertresult new timed 1 1000l timeunit milliseconds 
final atomicinteger atomicinteger new atomicinteger maybe fromrunnable new runnable override public void run atomicinteger incrementandget test assertresult assertequals 1 atomicinteger get 
final atomicinteger atomicinteger new atomicinteger runnable run new runnable override public void run atomicinteger incrementandget maybe fromrunnable run test assertresult assertequals 1 atomicinteger get maybe fromrunnable run test assertresult assertequals 2 atomicinteger get 
final atomicinteger atomicinteger new atomicinteger final maybe object maybe maybe fromrunnable new runnable override public void run atomicinteger incrementandget assertequals 0 atomicinteger get maybe test assertresult assertequals 1 atomicinteger get 
maybe fromrunnable new runnable override public void run throw new test assertfailure class 
final int counter 0 maybe void m maybe fromrunnable new runnable override public void run counter 0 asserttrue m getclass tostring m instanceof supplier assertnull supplier void m get assertequals 1 counter 0 
list throwable errors testhelper trackpluginerrors try final countdownlatch cdl1 new countdownlatch 1 final countdownlatch cdl2 new countdownlatch 1 testobserver object to maybe fromrunnable new runnable override public void run cdl1 countdown try cdl2 await 5 timeunit seconds catch interruptedexception ex throw new runtimeexception ex subscribeon schedulers single test asserttrue cdl1 await 5 timeunit seconds to dispose int timeout 10 while timeout 0 errors isempty thread sleep 100 testhelper assertundeliverable errors 0 runtimeexception class asserttrue errors get 0 tostring errors get 0 getcause getcause instanceof interruptedexception finally rxjavaplugins reset 
runnable run mock runnable class maybe fromrunnable run test true assertempty verify run never run 
final testobserver object to new testobserver maybe fromrunnable new runnable override public void run to dispose subscribewith to assertempty asserttrue to isdisposed 
return new bifunction integer integer string override public string apply integer a integer b throws exception return a b 
maybe just 1 flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just 2 stringcombine test assertresult 1 2 
maybe just 1 flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe empty stringcombine test assertresult 
final int call 0 maybe integer empty flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception call 0 return maybe just 1 stringcombine test assertresult assertequals 0 call 0 
final int call 0 maybe integer error new testexception flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception call 0 return maybe just 1 stringcombine test assertfailure testexception class assertequals 0 call 0 
final int call 0 maybe just 1 flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception call 0 return maybe integer error new testexception stringcombine test assertfailure testexception class assertequals 1 call 0 
testhelper checkdisposed publishprocessor create singleelement flatmap new function object maybesource integer override public maybesource integer apply object v throws exception return maybe just 1 new bifunction object integer object override public object apply object a integer b throws exception return b 
testhelper new function maybe object maybesource object override public maybesource object apply maybe object v throws exception return v flatmap new function object maybesource integer override public maybesource integer apply object v throws exception return maybe just 1 new bifunction object integer object override public object apply object a integer b throws exception return b 
maybe just 1 flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception throw new testexception stringcombine test assertfailure testexception class 
maybe just 1 flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception return null stringcombine test assertfailure nullpointerexception class 
maybe just 1 flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just 2 new bifunction integer integer object override public object apply integer a integer b throws exception throw new testexception test assertfailure testexception class 
maybe just 1 flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception return maybe just 2 new bifunction integer integer object override public object apply integer a integer b throws exception return null test assertfailure nullpointerexception class 
final testobserver integer to new testobserver maybe just 1 flatmap new function integer maybesource integer override public maybesource integer apply integer v throws exception to dispose return maybe just 2 new bifunction integer integer integer override public integer apply integer a integer b throws exception throw new subscribewith to assertempty 
maybe concatarray maybe just 1 maybe just 2 take 1 test assertresult 1 
maybe maybe just 1 maybe just 2 take 1 test assertresult 1 
testsubscriber integer ts maybe concatarray maybe just 1 maybe just 2 test 0l ts assertempty ts request 1 ts assertvalue 1 ts request 2 ts assertresult 1 2 
testsubscriber integer ts maybe maybe just 1 maybe just 2 test 0l ts assertempty ts request 1 ts assertvalue 1 ts request 2 ts assertresult 1 2 
for int i 0 i testhelper race default loops i final testsubscriber integer ts maybe concatarray maybe just 1 maybe just 2 test 0l runnable r1 new runnable override public void run ts cancel runnable r2 new runnable override public void run ts request 1 testhelper race r1 r2 
for int i 0 i testhelper race default loops i final testsubscriber integer ts maybe maybe just 1 maybe just 2 test 0l runnable r1 new runnable override public void run ts cancel runnable r2 new runnable override public void run ts request 1 testhelper race r1 r2 
list throwable errors testhelper trackpluginerrors try final maybeobserver o null maybe maybe just 1 maybe error new ioexception new maybe integer override protected void subscribeactual maybeobserver super integer observer observer onsubscribe disposable empty observer onsuccess 2 o 0 observer test assertfailure ioexception class 1 2 o 0 onerror new testexception testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
final int calls 0 maybe integer source maybe create new maybeonsubscribe integer override public void subscribe maybeemitter integer s throws exception calls 0 s onsuccess 1 maybe concatarray source source firstelement test assertresult 1 assertequals 1 calls 0 
final int calls 0 maybe integer source maybe create new maybeonsubscribe integer override public void subscribe maybeemitter integer s throws exception calls 0 s onsuccess 1 maybe source source firstelement test assertresult 1 assertequals 1 calls 0 
testhelper maybe concatarray maybesubject create maybesubject create 
testhelper maybe maybesubject create maybesubject create 
maybe concatarray maybe just 1 maybe empty maybe just 2 maybe empty maybe empty test assertresult 1 2 
maybesubject integer ms maybesubject create testsubscriber integer ts maybe concatarray ms ms test ts assertempty ms onsuccess 1 ts assertresult 1 1 
maybesubject integer ms maybesubject create testsubscriber integer ts maybe concatarray ms ms test ts assertempty ms oncomplete ts assertresult 
maybesubject integer ms maybesubject create testsubscriber integer ts maybe ms ms test ts assertempty ms onsuccess 1 ts assertresult 1 1 
maybesubject integer ms maybesubject create testsubscriber integer ts maybe ms ms test ts assertempty ms oncomplete ts assertresult 
maybe just 1 materialize test assertresult notification createonnext 1 
testexception ex new testexception maybe error ex materialize test assertresult notification createonerror ex 
maybe empty materialize test assertresult notification createoncomplete 
testhelper new function maybe object singlesource notification object override public singlesource notification object apply maybe object v throws exception return v materialize 
testhelper checkdisposed maybesubject create materialize 
events add oncomplete 
events add t 
return source subscribe onnext onerror oncomplete composite 
disposable d subscribeautodispose processor composite this functions on error missing assertfalse d getclass tostring d hascustomonerror asserttrue composite size 0 asserttrue events tostring events isempty processor onnext 1 asserttrue composite size 0 assertequals arrays object aslist 1 events processor oncomplete assertequals arrays object aslist 1 events assertequals 0 composite size 
subscribeautodispose processor composite this functions on error missing asserttrue composite size 0 asserttrue events tostring events isempty processor onnext 1 asserttrue composite size 0 assertequals arrays object aslist 1 events processor oncomplete assertequals arrays object aslist 1 events assertequals 0 composite size 
disposable d subscribeautodispose processor composite this this this asserttrue d getclass tostring d hascustomonerror asserttrue composite size 0 asserttrue events tostring events isempty processor onnext 1 asserttrue composite size 0 assertequals arrays object aslist 1 events processor onerror new ioexception assertequals events tostring 1 events get 0 asserttrue events tostring events get 1 instanceof ioexception assertequals 0 composite size 
subscribeautodispose processor composite this this this asserttrue composite size 0 asserttrue events tostring events isempty processor onnext 1 asserttrue composite size 0 assertequals arrays object aslist 1 events processor oncomplete assertequals arrays object aslist 1 oncomplete events assertequals 0 composite size 
subscribeautodispose processor composite this this this asserttrue composite size 0 asserttrue events tostring events isempty processor onnext 1 asserttrue composite size 0 assertequals arrays object aslist 1 events processor onerror new ioexception assertequals events tostring 1 events get 0 asserttrue events tostring events get 1 instanceof ioexception assertequals 0 composite size 
disposable d subscribeautodispose processor composite this this this asserttrue composite size 0 asserttrue events tostring events isempty assertfalse d isdisposed d dispose d dispose asserttrue d isdisposed assertequals 0 composite size assertfalse processor hasobservers 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite new consumer object override public void accept object t throws exception throw new ioexception this this processor onnext 1 asserttrue errors tostring errors isempty asserttrue events tostring events get 0 instanceof ioexception finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite this new consumer throwable override public void accept throwable t throws exception throw new ioexception t this processor onerror new asserttrue events tostring events isempty testhelper asserterror errors 0 compositeexception class list throwable inners testhelper compositelist errors get 0 testhelper asserterror inners 0 class testhelper asserterror inners 1 ioexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite t throw new ioexception functions on error missing processor onnext 1 asserttrue events tostring events isempty testhelper asserterror errors 0 class asserttrue errors get 0 getcause instanceof ioexception finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite this this new action override public void run throws exception throw new ioexception processor onnext 1 processor oncomplete assertequals arrays aslist 1 events testhelper assertundeliverable errors 0 ioexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer oncomplete observer onsubscribe disposable empty observer onnext 2 observer oncomplete observer onerror new ioexception composite this this this assertequals arrays object aslist 1 oncomplete events testhelper assertundeliverable errors 0 ioexception class finally rxjavaplugins reset 
testhelper checkdisposed new innerqueuedobserver null 1 
events add oncomplete 
events add t 
return source subscribe onsuccess onerror oncomplete composite 
disposable d subscribeautodispose processor composite this functions on error missing assertfalse d getclass tostring d hascustomonerror asserttrue composite size 0 asserttrue events tostring events isempty processor onsuccess 1 assertequals 0 composite size assertequals arrays object aslist 1 events 
subscribeautodispose processor composite this this this asserttrue composite size 0 asserttrue events tostring events isempty processor onsuccess 1 assertequals 0 composite size assertequals arrays object aslist 1 events 
disposable d subscribeautodispose processor composite this this this asserttrue d getclass tostring d hascustomonerror asserttrue composite size 0 asserttrue events tostring events isempty processor onerror new ioexception asserttrue events tostring events get 0 instanceof ioexception assertequals 0 composite size 
subscribeautodispose processor composite this this this asserttrue composite size 0 asserttrue events tostring events isempty processor oncomplete assertequals 0 composite size assertequals arrays object aslist oncomplete events 
subscribeautodispose processor composite this this this asserttrue composite size 0 asserttrue events tostring events isempty processor onerror new ioexception asserttrue events tostring events get 0 instanceof ioexception assertequals 0 composite size 
disposable d subscribeautodispose processor composite this this this asserttrue composite size 0 asserttrue events tostring events isempty assertfalse d isdisposed d dispose d dispose asserttrue d isdisposed assertequals 0 composite size assertfalse processor hasobservers 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite new consumer object override public void accept object t throws exception throw new ioexception this this processor onsuccess 1 asserttrue events tostring events isempty testhelper assertundeliverable errors 0 ioexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite this new consumer throwable override public void accept throwable t throws exception throw new ioexception t this processor onerror new asserttrue events tostring events isempty testhelper asserterror errors 0 compositeexception class list throwable inners testhelper compositelist errors get 0 testhelper asserterror inners 0 class testhelper asserterror inners 1 ioexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite this this new action override public void run throws exception throw new ioexception processor oncomplete asserttrue events tostring events isempty testhelper assertundeliverable errors 0 ioexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose new maybe integer override protected void subscribeactual maybeobserver super integer observer observer onsubscribe disposable empty observer oncomplete observer onsubscribe disposable empty observer onsuccess 2 observer oncomplete observer onerror new ioexception composite this this this assertequals arrays object aslist oncomplete events testhelper assertundeliverable errors 0 ioexception class finally rxjavaplugins reset 
fo new futureobserver 
fo dispose assertfalse fo iscancelled assertfalse fo isdisposed assertfalse fo isdone for int i 0 i 2 i fo cancel i 0 asserttrue fo iscancelled asserttrue fo isdisposed asserttrue fo isdone list throwable errors testhelper trackpluginerrors try fo onnext 1 fo onerror new testexception first fo onerror new testexception second fo oncomplete asserttrue fo iscancelled asserttrue fo isdisposed asserttrue fo isdone testhelper assertundeliverable errors 0 testexception class testhelper assertundeliverable errors 1 testexception class finally rxjavaplugins reset 
assertfalse fo isdone assertfalse fo iscancelled fo cancel false asserttrue fo isdone asserttrue fo iscancelled try fo get fail should have thrown catch ex try fo get 1 timeunit milliseconds fail should have thrown catch ex 
list throwable errors testhelper trackpluginerrors try fo onerror new testexception one fo onerror new testexception two try fo get 5 timeunit milliseconds catch executionexception ex asserttrue ex tostring ex getcause instanceof testexception assertequals one ex getcause getmessage testhelper assertundeliverable errors 0 testexception class two finally rxjavaplugins reset 
fo onnext 1 fo oncomplete assertequals 1 fo get 5 timeunit milliseconds intvalue 
list throwable errors testhelper trackpluginerrors try disposable d1 disposable empty fo onsubscribe d1 disposable d2 disposable empty fo onsubscribe d2 assertfalse d1 isdisposed asserttrue d2 isdisposed testhelper asserterror errors 0 class disposable already set finally rxjavaplugins reset 
for int i 0 i testhelper race default loops i final futureobserver integer fo new futureobserver runnable r new runnable override public void run fo cancel false testhelper race r r 
schedulers single scheduledirect new runnable override public void run fo onnext 1 fo oncomplete 100 timeunit milliseconds assertequals 1 fo get 5 timeunit seconds intvalue 
rxjavaplugins seterrorhandler functions emptyconsumer try for int i 0 i testhelper race default loops i final futureobserver integer fo new futureobserver final testexception ex new testexception runnable r1 new runnable override public void run fo cancel false runnable r2 new runnable override public void run fo onerror ex testhelper race r1 r2 finally rxjavaplugins reset 
rxjavaplugins seterrorhandler functions emptyconsumer try for int i 0 i testhelper race default loops i final futureobserver integer fo new futureobserver if i 3 0 fo onsubscribe disposable empty if i 2 0 fo onnext 1 runnable r1 new runnable override public void run fo cancel false runnable r2 new runnable override public void run fo oncomplete testhelper race r1 r2 finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try fo onerror new testexception one fo oncomplete try fo get 5 timeunit milliseconds catch executionexception ex asserttrue ex tostring ex getcause instanceof testexception assertequals one ex getcause getmessage testhelper assertundeliverable errors 0 class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try fo oncomplete fo onerror new testexception one try assertnull fo get 5 timeunit milliseconds catch executionexception ex asserttrue ex tostring ex getcause instanceof testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try fo onnext 1 fo oncomplete fo onerror new testexception one assertequals integer 1 fo get 5 timeunit milliseconds testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try fo cancel true fo onerror new testexception one try fo get 5 timeunit milliseconds fail should have thrown catch ex testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try fo cancel true fo oncomplete try fo get 5 timeunit milliseconds fail should have thrown catch ex testhelper assertundeliverable errors 0 class finally rxjavaplugins reset 
fo onnext 1 fo oncomplete fo oncomplete assertequals 1 fo get 5 timeunit milliseconds intvalue 
thread currentthread interrupt fo get 
schedulers single scheduledirect new runnable override public void run fo onnext 1 fo oncomplete 500 timeunit milliseconds assertequals 1 fo get intvalue 
try fo get 1 timeunit nanoseconds fail should have thrown catch timeoutexception expected assertequals timeoutmessage 1 timeunit nanoseconds expected getmessage 
for int i 0 i testhelper race default loops i final futureobserver integer fo new futureobserver runnable r new runnable override public void run fo cancel false disposable d disposable empty testhelper race r fo onsubscribe d 
testobserverex integer to new testobserverex integer integer o new integer integer to nullable override public integer poll throws exception return null override public int requestfusion int mode return 0 override public void onnext integer value override protected boolean beforedownstream return false o onsubscribe disposable disposed to assertnotsubscribed o offer 1 
integer integer o new integer integer new testobserver nullable override public integer poll throws exception return null override public int requestfusion int mode return 0 override public void onnext integer value o offer 1 2 
final future f single never tofuture assertfalse f iscancelled assertfalse f isdone f cancel true asserttrue f iscancelled asserttrue f isdone try f get fail should have thrown catch ex catch interruptedexception ex throw new assertionerror ex catch executionexception ex throw new assertionerror ex try f get 5 timeunit seconds fail should have thrown catch ex catch interruptedexception ex throw new assertionerror ex catch executionexception ex throw new assertionerror ex catch timeoutexception ex throw new assertionerror ex 
for int i 0 i testhelper race default loops i final future f single never tofuture runnable r new runnable override public void run f cancel true testhelper race r r 
future f single never tofuture try f get 100 timeunit milliseconds fail should have thrown catch timeoutexception expected assertequals timeoutmessage 100 timeunit milliseconds expected getmessage 
future integer f single just 1 tofuture disposable f dispose asserttrue disposable f isdisposed 
future f single error new testexception tofuture try f get 5 timeunit seconds fail should have thrown catch executionexception ex asserttrue ex tostring ex getcause instanceof testexception 
future integer f single just 1 tofuture assertequals 1 f get 5 timeunit seconds intvalue 
future integer f single just 1 delay 100 timeunit milliseconds tofuture assertequals 1 f get 5 timeunit seconds intvalue 
for int i 0 i testhelper race default loops i final publishsubject integer ps publishsubject create final future f ps single 99 tofuture ps onnext 1 runnable r1 new runnable override public void run f cancel true runnable r2 new runnable override public void run ps oncomplete testhelper race r1 r2 
rxjavaplugins seterrorhandler functions emptyconsumer try for int i 0 i testhelper race default loops i final publishsubject integer ps publishsubject create final future f ps single 99 tofuture final testexception ex new testexception runnable r1 new runnable override public void run f cancel true runnable r2 new runnable override public void run ps onerror ex testhelper race r1 r2 finally rxjavaplugins reset 
events add oncomplete 
events add t 
processor subscribe this this composite asserttrue composite size 0 asserttrue events tostring events isempty processor oncomplete assertequals 0 composite size assertequals arrays object aslist oncomplete events 
disposable d processor subscribe this this composite asserttrue d getclass tostring d hascustomonerror asserttrue composite size 0 asserttrue events tostring events isempty processor onerror new ioexception asserttrue events tostring events get 0 instanceof ioexception assertequals 0 composite size 
processor subscribe this this composite asserttrue composite size 0 asserttrue events tostring events isempty processor oncomplete assertequals 0 composite size assertequals arrays object aslist oncomplete events 
processor subscribe this this composite asserttrue composite size 0 asserttrue events tostring events isempty processor onerror new ioexception asserttrue events tostring events get 0 instanceof ioexception assertequals 0 composite size 
disposable d processor subscribe this this composite asserttrue composite size 0 asserttrue events tostring events isempty assertfalse d isdisposed d dispose d dispose asserttrue d isdisposed assertequals 0 composite size assertfalse processor hasobservers 
list throwable errors testhelper trackpluginerrors try processor subscribe this t throw new ioexception t composite processor onerror new asserttrue events tostring events isempty testhelper asserterror errors 0 compositeexception class list throwable inners testhelper compositelist errors get 0 testhelper asserterror inners 0 class testhelper asserterror inners 1 ioexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try processor subscribe new action override public void run throws exception throw new ioexception this composite processor oncomplete asserttrue events tostring events isempty testhelper assertundeliverable errors 0 ioexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try new completable override protected void subscribeactual completableobserver observer observer onsubscribe disposable empty observer oncomplete observer onsubscribe disposable empty observer oncomplete observer onerror new ioexception subscribe this this composite assertequals arrays object aslist oncomplete events testhelper assertundeliverable errors 0 ioexception class finally rxjavaplugins reset 
integer bmo new bmo dispose disposable d disposable empty bmo onsubscribe d 
final integer bmo new schedulers single scheduledirect new runnable override public void run bmo onsuccess 1 100 timeunit milliseconds assertequals 1 bmo blockingget 0 intvalue 
final integer bmo new schedulers single scheduledirect new runnable override public void run bmo onsuccess 1 100 timeunit milliseconds asserttrue bmo blockingawait 1 timeunit minutes 
final integer bmo new thread currentthread interrupt try bmo blockingget 0 fail should have thrown catch runtimeexception ex asserttrue ex getcause instanceof interruptedexception finally thread interrupted 
integer o new functions integer emptyconsumer functions on error missing assertfalse o hascustomonerror 
integer o new functions integer emptyconsumer functions throwable emptyconsumer asserttrue o hascustomonerror 
return new queuedrainobserver integer integer integer to new spscarrayqueue 4 override public void onnext integer t fastpathemit t false d override public void onerror throwable t override public void oncomplete override public void onsubscribe disposable d override public void accept observer super integer a integer v super accept a v a onnext v 
return new queuedrainobserver integer integer integer to new spscarrayqueue 4 override public void onnext integer t fastpathorderedemit t false d override public void onerror throwable t override public void oncomplete override public void onsubscribe disposable d override public void accept observer super integer a integer v super accept a v a onnext v 
testobserver integer to new testobserver disposable d disposable empty queuedrainobserver integer integer integer qd createunordered to d to onsubscribe disposable empty qd enter qd onnext 1 to assertempty 
testobserver integer to new testobserver disposable d disposable empty queuedrainobserver integer integer integer qd createordered to d to onsubscribe disposable empty qd enter qd onnext 1 to assertempty 
testobserver integer to new testobserver disposable d disposable empty queuedrainobserver integer integer integer qd createordered to d to onsubscribe disposable empty qd queue offer 0 qd onnext 1 to assertvaluesonly 0 1 
for int i 0 i testhelper race long loops i testobserver integer to new testobserver disposable d disposable empty final queuedrainobserver integer integer integer qd createunordered to d to onsubscribe disposable empty runnable r1 new runnable override public void run qd onnext 1 testhelper race r1 r1 to assertvaluesonly 1 1 
for int i 0 i testhelper race long loops i testobserver integer to new testobserver disposable d disposable empty final queuedrainobserver integer integer integer qd createordered to d to onsubscribe disposable empty runnable r1 new runnable override public void run qd onnext 1 testhelper race r1 r1 to assertvaluesonly 1 1 
events add t 
return source subscribe onsuccess onerror composite 
disposable d subscribeautodispose processor composite this functions on error missing assertfalse d getclass tostring d hascustomonerror asserttrue composite size 0 asserttrue events tostring events isempty processor onsuccess 1 assertequals 0 composite size assertequals arrays object aslist 1 events 
subscribeautodispose processor composite this this asserttrue composite size 0 asserttrue events tostring events isempty processor onsuccess 1 assertequals 0 composite size assertequals arrays object aslist 1 events 
disposable d subscribeautodispose processor composite this this asserttrue d getclass tostring d hascustomonerror asserttrue composite size 0 asserttrue events tostring events isempty processor onerror new ioexception asserttrue events tostring events get 0 instanceof ioexception assertequals 0 composite size 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite new consumer object override public void accept object t throws exception throw new ioexception this processor onsuccess 1 asserttrue events tostring events isempty testhelper assertundeliverable errors 0 ioexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose processor composite this new consumer throwable override public void accept throwable t throws exception throw new ioexception t processor onerror new asserttrue events tostring events isempty testhelper asserterror errors 0 compositeexception class list throwable inners testhelper compositelist errors get 0 testhelper asserterror inners 0 class testhelper asserterror inners 1 ioexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try subscribeautodispose new single integer override protected void subscribeactual singleobserver super integer observer observer onsubscribe disposable empty observer onsuccess 1 observer onsubscribe disposable empty observer onsuccess 2 observer onerror new ioexception composite this this assertequals arrays object aslist 1 events testhelper assertundeliverable errors 0 ioexception class finally rxjavaplugins reset 
o new functions on error missing functions empty action assertfalse o hascustomonerror 
o new functions throwable emptyconsumer functions empty action asserttrue o hascustomonerror 
upstream dispose complete value complete value 
list throwable errors testhelper trackpluginerrors try testobserver integer to new testobserver takefirst source new takefirst to source onsubscribe disposable empty disposable d disposable empty source onsubscribe d asserttrue d isdisposed source onnext 1 to assertresult 1 testhelper asserterror errors 0 class finally rxjavaplugins reset 
testobserver integer to new testobserver takefirst source new takefirst to source onsubscribe disposable empty source onerror new testexception to assertfailure testexception class 
testobserver integer to new testobserver takefirst source new takefirst to source onsubscribe disposable empty source oncomplete to assertresult 
testobserver integer to new testobserver takefirst source new takefirst to disposable d disposable empty source onsubscribe d assertfalse d isdisposed to dispose asserttrue d isdisposed asserttrue source isdisposed 
list throwable errors testhelper trackpluginerrors try testobserverex integer to new testobserverex queuefuseable any takefirst source new takefirst to disposable d disposable empty source onsubscribe d to assertfuseable to assertfusionmode queuefuseable async source onnext 1 source onnext 1 source onerror new testexception source oncomplete asserttrue d isdisposed to assertresult 1 testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserverex integer to new testobserverex queuefuseable sync takefirst source new takefirst to disposable d disposable empty source onsubscribe d to assertfuseable to assertfusionmode queuefuseable none source onnext 1 source onnext 1 source onerror new testexception source oncomplete asserttrue d isdisposed to assertresult 1 testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
this value value 
list throwable errors testhelper trackpluginerrors try testobserverex integer to new testobserverex queuefuseable none takelast source new takelast to disposable d disposable empty source onsubscribe d source onnext 1 source oncomplete source oncomplete source onerror new testexception to assertresult 1 testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserverex integer to new testobserverex queuefuseable none takelast source new takelast to disposable d disposable empty source onsubscribe d source onnext 1 source onerror new testexception source onerror new testexception second source oncomplete to assertfailure testexception class testhelper assertundeliverable errors 0 testexception class second finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserverex integer to new testobserverex queuefuseable any takelast source new takelast to disposable d disposable empty source onsubscribe d source onnext 1 source oncomplete source oncomplete source onerror new testexception to assertresult 1 testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try testobserverex integer to new testobserverex queuefuseable any takelast source new takelast to disposable d disposable empty source onsubscribe d source onnext 1 source onerror new testexception source onerror new testexception second source oncomplete to assertfailure testexception class testhelper assertundeliverable errors 0 testexception class second finally rxjavaplugins reset 
testobserverex integer to new testobserverex queuefuseable none takelast source new takelast to disposable d disposable empty source onsubscribe d to dispose source onnext 1 source oncomplete to assertnovalues assertnoerrors assertnotcomplete 
final testobserver integer to new testobserver takelast source new takelast new observer integer disposable upstream override public void onsubscribe disposable d this upstream d to onsubscribe d override public void onnext integer value to onnext value upstream dispose override public void onerror throwable e to onerror e override public void oncomplete to oncomplete source onsubscribe disposable empty source onnext 1 source oncomplete to assertvalue 1 assertnoerrors assertnotcomplete 
testobserverex integer to new testobserverex queuefuseable any takelast source new takelast to disposable d disposable empty source onsubscribe d source oncomplete to assertresult 
testobserverex integer to new testobserverex queuefuseable none takelast source new takelast to disposable d disposable empty source onsubscribe d source oncomplete to assertresult 
final testobserver integer to new testobserver takelast source new takelast new observer integer queuedisposable integer d suppresswarnings unchecked override public void onsubscribe disposable d this d queuedisposable integer d to onsubscribe d this d requestfusion queuefuseable any override public void onnext integer value if d isempty integer v null try to onnext d poll v d poll catch throwable ex to onerror ex assertnull v asserttrue d isempty override public void onerror throwable e to onerror e override public void oncomplete to oncomplete source onsubscribe disposable empty source onnext 1 source oncomplete to assertresult 1 
final testobserver integer to new testobserver takelast source new takelast new observer integer queuedisposable integer d suppresswarnings unchecked override public void onsubscribe disposable d this d queuedisposable integer d to onsubscribe d this d requestfusion queuefuseable any override public void onnext integer value d clear asserttrue d isempty override public void onerror throwable e to onerror e override public void oncomplete to oncomplete source onsubscribe disposable empty source onnext 1 source oncomplete to assertnovalues assertnoerrors assertcomplete 
testobserverex integer to new testobserverex queuefuseable none takelast source new takelast to testhelper assertnooffer source 
final testobserver integer to new testobserver takefirst source new takefirst new observer integer queuedisposable integer d suppresswarnings unchecked override public void onsubscribe disposable d this d queuedisposable integer d to onsubscribe d this d requestfusion queuefuseable any override public void onnext integer value override public void onerror throwable e to onerror e override public void oncomplete to oncomplete source onsubscribe disposable empty source onnext 1 to assertnovalues assertnoerrors assertcomplete 
queue object q new arraydeque blockingobserver object bo new blockingobserver q bo dispose assertequals blockingobserver terminated q poll bo dispose assertnull q poll 
testhelper doubleonsubscribe new new testobserver functions emptyconsumer functions empty action 
list throwable errors testhelper trackpluginerrors try integer o new new testobserver functions emptyconsumer new action override public void run throws exception throw new testexception o onsubscribe disposable empty assertfalse o isdisposed o dispose asserttrue o isdisposed testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
integer bf new disposable d disposable empty bf onsubscribe d bf onnext 1 asserttrue d isdisposed assertequals 1 bf value intvalue assertequals 0 bf getcount bf onnext 2 assertequals 1 bf value intvalue assertequals 0 bf getcount bf onerror new testexception assertequals 1 bf value intvalue assertnull bf error assertequals 0 bf getcount 
o new assertfalse o hascustomonerror 
futuremultiobserver integer f new futuremultiobserver asserttrue f cancel true disposable d disposable empty f onsubscribe d asserttrue d isdisposed 
futuremultiobserver integer f new futuremultiobserver disposable d disposable empty f onsubscribe d asserttrue f cancel true f oncomplete 
q offer 1 
q offer 1 2 
final list object received new arraylist lambdaobserver object o new lambdaobserver new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception received add 100 new consumer disposable override public void accept disposable d throws exception throw new testexception assertfalse o isdisposed observable just 1 subscribe o asserttrue received tostring received get 0 instanceof testexception assertequals received tostring 1 received size asserttrue o isdisposed 
final list object received new arraylist lambdaobserver object o new lambdaobserver new consumer object override public void accept object v throws exception throw new testexception new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception received add 100 new consumer disposable override public void accept disposable d throws exception assertfalse o isdisposed observable just 1 subscribe o asserttrue received tostring received get 0 instanceof testexception assertequals received tostring 1 received size asserttrue o isdisposed 
list throwable errors testhelper trackpluginerrors try final list object received new arraylist lambdaobserver object o new lambdaobserver new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception throw new testexception inner new action override public void run throws exception received add 100 new consumer disposable override public void accept disposable d throws exception assertfalse o isdisposed observable integer error new testexception outer subscribe o asserttrue received tostring received isempty asserttrue o isdisposed testhelper asserterror errors 0 compositeexception class list throwable ce testhelper compositelist errors get 0 testhelper asserterror ce 0 testexception class outer testhelper asserterror ce 1 testexception class inner finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try final list object received new arraylist lambdaobserver object o new lambdaobserver new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception throw new testexception new consumer disposable override public void accept disposable d throws exception assertfalse o isdisposed observable integer empty subscribe o asserttrue received tostring received isempty asserttrue o isdisposed testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try observable integer source new observable integer override public void subscribeactual observer super integer observer disposable d1 disposable empty observer onsubscribe d1 disposable d2 disposable empty observer onsubscribe d2 assertfalse d1 isdisposed asserttrue d2 isdisposed observer onnext 1 observer oncomplete final list object received new arraylist lambdaobserver object o new lambdaobserver new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception received add 100 new consumer disposable override public void accept disposable d throws exception source subscribe o assertequals arrays aslist 1 100 received testhelper asserterror errors 0 class finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try observable integer source new observable integer override public void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer oncomplete observer onnext 2 observer onerror new testexception observer oncomplete final list object received new arraylist lambdaobserver object o new lambdaobserver new consumer object override public void accept object v throws exception received add v new consumer throwable override public void accept throwable e throws exception received add e new action override public void run throws exception received add 100 new consumer disposable override public void accept disposable d throws exception source subscribe o assertequals arrays aslist 1 100 received testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
publishsubject integer ps publishsubject create final list throwable errors new arraylist ps subscribe new consumer integer override public void accept integer v throws exception throw new testexception new consumer throwable override public void accept throwable e throws exception errors add e asserttrue no observers ps hasobservers asserttrue has errors already errors isempty ps onnext 1 assertfalse has observers ps hasobservers assertfalse no errors errors isempty asserttrue errors tostring errors get 0 instanceof testexception 
publishsubject integer ps publishsubject create final list throwable errors new arraylist ps subscribe new lambdaobserver new consumer integer override public void accept integer v throws exception new consumer throwable override public void accept throwable e throws exception errors add e new action override public void run throws exception new consumer disposable override public void accept disposable d throws exception throw new testexception assertfalse has observers ps hasobservers assertfalse no errors errors isempty asserttrue errors tostring errors get 0 instanceof testexception 
lambdaobserver integer o new lambdaobserver functions integer emptyconsumer functions on error missing functions empty action functions disposable emptyconsumer assertfalse o hascustomonerror 
lambdaobserver integer o new lambdaobserver functions integer emptyconsumer functions throwable emptyconsumer functions empty action functions disposable emptyconsumer asserttrue o hascustomonerror 
list throwable errors testhelper trackpluginerrors try final list throwable observererrors collections synchronizedlist new arraylist lambdaobserver integer o new lambdaobserver functions integer emptyconsumer new consumer throwable override public void accept throwable t observererrors add t functions empty action functions disposable emptyconsumer o dispose o onerror new ioexception o onerror new ioexception asserttrue observererrors isempty testhelper assertundeliverable errors 0 ioexception class testhelper assertundeliverable errors 1 ioexception class finally rxjavaplugins reset 
testobserver integer to new testobserver integer d new to to onsubscribe d asserttrue d trydispose assertfalse d trydispose 
if crashoniterator 0 throw new testexception iterator return new crashingiterator crashonhasnext crashonnext 
if crashonhasnext 0 throw new testexception hasnext return true 
if crashonnext 0 throw new testexception next return count 
throw new 
list integer list new asserttrue list isempty assertequals 0 list size assertfalse list contains 1 assertfalse list remove integer 1 list new 16 asserttrue list add 1 asserttrue list addall arrays aslist 3 4 7 list add 1 2 asserttrue list addall 4 arrays aslist 5 6 asserttrue list contains 2 assertfalse list remove integer 10 assertequals arrays aslist 1 2 3 4 5 6 7 list assertfalse list isempty assertequals 7 list size iterator integer it list iterator for int i 1 i 8 i assertequals i it next intvalue assertarrayequals new object 1 2 3 4 5 6 7 list toarray assertarrayequals new integer 1 2 3 4 5 6 7 list toarray new integer 7 asserttrue list containsall arrays aslist 2 4 6 assertfalse list containsall arrays aslist 2 4 6 10 assertfalse list removeall arrays aslist 10 11 12 assertfalse list retainall arrays aslist 1 2 3 4 5 6 7 assertequals 7 list size for int i 1 i 8 i assertequals i list get i 1 intvalue for int i 1 i 8 i assertequals i list set i 1 i intvalue assertequals 2 list indexof 3 assertequals 5 list lastindexof 6 listiterator integer lit list listiterator 7 for int i 7 i 0 i assertequals i lit previous intvalue assertequals arrays aslist 3 4 5 list sublist 2 5 integer list2 new list2 addall arrays aslist 1 2 3 4 5 6 assertnotequals list2 list assertnotequals list list2 list2 add 7 assertequals list2 list assertequals list list2 list integer list3 new arraylist list3 addall arrays aslist 1 2 3 4 5 6 assertnotequals list3 list assertnotequals list list3 list3 add 7 assertequals list3 list assertequals list list3 assertequals list hashcode list3 hashcode assertequals list tostring list3 tostring list remove 0 assertequals 6 list size list clear assertequals 0 list size asserttrue list isempty 
errors testhelper trackpluginerrors 
rxjavaplugins reset 
testhelper checkutilityclass endconsumerhelper class 
subscriber integer consumer new defaultsubscriber integer override public void onnext integer t override public void onerror throwable t override public void oncomplete booleansubscription sub1 new booleansubscription consumer onsubscribe sub1 assertfalse sub1 iscancelled booleansubscription sub2 new booleansubscription consumer onsubscribe sub2 assertfalse sub1 iscancelled asserttrue sub2 iscancelled testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
$EMPTY$
$EMPTY$
$EMPTY$
subscriber integer consumer new enddefaultsubscriber booleansubscription sub1 new booleansubscription consumer onsubscribe sub1 assertfalse sub1 iscancelled booleansubscription sub2 new booleansubscription consumer onsubscribe sub2 assertfalse sub1 iscancelled asserttrue sub2 iscancelled testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage io reactivex rxjava3 internal util enddefaultsubscriber errors get 0 getmessage assertequals errors tostring 1 errors size 
subscriber integer consumer new disposablesubscriber integer override public void onnext integer t override public void onerror throwable t override public void oncomplete booleansubscription sub1 new booleansubscription consumer onsubscribe sub1 assertfalse sub1 iscancelled booleansubscription sub2 new booleansubscription consumer onsubscribe sub2 assertfalse sub1 iscancelled asserttrue sub2 iscancelled testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
subscriber integer consumer new resourcesubscriber integer override public void onnext integer t override public void onerror throwable t override public void oncomplete booleansubscription sub1 new booleansubscription consumer onsubscribe sub1 assertfalse sub1 iscancelled booleansubscription sub2 new booleansubscription consumer onsubscribe sub2 assertfalse sub1 iscancelled asserttrue sub2 iscancelled testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
observer integer consumer new defaultobserver integer override public void onnext integer t override public void onerror throwable t override public void oncomplete disposable sub1 disposable empty consumer onsubscribe sub1 assertfalse sub1 isdisposed disposable sub2 disposable empty consumer onsubscribe sub2 assertfalse sub1 isdisposed asserttrue sub2 isdisposed testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
observer integer consumer new disposableobserver integer override public void onnext integer t override public void onerror throwable t override public void oncomplete disposable sub1 disposable empty consumer onsubscribe sub1 assertfalse sub1 isdisposed disposable sub2 disposable empty consumer onsubscribe sub2 assertfalse sub1 isdisposed asserttrue sub2 isdisposed testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
observer integer consumer new resourceobserver integer override public void onnext integer t override public void onerror throwable t override public void oncomplete disposable sub1 disposable empty consumer onsubscribe sub1 assertfalse sub1 isdisposed disposable sub2 disposable empty consumer onsubscribe sub2 assertfalse sub1 isdisposed asserttrue sub2 isdisposed testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
singleobserver integer consumer new integer override public void onsuccess integer t override public void onerror throwable t disposable sub1 disposable empty consumer onsubscribe sub1 assertfalse sub1 isdisposed disposable sub2 disposable empty consumer onsubscribe sub2 assertfalse sub1 isdisposed asserttrue sub2 isdisposed testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
singleobserver integer consumer new integer override public void onsuccess integer t override public void onerror throwable t disposable sub1 disposable empty consumer onsubscribe sub1 assertfalse sub1 isdisposed disposable sub2 disposable empty consumer onsubscribe sub2 assertfalse sub1 isdisposed asserttrue sub2 isdisposed testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
maybeobserver integer consumer new integer override public void onsuccess integer t override public void onerror throwable t override public void oncomplete disposable sub1 disposable empty consumer onsubscribe sub1 assertfalse sub1 isdisposed disposable sub2 disposable empty consumer onsubscribe sub2 assertfalse sub1 isdisposed asserttrue sub2 isdisposed testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
maybeobserver integer consumer new integer override public void onsuccess integer t override public void onerror throwable t override public void oncomplete disposable sub1 disposable empty consumer onsubscribe sub1 assertfalse sub1 isdisposed disposable sub2 disposable empty consumer onsubscribe sub2 assertfalse sub1 isdisposed asserttrue sub2 isdisposed testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
completableobserver consumer new override public void onerror throwable t override public void oncomplete disposable sub1 disposable empty consumer onsubscribe sub1 assertfalse sub1 isdisposed disposable sub2 disposable empty consumer onsubscribe sub2 assertfalse sub1 isdisposed asserttrue sub2 isdisposed testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
completableobserver consumer new override public void onerror throwable t override public void oncomplete disposable sub1 disposable empty consumer onsubscribe sub1 assertfalse sub1 isdisposed disposable sub2 disposable empty consumer onsubscribe sub2 assertfalse sub1 isdisposed asserttrue sub2 isdisposed testhelper asserterror errors 0 class assertequals endconsumerhelper composemessage consumer getclass getname errors get 0 getmessage assertequals errors tostring 1 errors size 
disposable d1 disposable empty assertfalse endconsumerhelper validate disposablehelper disposed d1 getclass asserttrue d1 isdisposed asserttrue errors tostring errors isempty 
booleansubscription bs1 new booleansubscription assertfalse endconsumerhelper validate subscriptionhelper cancelled bs1 getclass asserttrue bs1 iscancelled asserttrue errors tostring errors isempty 
list string result new arraylist try bufferedreader in new bufferedreader new filereader f try string line while line in readline null result add line finally in close catch ioexception ex ex printstacktrace return result 
file observables new file basepath observable listfiles int count 0 for file f observables if f getname endswith java continue class clazz class forname basepackage observable f getname replace java string cn f getname replace java replace observable flowable file f2 new file basepath flowable cn java if f2 exists continue class clazz2 class forname basepackage flowable cn set string methods2 new hashset for method m clazz2 getmethods methods2 add m getname for method m clazz getmethods if methods2 contains m getname methods2 contains m getname replace observable flowable count system out println system out print java lang runtimeexception missing system out println m getname system out print at system out print clazz getname system out print system out print clazz getsimplename system out print java list string lines readalllines f int j 1 for int i 1 i lines size i if lines get i 1 contains public void m getname j i system out print j system out println system out print at system out print clazz2 getname system out print system out print clazz2 getsimplename lines readalllines f2 system out print java system out print lines size 1 system out println system out println system out println count 
return 1 
return this o 
value v1 new value value v2 new value openhashset value set new openhashset asserttrue set add v1 assertfalse set add v1 assertfalse set remove v2 asserttrue set add v2 assertfalse set add v2 asserttrue set remove v2 assertfalse set remove v2 
final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final observer a null final testobserver to new testobserver observer observer new observer override public void onsubscribe disposable d to onsubscribe d override public void onnext object t if t equals 1 halfserializer onnext a 0 2 wip error to onnext t override public void onerror throwable t to onerror t override public void oncomplete to oncomplete a 0 observer observer onsubscribe disposable empty halfserializer onnext observer 1 wip error to assertvalue 1 assertnoerrors assertnotcomplete 
final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final observer a null final testobserver to new testobserver observer observer new observer override public void onsubscribe disposable d to onsubscribe d override public void onnext object t if t equals 1 halfserializer onerror a 0 new testexception wip error to onnext t override public void onerror throwable t to onerror t override public void oncomplete to oncomplete a 0 observer observer onsubscribe disposable empty halfserializer onnext observer 1 wip error to assertfailure testexception class 1 
final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final observer a null final testobserver to new testobserver observer observer new observer override public void onsubscribe disposable d to onsubscribe d override public void onnext object t if t equals 1 halfserializer oncomplete a 0 wip error to onnext t override public void onerror throwable t to onerror t override public void oncomplete to oncomplete a 0 observer observer onsubscribe disposable empty halfserializer onnext observer 1 wip error to assertresult 1 
final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final observer a null final testobserver to new testobserver observer observer new observer override public void onsubscribe disposable d to onsubscribe d override public void onnext object t to onnext t override public void onerror throwable t to onerror t halfserializer onerror a 0 new ioexception wip error override public void oncomplete to oncomplete a 0 observer observer onsubscribe disposable empty halfserializer onerror observer new testexception wip error to assertfailure testexception class 
for int i 0 i testhelper race default loops i final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final testobserver integer to new testobserver to onsubscribe disposable empty runnable r1 new runnable override public void run halfserializer onnext to 1 wip error runnable r2 new runnable override public void run halfserializer oncomplete to wip error testhelper race r1 r2 to assertcomplete assertnoerrors asserttrue to values size 1 
for int i 0 i testhelper race default loops i final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final testobserverex integer to new testobserverex to onsubscribe disposable empty final testexception ex new testexception runnable r1 new runnable override public void run halfserializer onerror to ex wip error runnable r2 new runnable override public void run halfserializer oncomplete to wip error testhelper race r1 r2 if to completions 0 to assertresult else to assertfailure testexception class 
return new consumer t override public void accept t t list add t 
return new supplier list t override public list t get return new arraylist 
return new biconsumer object object override public void accept object t1 object t2 throw e 
testhelper checkutilityclass pow2 class 
for int i 1 i 0 i 2 asserttrue pow2 ispoweroftwo i assertfalse pow2 ispoweroftwo 3 assertfalse pow2 ispoweroftwo 5 assertfalse pow2 ispoweroftwo 6 assertfalse pow2 ispoweroftwo 7 
testhelper checkenum hashmapsupplier class 
testhelper checkenum arraylistsupplier class 
testhelper checkenum errormode class 
linkedarraylist list new linkedarraylist 2 assertequals 0 list size list add 1 assertequals 1 list size list add 2 assertequals 2 list size list add 3 assertequals 3 list size assertequals 1 2 3 list tostring 
integer list new 2 list add 1 list add 2 list add 3 final list integer out new arraylist list foreachwhile new nonthrowingpredicate integer override public boolean test integer t2 out add t2 return t2 2 assertequals arrays aslist 1 2 out 
integer list new 2 list add 1 list add 2 list add 3 final list integer out new arraylist list foreachwhile 2 new bipredicate integer integer override public boolean test integer t1 integer t2 throws throwable out add t2 return t1 equals t2 assertequals arrays aslist 1 2 out 
integer list new 12 list add 1 list add 2 list add 3 final list integer out new arraylist list foreachwhile new nonthrowingpredicate integer override public boolean test integer t2 out add t2 return t2 2 assertequals arrays aslist 1 2 out 
integer list new 3 list add 1 list add 2 list add 3 final list integer out new arraylist list foreachwhile new nonthrowingpredicate integer override public boolean test integer t2 out add t2 return t2 2 assertequals arrays aslist 1 2 out 
integer list new 2 list add 1 list add 2 list add 3 final list integer out new arraylist list foreachwhile new nonthrowingpredicate integer override public boolean test integer t2 out add t2 return t2 3 assertequals arrays aslist 1 2 3 out 
integer list new 4 list add 1 list add 2 list add 3 final list integer out new arraylist list foreachwhile new nonthrowingpredicate integer override public boolean test integer t2 out add t2 return false assertequals arrays aslist 1 2 3 out 
integer list new 12 list add 1 list add 2 list add 3 final list integer out new arraylist list foreachwhile 2 new bipredicate integer integer override public boolean test integer t1 integer t2 throws throwable out add t2 return t1 equals t2 assertequals arrays aslist 1 2 out 
integer list new 3 list add 1 list add 2 list add 3 final list integer out new arraylist list foreachwhile 2 new bipredicate integer integer override public boolean test integer t1 integer t2 throws exception out add t2 return t1 equals t2 assertequals arrays aslist 1 2 out 
integer list new 2 list add 1 list add 2 list add 3 final list integer out new arraylist list foreachwhile 3 new bipredicate integer integer override public boolean test integer t1 integer t2 throws exception out add t2 return false assertequals arrays aslist 1 2 3 out 
testhelper checkutilityclass queuedrainhelper class 
return type name 
testhelper checkutilityclass halfserializer class 
final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final subscriber a null final testsubscriber ts new testsubscriber flowablesubscriber s new flowablesubscriber override public void onsubscribe subscription s ts onsubscribe s override public void onnext object t if t equals 1 halfserializer onnext a 0 2 wip error ts onnext t override public void onerror throwable t ts onerror t override public void oncomplete ts oncomplete a 0 s s onsubscribe new booleansubscription halfserializer onnext s 1 wip error ts assertvalue 1 assertnoerrors assertnotcomplete 
final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final subscriber a null final testsubscriber ts new testsubscriber flowablesubscriber s new flowablesubscriber override public void onsubscribe subscription s ts onsubscribe s override public void onnext object t if t equals 1 halfserializer onerror a 0 new testexception wip error ts onnext t override public void onerror throwable t ts onerror t override public void oncomplete ts oncomplete a 0 s s onsubscribe new booleansubscription halfserializer onnext s 1 wip error ts assertfailure testexception class 1 
final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final subscriber a null final testsubscriber ts new testsubscriber flowablesubscriber s new flowablesubscriber override public void onsubscribe subscription s ts onsubscribe s override public void onnext object t if t equals 1 halfserializer oncomplete a 0 wip error ts onnext t override public void onerror throwable t ts onerror t override public void oncomplete ts oncomplete a 0 s s onsubscribe new booleansubscription halfserializer onnext s 1 wip error ts assertresult 1 
final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final subscriber a null final testsubscriber ts new testsubscriber flowablesubscriber s new flowablesubscriber override public void onsubscribe subscription s ts onsubscribe s override public void onnext object t ts onnext t override public void onerror throwable t ts onerror t halfserializer onerror a 0 new ioexception wip error override public void oncomplete ts oncomplete a 0 s s onsubscribe new booleansubscription halfserializer onerror s new testexception wip error ts assertfailure testexception class 
for int i 0 i testhelper race default loops i final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final testsubscriber integer ts new testsubscriber ts onsubscribe new booleansubscription runnable r1 new runnable override public void run halfserializer onnext ts 1 wip error runnable r2 new runnable override public void run halfserializer oncomplete ts wip error testhelper race r1 r2 ts assertcomplete assertnoerrors asserttrue ts values size 1 
for int i 0 i testhelper race default loops i final atomicinteger wip new atomicinteger final atomicthrowable error new atomicthrowable final testsubscriberex integer ts new testsubscriberex ts onsubscribe new booleansubscription final testexception ex new testexception runnable r1 new runnable override public void run halfserializer onerror ts ex wip error runnable r2 new runnable override public void run halfserializer oncomplete ts wip error testhelper race r1 r2 if ts completions 0 ts assertresult else ts assertfailure testexception class 
return type https raw github com wiki reactivex rxjava images opmatrix type tolowercase png 
map string string classnotes notes map get operatorname if classnotes null return classnotes get clazzname substring 0 1 switch operatorname case empty if completable equals clazzname return use complete complete if single equals clazzname return never empty break return null 
testhelper checkutilityclass blockinghelper class 
countdownlatch cdl new countdownlatch 1 disposable d disposable empty thread currentthread interrupt try blockinghelper awaitforcomplete cdl d catch ex asserttrue d isdisposed asserttrue thread interrupted 
final countdownlatch cdl new countdownlatch 1 disposable d disposable empty schedulers computation scheduledirect new runnable override public void run cdl countdown 100 timeunit milliseconds blockinghelper awaitforcomplete cdl d assertfalse d isdisposed 
testobserverex integer to new testobserverex disposable d disposable empty assertfalse notificationlite acceptfull notificationlite disposable d to to assertsubscribed to dispose asserttrue d isdisposed 
testexception ex new testexception object n1 notificationlite error ex assertequals ex hashcode n1 hashcode assertnotequals n1 notificationlite complete 
asserttrue queuedrainhelper iscancelled new booleansupplier override public boolean getasboolean throws exception throw new ioexception 
queuedrainhelper request new subscription override public void request long n assertequals integer max value n override public void cancel integer max value 
queuedrainhelper request new subscription override public void request long n assertequals long max value n override public void cancel integer min value 
queuedrainhelper request new subscription override public void request long n assertequals integer max value 1 n override public void cancel integer max value 1 
testsubscriber integer ts new testsubscriber arraydeque integer queue new arraydeque atomiclong state new atomiclong booleansupplier iscancelled new booleansupplier override public boolean getasboolean throws exception return false ts onsubscribe new booleansubscription queuedrainhelper postcomplete ts queue state iscancelled ts assertresult 
testsubscriber integer ts new testsubscriber arraydeque integer queue new arraydeque atomiclong state new atomiclong booleansupplier iscancelled new booleansupplier override public boolean getasboolean throws exception return false ts onsubscribe new booleansubscription queue offer 1 state getandincrement queuedrainhelper postcomplete ts queue state iscancelled ts assertresult 1 
for int i 0 i testhelper race default loops i final testsubscriber integer ts new testsubscriber final arraydeque integer queue new arraydeque final atomiclong state new atomiclong final booleansupplier iscancelled new booleansupplier override public boolean getasboolean throws exception return false ts onsubscribe new booleansubscription queue offer 1 runnable r1 new runnable override public void run queuedrainhelper postcompleterequest 1 ts queue state iscancelled runnable r2 new runnable override public void run queuedrainhelper postcomplete ts queue state iscancelled testhelper race r1 r2 ts assertresult 1 
final testsubscriber integer ts new testsubscriber arraydeque integer queue new arraydeque atomiclong state new atomiclong booleansupplier iscancelled new booleansupplier override public boolean getasboolean throws exception return ts iscancelled ts onsubscribe new booleansubscription queue offer 1 state getandincrement ts cancel queuedrainhelper postcomplete ts queue state iscancelled ts assertempty 
final testsubscriber integer ts new testsubscriber integer override public void onnext integer t super onnext t cancel arraydeque integer queue new arraydeque atomiclong state new atomiclong booleansupplier iscancelled new booleansupplier override public boolean getasboolean throws exception return ts iscancelled ts onsubscribe new booleansubscription queue offer 1 state getandincrement queuedrainhelper postcomplete ts queue state iscancelled ts assertvalue 1 assertnoerrors assertnotcomplete 
testsubscriber integer ts new testsubscriber ts onsubscribe new booleansubscription queuedrain integer integer qd new queuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return null override public boolean enter return true override public long requested return 0 override public long produced long n return 0 override public int leave int m return 0 override public boolean accept subscriber super integer a integer v return false spscarrayqueue integer q new spscarrayqueue 32 q offer 1 queuedrainhelper drainmaxloop q ts false null qd ts assertfailure class 
testsubscriber integer ts new testsubscriber ts onsubscribe new booleansubscription queuedrain integer integer qd new queuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return null override public boolean enter return true override public long requested return 0 override public long produced long n return 0 override public int leave int m return 0 override public boolean accept subscriber super integer a integer v return false spscarrayqueue integer q new spscarrayqueue 32 q offer 1 disposable d disposable empty queuedrainhelper drainmaxloop q ts false d qd ts assertfailure class asserttrue d isdisposed 
testsubscriber integer ts new testsubscriber ts onsubscribe new booleansubscription queuedrain integer integer qd new queuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return null override public boolean enter return true override public long requested return 1 override public long produced long n return 0 override public int leave int m return 0 override public boolean accept subscriber super integer a integer v return false spscarrayqueue integer q new spscarrayqueue 32 q offer 1 queuedrainhelper drainmaxloop q ts false null qd ts assertempty 
testsubscriber integer ts new testsubscriber ts onsubscribe new booleansubscription queuedrain integer integer qd new queuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return null override public boolean enter return true override public long requested return 0 override public long produced long n return 0 override public int leave int m return 0 override public boolean accept subscriber super integer a integer v return false spscarrayqueue integer q new spscarrayqueue 32 queuedrainhelper checkterminated true true ts true q qd ts assertresult 
testsubscriber integer ts new testsubscriber ts onsubscribe new booleansubscription queuedrain integer integer qd new queuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return null override public boolean enter return true override public long requested return 0 override public long produced long n return 0 override public int leave int m return 0 override public boolean accept subscriber super integer a integer v return false spscarrayqueue integer q new spscarrayqueue 32 queuedrainhelper checkterminated true false ts true q qd ts assertempty 
testsubscriber integer ts new testsubscriber ts onsubscribe new booleansubscription queuedrain integer integer qd new queuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return new testexception override public boolean enter return true override public long requested return 0 override public long produced long n return 0 override public int leave int m return 0 override public boolean accept subscriber super integer a integer v return false spscarrayqueue integer q new spscarrayqueue 32 queuedrainhelper checkterminated true true ts true q qd ts assertfailure testexception class 
testsubscriber integer ts new testsubscriber ts onsubscribe new booleansubscription queuedrain integer integer qd new queuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return new testexception override public boolean enter return true override public long requested return 0 override public long produced long n return 0 override public int leave int m return 0 override public boolean accept subscriber super integer a integer v return false spscarrayqueue integer q new spscarrayqueue 32 queuedrainhelper checkterminated true false ts false q qd ts assertfailure testexception class 
testobserver integer to new testobserver to onsubscribe disposable empty observablequeuedrain integer integer qd new observablequeuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return null override public boolean enter return true override public int leave int m return 0 override public void accept observer super integer a integer v spscarrayqueue integer q new spscarrayqueue 32 queuedrainhelper checkterminated true true to true q null qd to assertresult 
testobserver integer to new testobserver to onsubscribe disposable empty observablequeuedrain integer integer qd new observablequeuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return null override public boolean enter return true override public int leave int m return 0 override public void accept observer super integer a integer v spscarrayqueue integer q new spscarrayqueue 32 disposable d disposable empty queuedrainhelper checkterminated true true to true q d qd to assertresult asserttrue d isdisposed 
testobserver integer to new testobserver to onsubscribe disposable empty observablequeuedrain integer integer qd new observablequeuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return null override public boolean enter return true override public int leave int m return 0 override public void accept observer super integer a integer v spscarrayqueue integer q new spscarrayqueue 32 queuedrainhelper checkterminated true false to true q null qd to assertempty 
testobserver integer to new testobserver to onsubscribe disposable empty observablequeuedrain integer integer qd new observablequeuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return new testexception override public boolean enter return true override public int leave int m return 0 override public void accept observer super integer a integer v spscarrayqueue integer q new spscarrayqueue 32 queuedrainhelper checkterminated true true to true q null qd to assertfailure testexception class 
testobserver integer to new testobserver to onsubscribe disposable empty observablequeuedrain integer integer qd new observablequeuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return new testexception override public boolean enter return true override public int leave int m return 0 override public void accept observer super integer a integer v spscarrayqueue integer q new spscarrayqueue 32 queuedrainhelper checkterminated true false to false q null qd to assertfailure testexception class 
testobserver integer to new testobserver to onsubscribe disposable empty observablequeuedrain integer integer qd new observablequeuedrain integer integer override public boolean cancelled return false override public boolean done return false override public throwable error return new testexception override public boolean enter return true override public int leave int m return 0 override public void accept observer super integer a integer v spscarrayqueue integer q new spscarrayqueue 32 disposable d disposable empty queuedrainhelper checkterminated true false to false q d qd to assertfailure testexception class asserttrue d isdisposed 
testsubscriber integer ts new testsubscriber queue integer q new arraydeque q offer 1 atomiclong state new atomiclong queuedrainhelper completed mask queuedrainhelper postcomplete ts q state new booleansupplier override public boolean getasboolean throws exception return false 
testhelper checkutilityclass exceptionhelper class 
for int i 0 i testhelper race default loops i final atomicreference throwable error new atomicreference final testexception ex new testexception runnable r new runnable override public void run asserttrue exceptionhelper addthrowable error ex testhelper race r r 
exceptionhelper exception throwifthrowable new internalerror 
mergerbifunction integer merger new mergerbifunction new comparator integer override public int compare integer o1 integer o2 return o1 compareto o2 list integer list merger apply collections integer emptylist arrays aslist 3 5 assertequals arrays aslist 3 5 list 
mergerbifunction integer merger new mergerbifunction new comparator integer override public int compare integer o1 integer o2 return o1 compareto o2 list integer list merger apply collections integer emptylist collections integer emptylist assertequals collections integer emptylist list 
mergerbifunction integer merger new mergerbifunction new comparator integer override public int compare integer o1 integer o2 return o1 compareto o2 list integer list merger apply arrays aslist 2 4 collections integer emptylist assertequals arrays aslist 2 4 list 
mergerbifunction integer merger new mergerbifunction new comparator integer override public int compare integer o1 integer o2 return o1 compareto o2 list integer list merger apply arrays aslist 2 4 arrays aslist 3 5 assertequals arrays aslist 2 3 4 5 list 
mergerbifunction integer merger new mergerbifunction new comparator integer override public int compare integer o1 integer o2 return o1 compareto o2 list integer list merger apply arrays aslist 3 5 arrays aslist 2 4 assertequals arrays aslist 2 3 4 5 list 
atomicthrowable ex new atomicthrowable assertfalse ex isterminated assertnull ex terminate asserttrue ex isterminated 
list throwable errors testhelper trackpluginerrors try atomicthrowable ex new atomicthrowable ex asserttrue errors errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try atomicthrowable ex new atomicthrowable ex terminate ex asserttrue errors errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try atomicthrowable ex new atomicthrowable ex set new testexception ex testhelper assertundeliverable errors 0 testexception class assertequals 1 errors size finally rxjavaplugins reset 
testsubscriber object ts new testsubscriber ts onsubscribe new booleansubscription atomicthrowable ex new atomicthrowable ex tryterminateconsumer ts ts assertresult 
testsubscriber object ts new testsubscriber ts onsubscribe new booleansubscription atomicthrowable ex new atomicthrowable ex set new testexception ex tryterminateconsumer ts ts assertfailure testexception class 
testsubscriber object ts new testsubscriber ts onsubscribe new booleansubscription atomicthrowable ex new atomicthrowable ex terminate ex tryterminateconsumer ts ts assertempty 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex tryterminateconsumer observer object to to assertresult 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex set new testexception ex tryterminateconsumer observer object to to assertfailure testexception class 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex terminate ex tryterminateconsumer observer object to to assertempty 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex tryterminateconsumer maybeobserver object to to assertresult 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex set new testexception ex tryterminateconsumer maybeobserver object to to assertfailure testexception class 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex terminate ex tryterminateconsumer maybeobserver object to to assertempty 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex tryterminateconsumer singleobserver object to to assertempty 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex set new testexception ex tryterminateconsumer singleobserver object to to assertfailure testexception class 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex terminate ex tryterminateconsumer singleobserver object to to assertempty 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex tryterminateconsumer completableobserver to to assertresult 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex set new testexception ex tryterminateconsumer completableobserver to to assertfailure testexception class 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex terminate ex tryterminateconsumer completableobserver to to assertempty 
return new emitter t override public void onnext t value observer onnext value override public void onerror throwable error observer onerror error override public void oncomplete observer oncomplete 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex tryterminateconsumer wraptoemitter to to assertresult 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex set new testexception ex tryterminateconsumer wraptoemitter to to assertfailure testexception class 
testobserver object to new testobserver to onsubscribe disposable empty atomicthrowable ex new atomicthrowable ex terminate ex tryterminateconsumer wraptoemitter to to assertempty 
list throwable errors testhelper trackpluginerrors try atomicthrowable ex new atomicthrowable ex new testexception asserttrue errors errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try atomicthrowable ex new atomicthrowable ex terminate assertfalse ex new testexception assertfalse errors errors isempty testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
if crashoniterator 0 throw new testexception iterator return new crashonhasnext crashonnext mapper 
if crashonhasnext 0 throw new testexception hasnext return true 
if crashonnext 0 throw new testexception next try return mapper apply count catch throwable ex throw exceptionhelper wraporthrow ex 
throw new 
testhelper checkutilityclass backpressurehelper class 
assertequals 2l backpressurehelper addcap 1 1 assertequals long max value backpressurehelper addcap 1 long max value 1 assertequals long max value backpressurehelper addcap 1 long max value assertequals long max value backpressurehelper addcap long max value 1 long max value 1 assertequals long max value backpressurehelper addcap long max value long max value 
assertequals 6 backpressurehelper multiplycap 2 3 assertequals long max value backpressurehelper multiplycap 2 long max value assertequals long max value backpressurehelper multiplycap long max value long max value assertequals long max value backpressurehelper multiplycap 1l 32 1l 32 
list throwable list testhelper trackpluginerrors try atomiclong requested new atomiclong 1 assertequals 0 backpressurehelper produced requested 2 testhelper asserterror list 0 class more produced than requested 1 finally rxjavaplugins reset 
list throwable list testhelper trackpluginerrors try atomiclong requested new atomiclong 1 assertequals 0 backpressurehelper producedcancel requested 2 testhelper asserterror list 0 class more produced than requested 1 finally rxjavaplugins reset 
final atomiclong requested new atomiclong 1 for int i 0 i testhelper race default loops i runnable r1 new runnable override public void run backpressurehelper produced requested 1 runnable r2 new runnable override public void run backpressurehelper add requested 1 testhelper race r1 r2 
final atomiclong requested new atomiclong 1 for int i 0 i testhelper race default loops i runnable r1 new runnable override public void run backpressurehelper produced requested 1 runnable r2 new runnable override public void run backpressurehelper addcancel requested 1 testhelper race r1 r2 
testhelper checkutilityclass backpressurehelper class 
final atomiclong requested new atomiclong long min value assertequals long min value backpressurehelper addcancel requested 1 assertequals long min value backpressurehelper addcancel requested long max value requested set 0 assertequals 0 backpressurehelper addcancel requested long max value assertequals long max value backpressurehelper addcancel requested 1 assertequals long max value backpressurehelper addcancel requested long max value requested set 0 assertequals 0 backpressurehelper add requested long max value assertequals long max value backpressurehelper add requested 1 assertequals long max value backpressurehelper add requested long max value assertequals long max value backpressurehelper produced requested 1 assertequals long max value backpressurehelper produced requested long max value 
assertequals long max value backpressurehelper multiplycap 3 long max value 1 assertequals long max value backpressurehelper multiplycap 1 long max value 
testhelper checkutilityclass objecthelper class 
assertequals 1 objecthelper verifypositive 1 param 
assertequals 1l objecthelper verifypositive 1l param 
assertequals 1 objecthelper verifypositive 1 param 
assertequals 1l objecthelper verifypositive 1l param 
testhelper checkutilityclass functions class 
try method m functions hashsetsupplier class getmethod values m setaccessible true method e functions hashsetsupplier class getmethod valueof string class e setaccessible true for enum hashsetsupplier o enum hashsetsupplier m invoke null assertsame o e invoke null o name catch throwable ex throw exceptionhelper wraporthrow ex 
try method m functions naturalcomparator class getmethod values m setaccessible true method e functions naturalcomparator class getmethod valueof string class e setaccessible true for enum naturalcomparator o enum naturalcomparator m invoke null assertsame o e invoke null o name catch throwable ex throw exceptionhelper wraporthrow ex 
booleansupplier s new booleansupplier override public boolean getasboolean throws exception return false asserttrue functions predicatereversefor s test 1 s new booleansupplier override public boolean getasboolean throws exception return true assertfalse functions predicatereversefor s test 1 
functions tofunction new bifunction integer integer integer override public integer apply integer t1 integer t2 throws exception return null apply new object 20 
functions tofunction new function3 integer integer integer integer override public integer apply integer t1 integer t2 integer t3 throws exception return null apply new object 20 
functions tofunction new function4 integer integer integer integer integer override public integer apply integer t1 integer t2 integer t3 integer t4 throws exception return null apply new object 20 
functions tofunction new function5 integer integer integer integer integer integer override public integer apply integer t1 integer t2 integer t3 integer t4 integer t5 throws exception return null apply new object 20 
functions tofunction new function6 integer integer integer integer integer integer integer override public integer apply integer t1 integer t2 integer t3 integer t4 integer t5 integer t6 throws exception return null apply new object 20 
functions tofunction new function7 integer integer integer integer integer integer integer integer override public integer apply integer t1 integer t2 integer t3 integer t4 integer t5 integer t6 integer t7 throws exception return null apply new object 20 
functions tofunction new function8 integer integer integer integer integer integer integer integer integer override public integer apply integer t1 integer t2 integer t3 integer t4 integer t5 integer t6 integer t7 integer t8 throws exception return null apply new object 20 
functions tofunction new function9 integer integer integer integer integer integer integer integer integer integer override public integer apply integer t1 integer t2 integer t3 integer t4 integer t5 integer t6 integer t7 integer t8 integer t9 throws exception return null apply new object 20 
assertequals identityfunction functions identity tostring 
assertequals emptyaction functions empty action tostring 
assertequals emptyrunnable functions empty runnable tostring 
assertequals emptyconsumer functions empty consumer tostring 
list throwable errors testhelper trackpluginerrors try functions error consumer accept new testexception testhelper assertundeliverable errors 0 testexception class assertequals errors tostring 1 errors size finally rxjavaplugins reset 
completable fromcompletionstage completablefuture completedfuture 1 test assertresult 
completable fromcompletionstage completablefuture completedfuture null test assertresult 
completablefuture integer cf new completablefuture cf new testexception completable fromcompletionstage cf test assertfailure testexception class 
completable fromcompletionstage completablefuture integer completedfuture null test assertresult 
completablefuture integer cf new completablefuture testobserver void to completable fromcompletionstage cf test to assertempty to dispose cf complete 1 to assertempty 
testhelper checkdisposed completable fromcompletionstage new completablefuture 
completablefuture long cf new completablefuture cf new testexception return flowable fromcompletionstage cf 
return 1 
try stream integer stream observable integer empty blockingstream assertequals 0 stream toarray length 
try stream integer stream observable just 1 blockingstream assertarrayequals new integer 1 stream toarray integer new 
try stream integer stream observable range 1 5 blockingstream assertarrayequals new integer 1 2 3 4 5 stream toarray integer new 
try stream integer stream observable range 1 5 blockingstream 1 assertarrayequals new integer 1 2 3 4 5 stream toarray integer new 
try stream integer stream observable range 1 1000 subscribeon schedulers computation blockingstream list integer list stream collect collectors tolist assertequals 1000 list size for int i 1 i 1000 i assertequals i list get i 1 intvalue 
try stream integer stream observable range 1 1000 subscribeon schedulers computation blockingstream 1 list integer list stream collect collectors tolist assertequals 1000 list size for int i 1 i 1000 i assertequals i list get i 1 intvalue 
try stream integer stream observable integer error new testexception blockingstream stream toarray integer new fail should have thrown catch testexception expected 
unicastprocessor integer up unicastprocessor create up onnext 1 up onnext 2 up onnext 3 up onnext 4 up onnext 5 try stream integer stream up blockingstream assertarrayequals new integer 1 2 3 stream limit 3 toarray integer new assertfalse up hassubscribers 
maybe fromoptional optional of 1 test assertresult 1 
maybe fromoptional optional empty test assertresult 
flowable empty flatmapstream v stream of 1 2 3 4 5 test assertresult 
flowable empty hide flatmapstream v stream of 1 2 3 4 5 test assertresult 
flowable just 1 flatmapstream v stream of v 1 v 2 v 3 v 4 v 5 test assertresult 2 3 4 5 6 
flowable just 1 hide flatmapstream v stream of v 1 v 2 v 3 v 4 v 5 test assertresult 2 3 4 5 6 
flowable error new testexception flatmapstream v stream of 1 2 3 4 5 test assertfailure testexception class 
flowable fromcallable throw new testexception flatmapstream v stream of 1 2 3 4 5 test assertfailure testexception class 
flowable error new testexception hide flatmapstream v stream of 1 2 3 4 5 test assertfailure testexception class 
flowable range 1 5 flatmapstream v intstream range v 10 v 10 5 boxed test assertresult 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 40 41 42 43 44 50 51 52 53 54 
flowable range 1 5 hide flatmapstream v intstream range v 10 v 10 5 boxed test assertresult 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 40 41 42 43 44 50 51 52 53 54 
flowable range 1 5 flatmapstream v stream of test assertresult 
flowable range 1 5 flatmapstream v intstream range v 10 v 10 5 boxed take 12 test assertresult 10 11 12 13 14 20 21 22 23 24 30 31 
flowable range 1 5 hide flatmapstream v intstream range v 10 v 10 5 boxed take 12 test assertresult 10 11 12 13 14 20 21 22 23 24 30 31 
publishprocessor integer pp publishprocessor create atomicinteger calls new atomicinteger testsubscriber integer ts pp flatmapstream v stream of v 1 v 2 onclose calls getandincrement test 1 asserttrue pp hassubscribers pp onnext 1 ts assertvaluesonly 2 ts cancel assertfalse pp hassubscribers assertequals 1 calls get 
testhelper witherrortracking errors publishprocessor integer pp publishprocessor create testsubscriber integer ts pp flatmapstream v stream of v 1 v 2 onclose throw new testexception test 1 asserttrue pp hassubscribers pp onnext 1 ts assertvaluesonly 2 ts cancel assertfalse pp hassubscribers testhelper assertundeliverable errors 0 testexception class 
flowable range 1 1000 flatmapstream v intstream range v 1000 v 1000 1000 boxed test assertvaluecount 1 000 000 assertnoerrors assertcomplete 
flowable range 1 1000 hide flatmapstream v intstream range v 1000 v 1000 1000 boxed test assertvaluecount 1 000 000 assertnoerrors assertcomplete 
for int n 1 n 2048 n 2 flowable range 1 1000 flatmapstream v intstream range v 1000 v 1000 1000 boxed rebatchrequests n test withtag rebatch n assertvaluecount 1 000 000 assertnoerrors assertcomplete 
for int n 1 n 2048 n 2 flowable range 1 1000 hide flatmapstream v intstream range v 1000 v 1000 1000 boxed rebatchrequests n test withtag rebatch n assertvaluecount 1 000 000 assertnoerrors assertcomplete 
testhelper f f flatmapstream v stream of 1 2 
testhelper unicastprocessor create flatmapstream v stream of 1 2 
testhelper witherrortracking errors new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s onnext 2 s onnext 3 s onerror new testexception flatmapstream v stream of 1 2 1 test 0 assertfailure class testhelper assertundeliverable errors 0 testexception class 
flowable just 1 hide concatmapstream v throw new testexception test assertfailure testexception class 
flowable just 1 hide concatmapstream v null test assertfailure nullpointerexception class 
flowable just 1 hide concatmapstream v stream of 1 null test assertfailure nullpointerexception class 1 
flowable just 1 hide concatmapstream v stream generate throw new testexception test assertfailure testexception class 
atomicinteger counter new atomicinteger flowable just 1 hide concatmapstream v stream generate if counter getandincrement 0 return 1 throw new testexception test assertfailure testexception class 1 
testhelper witherrortracking errors publishprocessor integer pp publishprocessor create atomicinteger counter new atomicinteger testsubscriber integer ts pp hide concatmapstream v if counter getandincrement 0 return stream of 1 2 pp onerror new ioexception throw new testexception test pp onnext 1 pp onnext 2 ts assertfailure ioexception class 1 2 testhelper assertundeliverable errors 0 testexception class 
flowable range 1 5 hide concatmapstream v stream of v 1 test 0 assertempty requestmore 5 assertresult 1 2 3 4 5 
testsubscriber integer ts new testsubscriber suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer override public boolean hasnext return true override public integer next ts cancel return 1 flowable just 1 hide concatmapstream v stream subscribe ts ts assertempty 
unicastprocessor integer up unicastprocessor create testsubscriber integer ts up flatmapstream v stream of 1 2 test asserttrue up hassubscribers up onnext 1 ts assertvaluesonly 1 2 up oncomplete ts assertresult 1 2 
unicastprocessor integer up unicastprocessor create testsubscriber integer ts up map v v 1 flatmapstream v stream of 1 2 test asserttrue up hassubscribers up onnext 1 ts assertvaluesonly 1 2 up oncomplete ts assertresult 1 2 
unicastprocessor integer up unicastprocessor create testsubscriber integer ts up map v throw new testexception compose testhelper flatmapstream v stream of 1 2 test asserttrue up hassubscribers up onnext 1 assertfalse up hassubscribers ts assertfailure testexception class 
maybe just 1 stream of test assertresult 1 
maybe just 1 v stream of test assertresult 
maybe just 1 v stream of 2 3 4 5 6 test assertresult 2 3 4 5 6 
maybe just 1 v stream of 2 3 4 5 6 take 3 test assertresult 2 3 4 
suppresswarnings unchecked function super integer stream extends integer f mock function class maybe integer empty f test assertresult verify f never apply any 
suppresswarnings unchecked function super integer stream extends integer f mock function class maybe integer error new testexception f test assertfailure testexception class verify f never apply any 
maybe just 1 v throw new testexception test assertfailure testexception class 
testhelper checkdisposed maybe never stream of 
testhelper m m stream of 
testhelper maybesubject create stream of 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable any maybe just 1 v stream integer of subscribe ts ts assertfuseable assertfusionmode queuefuseable async assertresult 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable any maybe just 1 v stream integer of v subscribe ts ts assertfuseable assertfusionmode queuefuseable async assertresult 1 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable any maybe just 1 v stream integer of v v 1 v 2 subscribe ts ts assertfuseable assertfusionmode queuefuseable async assertresult 1 2 3 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable sync maybe just 1 v stream integer of v v 1 v 2 subscribe ts ts assertfuseable assertfusionmode queuefuseable none assertresult 1 2 3 
maybe just 1 v intstream rangeclosed 1 5 boxed test 0l assertempty requestmore 2 assertvaluesonly 1 2 requestmore 2 assertvaluesonly 1 2 3 4 requestmore 1 assertresult 1 2 3 4 5 
maybe just 1 v intstream rangeclosed 1 5 boxed rebatchrequests 1 test 0l assertempty requestmore 2 assertvaluesonly 1 2 requestmore 2 assertvaluesonly 1 2 3 4 requestmore 1 assertresult 1 2 3 4 5 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable any maybesubject integer ms maybesubject create ms v stream integer of v v 1 v 2 subscribe ts ts assertfuseable assertfusionmode queuefuseable async assertempty ms onsuccess 1 ts assertresult 1 2 3 
atomicreference queuesubscription integer qsr new atomicreference maybesubject integer ms maybesubject create ms stream of subscribe new flowablesubscriber integer override public void onnext integer t override public void onerror throwable t override public void oncomplete override suppresswarnings unchecked public void onsubscribe nonnull subscription s qsr set queuesubscription integer s queuesubscription integer qs qsr get assertequals queuefuseable async qs requestfusion queuefuseable async asserttrue qs isempty assertnull qs poll ms onsuccess 1 assertfalse qs isempty assertequals 1 qs poll intvalue asserttrue qs isempty assertnull qs poll qs cancel asserttrue qs isempty assertnull qs poll 
testsubscriber integer ts new testsubscriber maybe just 1 v stream of 1 2 3 4 5 subscribe new flowablesubscriber integer subscription upstream override public void onsubscribe nonnull subscription s ts onsubscribe new booleansubscription upstream s s request 1 override public void onnext integer t ts onnext t upstream request 1 override public void onerror throwable t ts onerror t override public void oncomplete ts oncomplete ts assertresult 1 2 3 4 5 
testhelper witherrortracking errors maybe just 1 v stream of v onclose throw new testexception test assertresult 1 testhelper assertundeliverable errors 0 testexception class 
suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer int count override public boolean hasnext if count 0 throw new testexception return true override public integer next return 1 maybe just 1 v stream test assertfailure testexception class 1 
suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer override public boolean hasnext return true override public integer next throw new testexception maybe just 1 v stream test assertfailure testexception class 
suppresswarnings unchecked stream integer stream mock stream class testsubscriber integer ts new testsubscriber when stream iterator thenreturn new iterator integer int count override public boolean hasnext if count 0 ts cancel return true override public integer next return 1 maybe just 1 v stream subscribewith ts assertvaluesonly 1 
suppresswarnings unchecked stream integer stream mock stream class testsubscriber integer ts new testsubscriber when stream iterator thenreturn new iterator integer override public boolean hasnext return true override public integer next ts cancel return 1 maybe just 1 v stream subscribewith ts assertempty 
for int i 0 i testhelper race long loops i maybesubject integer ms maybesubject create testsubscriber integer ts new testsubscriber 0l ms stream of subscribe ts runnable r1 ms onsuccess 1 runnable r2 ts request 1 testhelper race r1 r2 ts assertresult 1 
single just 1 mapoptional optional of test assertresult 1 
single just 1 mapoptional v optional empty test assertresult 
suppresswarnings unchecked function super integer optional extends integer f mock function class single integer error new testexception mapoptional f test assertfailure testexception class verify f never apply any 
single just 1 mapoptional v throw new testexception test assertfailure testexception class 
testhelper checkdisposed single never mapoptional optional of 
testhelper m m mapoptional optional of 
parallelflowabletest checksubscribercount flowable range 1 5 parallel flatmapstream v stream of 1 2 3 
for int i 1 i 32 i flowable range 1 1000 parallel i flatmapstream v stream of v v 1 sequential test withtag parallelism i assertvaluecount 2000 assertnoerrors assertcomplete 
for int i 1 i 32 i flowable range 1 1000 parallel i flatmapstream v stream of sequential test withtag parallelism i assertresult 
for int i 1 i 32 i flowable range 1 1000 parallel i flatmapstream v v 2 0 stream of v stream of sequential test withtag parallelism i assertvaluecount 500 assertnoerrors assertcomplete 
calls 
for e values flowable just 1 parallel 1 mapoptional optional of e sequential test assertresult 1 
for e values flowable integer error new testexception parallel 1 mapoptional optional of e sequential test assertfailure testexception class 
for e values flowable just 1 parallel 1 mapoptional optional of e filter functions alwaystrue sequential test assertresult 1 
for e values flowable integer error new testexception parallel 1 mapoptional optional of e filter functions alwaystrue sequential test assertfailure testexception class 
flowable range 0 2 parallel 1 mapoptional v optional of 1 v error sequential test assertfailure arithmeticexception class 
flowable range 0 2 parallel 1 mapoptional v optional of 1 v stop sequential test assertresult 
flowable range 0 2 parallel 1 mapoptional new function integer optional extends integer int count override public optional extends integer apply integer v throws exception if count 1 return optional of 1 return optional of 1 v retry sequential test assertresult 1 1 
flowable range 0 2 parallel 1 mapoptional v optional of 1 v new bifunction long throwable override public apply long n throwable e throws exception return n 5 retry skip sequential test assertresult 1 
flowable range 0 2 parallel 1 mapoptional v optional of 1 v skip sequential test assertresult 1 
testsubscriberex integer ts flowable range 0 2 parallel 1 mapoptional v optional of 1 v new bifunction long throwable override public apply long n throwable e throws exception throw new testexception sequential to testhelper integer testconsumer assertfailure compositeexception class testhelper ts arithmeticexception class testexception class 
list throwable errors testhelper trackpluginerrors try new parallelinvalid mapoptional optional of error sequential test testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
flowable range 0 2 parallel 1 mapoptional v optional of 1 v error filter functions alwaystrue sequential test assertfailure arithmeticexception class 
flowable range 0 2 parallel 1 mapoptional v optional of 1 v stop filter functions alwaystrue sequential test assertresult 
flowable range 0 2 parallel 1 mapoptional new function integer optional extends integer int count override public optional extends integer apply integer v throws exception if count 1 return optional of 1 return optional of 1 v retry filter functions alwaystrue sequential test assertresult 1 1 
flowable range 0 2 parallel 1 mapoptional v optional of 1 v new bifunction long throwable override public apply long n throwable e throws exception return n 5 retry skip filter functions alwaystrue sequential test assertresult 1 
flowable range 0 2 parallel 1 mapoptional v optional of 1 v skip filter functions alwaystrue sequential test assertresult 1 
testsubscriberex integer ts flowable range 0 2 parallel 1 mapoptional v optional of 1 v new bifunction long throwable override public apply long n throwable e throws exception throw new testexception filter functions alwaystrue sequential to testhelper integer testconsumer assertfailure compositeexception class testhelper ts arithmeticexception class testexception class 
testhelper flowable just 1 parallel 1 mapoptional optional of error filter functions alwaystrue 
list throwable errors testhelper trackpluginerrors try new parallelinvalid mapoptional optional of error filter functions alwaystrue sequential test testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
testhelper checkenum class 
flowable range 1 1000 parallel mapoptional v optional empty skip sequential test assertresult 
flowable range 1 1000 parallel mapoptional v optional empty skip filter v true sequential test assertresult 
flowable range 1 1000 parallel mapoptional v v 2 0 optional of v optional empty skip sequential test assertvaluecount 500 assertnoerrors assertcomplete 
flowable range 1 1000 parallel mapoptional v v 2 0 optional of v optional empty skip filter v true sequential test assertvaluecount 500 assertnoerrors assertcomplete 
flowable range 1 1000 parallel mapoptional v v 2 0 optional of v optional empty skip filter v v 4 0 sequential test assertvaluecount 250 assertnoerrors assertcomplete 
testhelper flowable range 1 10 parallel mapoptional optional of skip 
testhelper p p mapoptional optional of error testhelper p p mapoptional optional of error filter v true 
maybe just 1 mapoptional optional of test assertresult 1 
maybe just 1 mapoptional v optional empty test assertresult 
suppresswarnings unchecked function super integer optional extends integer f mock function class maybe integer empty mapoptional f test assertresult verify f never apply any 
suppresswarnings unchecked function super integer optional extends integer f mock function class maybe integer error new testexception mapoptional f test assertfailure testexception class verify f never apply any 
maybe just 1 mapoptional v throw new testexception test assertfailure testexception class 
testhelper checkdisposed maybe never mapoptional optional of 
testhelper m m mapoptional optional of 
stream integer stream stream of 1 stream foreach v return maybe just 1 v stream 
stream integer stream stream of 1 stream foreach v return flowable just 1 hide flatmapstream v stream 
observable empty flatmapstream v stream of 1 2 3 4 5 test assertresult 
observable empty hide flatmapstream v stream of 1 2 3 4 5 test assertresult 
observable just 1 flatmapstream v stream of v 1 v 2 v 3 v 4 v 5 test assertresult 2 3 4 5 6 
observable just 1 hide flatmapstream v stream of v 1 v 2 v 3 v 4 v 5 test assertresult 2 3 4 5 6 
observable error new testexception flatmapstream v stream of 1 2 3 4 5 test assertfailure testexception class 
observable fromcallable throw new testexception flatmapstream v stream of 1 2 3 4 5 test assertfailure testexception class 
observable error new testexception hide flatmapstream v stream of 1 2 3 4 5 test assertfailure testexception class 
observable range 1 5 flatmapstream v intstream range v 10 v 10 5 boxed test assertresult 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 40 41 42 43 44 50 51 52 53 54 
observable range 1 5 hide flatmapstream v intstream range v 10 v 10 5 boxed test assertresult 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 40 41 42 43 44 50 51 52 53 54 
observable range 1 5 flatmapstream v stream of test assertresult 
observable range 1 5 flatmapstream v intstream range v 10 v 10 5 boxed take 12 test assertresult 10 11 12 13 14 20 21 22 23 24 30 31 
observable range 1 5 hide flatmapstream v intstream range v 10 v 10 5 boxed take 12 test assertresult 10 11 12 13 14 20 21 22 23 24 30 31 
publishsubject integer ps publishsubject create atomicinteger calls new atomicinteger testobserver integer to ps flatmapstream v stream of v 1 v 2 onclose calls getandincrement take 1 test asserttrue ps hasobservers ps onnext 1 to assertresult 2 assertfalse ps hasobservers assertequals 1 calls get 
testhelper witherrortracking errors publishsubject integer ps publishsubject create testobserver integer to ps flatmapstream v stream of v 1 v 2 onclose throw new testexception take 1 test asserttrue ps hasobservers ps onnext 1 to assertresult 2 assertfalse ps hasobservers testhelper assertundeliverable errors 0 testexception class 
observable range 1 1000 flatmapstream v intstream range v 1000 v 1000 1000 boxed test assertvaluecount 1 000 000 assertnoerrors assertcomplete 
observable range 1 1000 hide flatmapstream v intstream range v 1000 v 1000 1000 boxed test assertvaluecount 1 000 000 assertnoerrors assertcomplete 
testhelper f f flatmapstream v stream of 1 2 
observable just 1 hide concatmapstream v throw new testexception test assertfailure testexception class 
observable just 1 hide concatmapstream v null test assertfailure nullpointerexception class 
observable just 1 hide concatmapstream v stream of 1 null test assertfailure nullpointerexception class 1 
observable just 1 hide concatmapstream v stream generate throw new testexception test assertfailure testexception class 
atomicinteger counter new atomicinteger observable just 1 hide concatmapstream v stream generate if counter getandincrement 0 return 1 throw new testexception test assertfailure testexception class 1 
testhelper witherrortracking errors publishsubject integer ps publishsubject create atomicinteger counter new atomicinteger testobserver integer to ps hide concatmapstream v if counter getandincrement 0 return stream of 1 2 ps onerror new ioexception throw new testexception test ps onnext 1 ps onnext 2 to assertfailure ioexception class 1 2 testhelper assertundeliverable errors 0 testexception class 
testobserver integer to new testobserver suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer override public boolean hasnext return true override public integer next to dispose return 1 observable just 1 hide concatmapstream v stream subscribe to to assertempty 
testobserver integer to new testobserver suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer override public boolean hasnext to dispose return true override public integer next return 1 observable just 1 hide concatmapstream v stream subscribe to to assertempty 
unicastsubject integer us unicastsubject create testobserver integer to us flatmapstream v stream of 1 2 test asserttrue us hasobservers us onnext 1 to assertvaluesonly 1 2 us oncomplete to assertresult 1 2 
unicastsubject integer us unicastsubject create testobserver integer to us map v v 1 flatmapstream v stream of 1 2 test asserttrue us hasobservers us onnext 1 to assertvaluesonly 1 2 us oncomplete to assertresult 1 2 
unicastsubject integer us unicastsubject create testobserver integer to us map v throw new testexception compose testhelper flatmapstream v stream of 1 2 test asserttrue us hasobservers us onnext 1 assertfalse us hasobservers to assertfailure testexception class 
testhelper checkdisposed publishsubject create flatmapstream v stream of 1 
atomicinteger calls new atomicinteger new observable integer override protected void subscribeactual nonnull observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onnext 2 observer oncomplete flatmapstream v calls getandincrement throw new testexception take 1 test assertfailure testexception class assertequals 1 calls get 
atomicinteger calls new atomicinteger new observable integer override protected void subscribeactual nonnull observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onnext 2 observer oncomplete flatmapstream v calls getandincrement return stream of 1 take 1 test assertresult 1 assertequals 1 calls get 
flowable fromcompletionstage completablefuture completedfuture 1 test assertresult 1 
completablefuture integer cf new completablefuture cf new testexception flowable fromcompletionstage cf test assertfailure testexception class 
flowable fromcompletionstage completablefuture integer completedfuture null test assertfailure nullpointerexception class 
completablefuture integer cf new completablefuture testsubscriber integer ts flowable fromcompletionstage cf test ts assertempty ts cancel cf complete 1 ts assertempty 
integer v single just 1 tocompletionstage tocompletablefuture get assertequals integer 1 v 
singlesubject integer source singlesubject create completablefuture integer cf source tocompletionstage tocompletablefuture asserttrue source hasobservers cf cancel true asserttrue cf iscancelled assertfalse source hasobservers 
singlesubject integer source singlesubject create completablefuture integer cf source tocompletionstage tocompletablefuture asserttrue source hasobservers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hasobservers assertequals integer 1 cf get 
singlesubject integer source singlesubject create completablefuture integer cf source tocompletionstage tocompletablefuture asserttrue source hasobservers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hasobservers testhelper asserterror cf testexception class 
completablefuture integer cf single integer error new testexception tocompletionstage tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new single integer override protected void subscribeactual singleobserver super integer observer observer onsubscribe disposable empty observer onsuccess 1 observer onerror new testexception tocompletionstage tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new single integer override protected void subscribeactual singleobserver super integer observer observer onsubscribe disposable empty observer onsubscribe disposable empty observer onsuccess 1 tocompletionstage tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
return flowable just 1 integer mapoptional v null onbackpressuredrop 
integer v flowable just 1 firstorerrorstage tocompletablefuture get assertequals integer 1 v 
testhelper asserterror flowable integer empty firstorerrorstage tocompletablefuture class 
behaviorprocessor integer source behaviorprocessor createdefault 1 integer v source firstorerrorstage tocompletablefuture get assertequals integer 1 v assertfalse source hassubscribers 
publishprocessor integer source publishprocessor create completablefuture integer cf source firstorerrorstage tocompletablefuture asserttrue source hassubscribers cf cancel true asserttrue cf iscancelled assertfalse source hassubscribers 
publishprocessor integer source publishprocessor create completablefuture integer cf source firstorerrorstage tocompletablefuture asserttrue source hassubscribers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hassubscribers assertequals integer 1 cf get 
publishprocessor integer source publishprocessor create completablefuture integer cf source firstorerrorstage tocompletablefuture asserttrue source hassubscribers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hassubscribers testhelper asserterror cf testexception class 
completablefuture integer cf flowable integer error new testexception firstorerrorstage tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s onerror new testexception s oncomplete firstorerrorstage tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onsubscribe new booleansubscription s onnext 1 firstorerrorstage tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
integer v flowable just 1 singleorerrorstage tocompletablefuture get assertequals integer 1 v 
testhelper asserterror flowable integer empty singleorerrorstage tocompletablefuture class 
replayprocessor integer source replayprocessor create source onnext 1 source onnext 2 testhelper asserterror source singleorerrorstage tocompletablefuture class assertfalse source hassubscribers 
publishprocessor integer source publishprocessor create completablefuture integer cf source singleorerrorstage tocompletablefuture asserttrue source hassubscribers cf cancel true asserttrue cf iscancelled assertfalse source hassubscribers 
publishprocessor integer source publishprocessor create completablefuture integer cf source singleorerrorstage tocompletablefuture asserttrue source hassubscribers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hassubscribers assertequals integer 1 cf get 
publishprocessor integer source publishprocessor create completablefuture integer cf source singleorerrorstage tocompletablefuture asserttrue source hassubscribers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hassubscribers testhelper asserterror cf testexception class 
completablefuture integer cf flowable integer error new testexception singleorerrorstage tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s oncomplete s onerror new testexception s oncomplete singleorerrorstage tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onsubscribe new booleansubscription s onnext 1 s oncomplete singleorerrorstage tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
integer v flowable just 1 lastorerrorstage tocompletablefuture get assertequals integer 1 v 
integer v flowable range 1 5 lastorerrorstage tocompletablefuture get assertequals integer 5 v 
testhelper asserterror flowable integer empty lastorerrorstage tocompletablefuture class 
publishprocessor integer source publishprocessor create completablefuture integer cf source lastorerrorstage tocompletablefuture asserttrue source hassubscribers cf cancel true asserttrue cf iscancelled assertfalse source hassubscribers 
publishprocessor integer source publishprocessor create completablefuture integer cf source lastorerrorstage tocompletablefuture asserttrue source hassubscribers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hassubscribers assertequals integer 1 cf get 
publishprocessor integer source publishprocessor create completablefuture integer cf source lastorerrorstage tocompletablefuture asserttrue source hassubscribers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hassubscribers testhelper asserterror cf testexception class 
completablefuture integer cf flowable integer error new testexception lastorerrorstage tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s oncomplete s onerror new testexception s oncomplete lastorerrorstage tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onsubscribe new booleansubscription s onnext 1 s oncomplete lastorerrorstage tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
observable fromcompletionstage completablefuture completedfuture 1 test assertresult 1 
completablefuture integer cf new completablefuture cf new testexception observable fromcompletionstage cf test assertfailure testexception class 
observable fromcompletionstage completablefuture integer completedfuture null test assertfailure nullpointerexception class 
completablefuture integer cf new completablefuture testobserver integer to observable fromcompletionstage cf test to assertempty to dispose cf complete 1 to assertempty 
flowable range 1 5 collect collectors tolist test assertresult arrays aslist 1 2 3 4 5 
flowable empty collect collectors tolist test assertresult collections emptylist 
flowable error new testexception collect collectors tolist test assertfailure testexception class 
flowable range 1 5 collect new collector integer integer integer override public supplier integer supplier throw new testexception override public biconsumer integer integer accumulator return a b override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset test assertfailure testexception class 
behaviorprocessor integer source behaviorprocessor createdefault 1 source collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b throw new testexception override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset test assertfailure testexception class assertfalse source hassubscribers 
flowable range 1 5 collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a throw new testexception override public set characteristics characteristics return collections emptyset test assertfailure testexception class 
testhelper witherrortracking errors flowable integer source new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s onnext 2 s onerror new ioexception s oncomplete source collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b throw new testexception override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset test assertfailure testexception class testhelper assertundeliverable errors 0 ioexception class 
testhelper checkdisposed publishprocessor create collect collectors tolist 
testhelper f f collect collectors tolist 
flowable range 1 5 collect collectors tolist toflowable test assertresult arrays aslist 1 2 3 4 5 
flowable empty collect collectors tolist toflowable test assertresult collections emptylist 
flowable error new testexception collect collectors tolist toflowable test assertfailure testexception class 
flowable range 1 5 collect new collector integer integer integer override public supplier integer supplier throw new testexception override public biconsumer integer integer accumulator return a b override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset toflowable test assertfailure testexception class 
behaviorprocessor integer source behaviorprocessor createdefault 1 source collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b throw new testexception override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset toflowable test assertfailure testexception class assertfalse source hassubscribers 
flowable range 1 5 collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a throw new testexception override public set characteristics characteristics return collections emptyset toflowable test assertfailure testexception class 
testhelper witherrortracking errors flowable integer source new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s onnext 2 s onerror new ioexception s oncomplete source collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b throw new testexception override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset toflowable test assertfailure testexception class testhelper assertundeliverable errors 0 ioexception class 
testhelper checkdisposed publishprocessor create collect collectors tolist toflowable 
testhelper f f collect collectors tolist toflowable 
observable fromoptional optional of 1 test assertresult 1 
observable fromoptional optional empty test assertresult 
maybe fromcompletionstage completablefuture completedfuture 1 test assertresult 1 
completablefuture integer cf new completablefuture cf new testexception maybe fromcompletionstage cf test assertfailure testexception class 
maybe fromcompletionstage completablefuture integer completedfuture null test assertresult 
completablefuture integer cf new completablefuture testobserver integer to maybe fromcompletionstage cf test to assertempty to dispose cf complete 1 to assertempty 
testhelper checkdisposed maybe fromcompletionstage new completablefuture 
stream integer stream stream of 1 stream foreach v return flowable just 1 flatmapstream v stream 
single just 1 stream of test assertresult 1 
single just 1 v stream of test assertresult 
single just 1 v stream of 2 3 4 5 6 test assertresult 2 3 4 5 6 
single just 1 v stream of 2 3 4 5 6 take 3 test assertresult 2 3 4 
suppresswarnings unchecked function super integer stream extends integer f mock function class single integer error new testexception f test assertfailure testexception class verify f never apply any 
single just 1 v throw new testexception test assertfailure testexception class 
testhelper checkdisposed single never stream of 
testhelper m m stream of 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable any single just 1 v stream integer of subscribe to to assertfuseable assertfusionmode queuefuseable async assertresult 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable any single just 1 v stream integer of v subscribe to to assertfuseable assertfusionmode queuefuseable async assertresult 1 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable any single just 1 v stream integer of v v 1 v 2 subscribe to to assertfuseable assertfusionmode queuefuseable async assertresult 1 2 3 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable sync single just 1 v stream integer of v v 1 v 2 subscribe to to assertfuseable assertfusionmode queuefuseable none assertresult 1 2 3 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable any singlesubject integer ss singlesubject create ss v stream integer of v v 1 v 2 subscribe to to assertfuseable assertfusionmode queuefuseable async assertempty ss onsuccess 1 to assertresult 1 2 3 
atomicreference queuedisposable integer qdr new atomicreference singlesubject integer ss singlesubject create ss stream of subscribe new observer integer override public void onnext integer t override public void onerror throwable t override public void oncomplete override suppresswarnings unchecked public void onsubscribe disposable d qdr set queuedisposable integer d queuedisposable integer qd qdr get assertequals queuefuseable async qd requestfusion queuefuseable async asserttrue qd isempty assertnull qd poll ss onsuccess 1 assertfalse qd isempty assertequals 1 qd poll intvalue asserttrue qd isempty assertnull qd poll qd dispose asserttrue qd isempty assertnull qd poll 
atomicreference queuedisposable integer qdr new atomicreference singlesubject integer ss singlesubject create ss v stream of v v 1 subscribe new observer integer override public void onnext integer t override public void onerror throwable t override public void oncomplete override suppresswarnings unchecked public void onsubscribe disposable d qdr set queuedisposable integer d queuedisposable integer qd qdr get assertequals queuefuseable async qd requestfusion queuefuseable async asserttrue qd isempty assertnull qd poll ss onsuccess 1 assertfalse qd isempty assertequals 1 qd poll intvalue assertfalse qd isempty assertequals 2 qd poll intvalue asserttrue qd isempty assertnull qd poll qd dispose asserttrue qd isempty assertnull qd poll 
testhelper witherrortracking errors single just 1 v stream of v onclose throw new testexception test assertresult 1 testhelper assertundeliverable errors 0 testexception class 
suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer int count override public boolean hasnext if count 0 throw new testexception return true override public integer next return 1 single just 1 v stream test assertfailure testexception class 1 
suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer override public boolean hasnext return true override public integer next throw new testexception single just 1 v stream test assertfailure testexception class 
suppresswarnings unchecked stream integer stream mock stream class testobserver integer to new testobserver when stream iterator thenreturn new iterator integer int count override public boolean hasnext if count 0 to dispose return true override public integer next return 1 single just 1 v stream subscribewith to assertvaluesonly 1 
suppresswarnings unchecked stream integer stream mock stream class testobserver integer to new testobserver when stream iterator thenreturn new iterator integer override public boolean hasnext return true override public integer next to dispose return 1 single just 1 v stream subscribewith to assertempty 
for int i 0 i testhelper race long loops i singlesubject integer ss singlesubject create testobserver integer to new testobserver ss stream of subscribe to runnable r1 ss onsuccess 1 runnable r2 to dispose testhelper race r1 r2 
object v completable complete tocompletionstage null tocompletablefuture get assertnull v 
completablesubject source completablesubject create completablefuture object cf source tocompletionstage null tocompletablefuture asserttrue source hasobservers cf cancel true asserttrue cf iscancelled assertfalse source hasobservers 
completablesubject source completablesubject create completablefuture object cf source tocompletionstage null tocompletablefuture asserttrue source hasobservers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hasobservers assertequals 1 cf get 
completablesubject source completablesubject create completablefuture object cf source tocompletionstage null tocompletablefuture asserttrue source hasobservers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hasobservers testhelper asserterror cf testexception class 
completablefuture object cf completable error new testexception tocompletionstage null tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors object v new completable override protected void subscribeactual completableobserver observer observer onsubscribe disposable empty observer oncomplete observer onerror new testexception observer oncomplete tocompletionstage null tocompletablefuture get assertnull v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors object v new completable override protected void subscribeactual completableobserver observer observer onsubscribe disposable empty observer onsubscribe disposable empty observer oncomplete tocompletionstage null tocompletablefuture get assertnull v testhelper asserterror errors 0 class 
stream integer stream stream of 1 stream foreach v return flowable just 1 hide flatmapstream v stream 
integer v observable just 1 firststage null tocompletablefuture get assertequals integer 1 v 
integer v observable integer empty firststage 2 tocompletablefuture get assertequals integer 2 v 
behaviorsubject integer source behaviorsubject createdefault 1 integer v source firststage null tocompletablefuture get assertequals integer 1 v assertfalse source hasobservers 
publishsubject integer source publishsubject create completablefuture integer cf source firststage null tocompletablefuture asserttrue source hasobservers cf cancel true asserttrue cf iscancelled assertfalse source hasobservers 
publishsubject integer source publishsubject create completablefuture integer cf source firststage null tocompletablefuture asserttrue source hasobservers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hasobservers assertequals integer 1 cf get 
publishsubject integer source publishsubject create completablefuture integer cf source firststage null tocompletablefuture asserttrue source hasobservers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hasobservers testhelper asserterror cf testexception class 
completablefuture integer cf observable integer error new testexception firststage null tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onerror new testexception observer oncomplete firststage null tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onsubscribe disposable empty observer onnext 1 firststage null tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
integer v observable just 1 singlestage null tocompletablefuture get assertequals integer 1 v 
integer v observable integer empty singlestage 2 tocompletablefuture get assertequals integer 2 v 
replaysubject integer source replaysubject create source onnext 1 source onnext 2 testhelper asserterror source singlestage null tocompletablefuture class assertfalse source hasobservers 
publishsubject integer source publishsubject create completablefuture integer cf source singlestage null tocompletablefuture asserttrue source hasobservers cf cancel true asserttrue cf iscancelled assertfalse source hasobservers 
publishsubject integer source publishsubject create completablefuture integer cf source singlestage null tocompletablefuture asserttrue source hasobservers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hasobservers assertequals integer 1 cf get 
publishsubject integer source publishsubject create completablefuture integer cf source singlestage null tocompletablefuture asserttrue source hasobservers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hasobservers testhelper asserterror cf testexception class 
completablefuture integer cf observable integer error new testexception singlestage null tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer oncomplete observer onerror new testexception observer oncomplete singlestage null tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onsubscribe disposable empty observer onnext 1 observer oncomplete singlestage null tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
integer v observable just 1 laststage null tocompletablefuture get assertequals integer 1 v 
integer v observable range 1 5 laststage null tocompletablefuture get assertequals integer 5 v 
integer v observable integer empty laststage 2 tocompletablefuture get assertequals integer 2 v 
publishsubject integer source publishsubject create completablefuture integer cf source laststage null tocompletablefuture asserttrue source hasobservers cf cancel true asserttrue cf iscancelled assertfalse source hasobservers 
publishsubject integer source publishsubject create completablefuture integer cf source laststage null tocompletablefuture asserttrue source hasobservers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hasobservers assertequals integer 1 cf get 
publishsubject integer source publishsubject create completablefuture integer cf source laststage null tocompletablefuture asserttrue source hasobservers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hasobservers testhelper asserterror cf testexception class 
completablefuture integer cf observable integer error new testexception laststage null tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer oncomplete observer onerror new testexception observer oncomplete laststage null tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onsubscribe disposable empty observer onnext 1 observer oncomplete laststage null tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
stream integer stream stream of 1 stream foreach v return flowable just 1 hide flatmapstream v stream 
testsubscriberex list integer ts flowable range 1 5 parallel collect collectors tolist subscribewith new testsubscriberex ts assertvaluecount 1 assertnoerrors assertcomplete assertequals 5 ts values get 0 size asserttrue ts values get 0 containsall set 5 
flowable empty parallel collect collectors tolist test assertresult collections emptylist 
flowable error new testexception parallel collect collectors tolist test assertfailure testexception class 
flowable range 1 5 parallel collect new collector integer integer integer override public supplier integer supplier throw new testexception override public biconsumer integer integer accumulator return a b override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset test assertfailure testexception class 
behaviorprocessor integer source behaviorprocessor createdefault 1 source parallel collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b throw new testexception override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset test assertfailure testexception class assertfalse source hassubscribers 
flowable range 1 5 parallel collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b override public binaryoperator integer combiner return a b throw new testexception override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset test assertfailure testexception class 
flowable range 1 5 parallel collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a throw new testexception override public set characteristics characteristics return collections emptyset test assertfailure testexception class 
for int i 1 i 32 i testsubscriber list integer ts flowable range 1 1000 parallel i runon schedulers computation collect collectors tolist test withtag parallelism i awaitdone 5 timeunit seconds assertvaluecount 1 assertnoerrors assertcomplete assertequals 1000 ts values get 0 size asserttrue ts values get 0 containsall set 1000 
for int i 1 i 32 i testsubscriber list integer ts flowable range 1 1000 hide parallel i runon schedulers computation collect collectors tolist test withtag parallelism i awaitdone 5 timeunit seconds assertvaluecount 1 assertnoerrors assertcomplete assertequals 1000 ts values get 0 size asserttrue ts values get 0 containsall set 1000 
list throwable errors testhelper trackpluginerrors try new parallelinvalid collect collectors tolist test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
long n 1 000 for int i 1 i 32 i flowable rangelong 1 n parallel i runon schedulers computation collect collectors summinglong v v test withtag parallelism i awaitdone 5 timeunit seconds assertresult n n 1 2 
long n 1 000 000 flowable rangelong 1 n parallel runon schedulers computation collect collectors summinglong v v test awaitdone 5 timeunit seconds assertresult n n 1 2 
stream integer stream stream of 1 stream foreach v return flowable just 1 flatmapstream v stream 
try stream integer stream flowable integer empty blockingstream assertequals 0 stream toarray length 
try stream integer stream flowable just 1 blockingstream assertarrayequals new integer 1 stream toarray integer new 
try stream integer stream flowable range 1 5 blockingstream assertarrayequals new integer 1 2 3 4 5 stream toarray integer new 
try stream integer stream flowable range 1 5 blockingstream 1 assertarrayequals new integer 1 2 3 4 5 stream toarray integer new 
try stream integer stream flowable range 1 1000 subscribeon schedulers computation blockingstream list integer list stream collect collectors tolist assertequals 1000 list size for int i 1 i 1000 i assertequals i list get i 1 intvalue 
try stream integer stream flowable range 1 1000 subscribeon schedulers computation blockingstream 1 list integer list stream collect collectors tolist assertequals 1000 list size for int i 1 i 1000 i assertequals i list get i 1 intvalue 
try stream integer stream flowable integer error new testexception blockingstream stream toarray integer new fail should have thrown catch testexception expected 
unicastprocessor integer up unicastprocessor create up onnext 1 up onnext 2 up onnext 3 up onnext 4 up onnext 5 try stream integer stream up blockingstream assertarrayequals new integer 1 2 3 stream limit 3 toarray integer new assertfalse up hassubscribers 
return 1 
flowable fromstream stream integer of test assertresult 
flowable fromstream stream integer of 1 test assertresult 1 
flowable fromstream stream integer of 1 2 3 4 5 test assertresult 1 2 3 4 5 
flowable fromstream stream integer of 1 2 3 4 5 test 0l assertempty requestmore 1 assertvaluesonly 1 requestmore 2 assertvaluesonly 1 2 3 requestmore 2 assertresult 1 2 3 4 5 
flowable integer source flowable fromstream stream integer of 1 2 3 4 5 source test assertresult 1 2 3 4 5 source test assertfailure class 
flowable fromstream intstream rangeclosed 1 10 boxed take 5 test assertresult 1 2 3 4 5 
flowable fromstream stream integer of filter v true test assertresult 
flowable fromstream stream integer of 1 filter v true test assertresult 1 
flowable fromstream stream integer of 1 2 3 4 5 filter v true test assertresult 1 2 3 4 5 
flowable fromstream stream integer of 1 2 3 4 5 filter v true test 0l assertempty requestmore 1 assertvaluesonly 1 requestmore 2 assertvaluesonly 1 2 3 requestmore 2 assertresult 1 2 3 4 5 
flowable fromstream intstream rangeclosed 1 10 boxed filter v v 2 0 test assertresult 2 4 6 8 10 
flowable fromstream intstream rangeclosed 1 10 boxed filter v true take 5 test assertresult 1 2 3 4 5 
atomicreference simplequeue queue new atomicreference flowable fromstream intstream rangeclosed 1 10 boxed subscribe new flowablesubscriber integer override public void onsubscribe nonnull subscription s queue set simplequeue s override public void onnext integer t override public void onerror throwable t override public void oncomplete simplequeue q queue get testhelper assertnooffer q assertfalse q isempty q clear assertnull q poll asserttrue q isempty q clear assertnull q poll asserttrue q isempty 
atomicreference simplequeue queue new atomicreference atomicinteger calls new atomicinteger flowable fromstream stream of 1 onclose calls getandincrement subscribe new flowablesubscriber integer override public void onsubscribe nonnull subscription s queue set simplequeue s queuesubscription s requestfusion queuefuseable any override public void onnext integer t override public void onerror throwable t override public void oncomplete simplequeue q queue get assertfalse q isempty assertequals 1 q poll asserttrue q isempty assertequals 1 calls get 
flowable fromstream stream of integer null test assertfailure nullpointerexception class 
flowable fromstream stream of integer null filter v true test assertfailure nullpointerexception class 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable any flowable fromstream intstream rangeclosed 1 10 boxed subscribewith ts assertfuseable assertfusionmode queuefuseable sync assertresult 1 2 3 4 5 6 7 8 9 10 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable async flowable fromstream intstream rangeclosed 1 10 boxed subscribewith ts assertfuseable assertfusionmode queuefuseable none assertresult 1 2 3 4 5 6 7 8 9 10 
flowable fromstream intstream rangeclosed 1 1000 boxed parallel runon schedulers computation 1 map v v 1 sequential test awaitdone 5 timeunit seconds assertvaluecount 1000 assertnoerrors assertcomplete 
testhelper witherrortracking errors stream integer stream stream of 1 2 3 4 5 onclose throw new testexception flowable fromstream stream test assertresult 1 2 3 4 5 testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors stream integer stream stream of 1 2 3 4 5 onclose throw new testexception flowable fromstream stream take 3 test assertresult 1 2 3 testhelper assertundeliverable errors 0 testexception class 
atomicinteger v new atomicinteger flowable fromstream stream integer generate int value v getandincrement if value 1 throw new testexception return value test assertfailure testexception class 0 
atomicinteger counter new atomicinteger flowable fromstream stream integer generate int value counter getandincrement if value 1 throw new testexception return value filter v true test assertfailure testexception class 0 
requestonebyonebase false 
requestonebyonebase true 
requestracebase false 
requestracebase true 
atomicinteger calls new atomicinteger flowable fromstream stream of onclose calls getandincrement test assertresult assertequals 1 calls get 
atomicinteger calls new atomicinteger flowable fromstream stream of 1 2 3 4 5 onclose calls getandincrement test assertresult 1 2 3 4 5 assertequals 1 calls get 
atomicinteger calls new atomicinteger flowable fromstream stream of 1 2 3 4 5 onclose calls getandincrement take 3 test assertresult 1 2 3 assertequals 1 calls get 
atomicinteger calls new atomicinteger atomicinteger counter new atomicinteger flowable fromstream stream integer generate int value counter getandincrement if value 1 throw new testexception return value onclose calls getandincrement test assertfailure testexception class 0 assertequals 1 calls get 
atomicinteger calls new atomicinteger flowable fromstream stream of 1 2 3 4 5 onclose calls getandincrement filter v true test assertresult 1 2 3 4 5 assertequals 1 calls get 
atomicinteger calls new atomicinteger flowable fromstream stream of 1 2 3 4 5 onclose calls getandincrement filter v true take 3 test assertresult 1 2 3 assertequals 1 calls get 
atomicinteger calls new atomicinteger atomicinteger counter new atomicinteger flowable fromstream stream integer generate int value counter getandincrement if value 1 throw new testexception return value onclose calls getandincrement filter v true test assertfailure testexception class 0 assertequals 1 calls get 
testhelper flowable fromstream stream of 1 
return 0 
single fromcompletionstage completablefuture completedfuture 1 test assertresult 1 
completablefuture integer cf new completablefuture cf new testexception single fromcompletionstage cf test assertfailure testexception class 
single fromcompletionstage completablefuture integer completedfuture null test assertfailure nullpointerexception class 
completablefuture integer cf new completablefuture testobserver integer to single fromcompletionstage cf test to assertempty to dispose cf complete 1 to assertempty 
testhelper checkdisposed single fromcompletionstage new completablefuture 
integer v flowable just 1 firststage null tocompletablefuture get assertequals integer 1 v 
integer v flowable integer empty firststage 2 tocompletablefuture get assertequals integer 2 v 
behaviorprocessor integer source behaviorprocessor createdefault 1 integer v source firststage null tocompletablefuture get assertequals integer 1 v assertfalse source hassubscribers 
publishprocessor integer source publishprocessor create completablefuture integer cf source firststage null tocompletablefuture asserttrue source hassubscribers cf cancel true asserttrue cf iscancelled assertfalse source hassubscribers 
publishprocessor integer source publishprocessor create completablefuture integer cf source firststage null tocompletablefuture asserttrue source hassubscribers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hassubscribers assertequals integer 1 cf get 
publishprocessor integer source publishprocessor create completablefuture integer cf source firststage null tocompletablefuture asserttrue source hassubscribers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hassubscribers testhelper asserterror cf testexception class 
completablefuture integer cf flowable integer error new testexception firststage null tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s onerror new testexception s oncomplete firststage null tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onsubscribe new booleansubscription s onnext 1 firststage null tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
integer v flowable just 1 singlestage null tocompletablefuture get assertequals integer 1 v 
integer v flowable integer empty singlestage 2 tocompletablefuture get assertequals integer 2 v 
replayprocessor integer source replayprocessor create source onnext 1 source onnext 2 testhelper asserterror source singlestage null tocompletablefuture class assertfalse source hassubscribers 
publishprocessor integer source publishprocessor create completablefuture integer cf source singlestage null tocompletablefuture asserttrue source hassubscribers cf cancel true asserttrue cf iscancelled assertfalse source hassubscribers 
publishprocessor integer source publishprocessor create completablefuture integer cf source singlestage null tocompletablefuture asserttrue source hassubscribers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hassubscribers assertequals integer 1 cf get 
publishprocessor integer source publishprocessor create completablefuture integer cf source singlestage null tocompletablefuture asserttrue source hassubscribers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hassubscribers testhelper asserterror cf testexception class 
completablefuture integer cf flowable integer error new testexception singlestage null tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s oncomplete s onerror new testexception s oncomplete singlestage null tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onsubscribe new booleansubscription s onnext 1 s oncomplete singlestage null tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
integer v flowable just 1 laststage null tocompletablefuture get assertequals integer 1 v 
integer v flowable range 1 5 laststage null tocompletablefuture get assertequals integer 5 v 
integer v flowable integer empty laststage 2 tocompletablefuture get assertequals integer 2 v 
publishprocessor integer source publishprocessor create completablefuture integer cf source laststage null tocompletablefuture asserttrue source hassubscribers cf cancel true asserttrue cf iscancelled assertfalse source hassubscribers 
publishprocessor integer source publishprocessor create completablefuture integer cf source laststage null tocompletablefuture asserttrue source hassubscribers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hassubscribers assertequals integer 1 cf get 
publishprocessor integer source publishprocessor create completablefuture integer cf source laststage null tocompletablefuture asserttrue source hassubscribers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hassubscribers testhelper asserterror cf testexception class 
completablefuture integer cf flowable integer error new testexception laststage null tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s oncomplete s onerror new testexception s oncomplete laststage null tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onsubscribe new booleansubscription s onnext 1 s oncomplete laststage null tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
stream integer stream stream of 1 stream foreach v return flowable just 1 flatmapstream v stream 
flowable range 1 10 parallel mapoptional optional of filter new predicate integer override public boolean test integer v throws exception return v 2 0 filter new predicate integer override public boolean test integer v throws exception return v 3 0 sequential test assertresult 6 
flowable range 1 10 parallel runon schedulers computation mapoptional optional of filter new predicate integer override public boolean test integer v throws exception return v 2 0 filter new predicate integer override public boolean test integer v throws exception return v 3 0 sequential test awaitdone 5 timeunit seconds assertresult 6 
list throwable errors testhelper trackpluginerrors try new parallelinvalid mapoptional optional of sequential test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try new parallelinvalid mapoptional optional of filter functions alwaystrue sequential test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
flowable error new testexception parallel mapoptional optional of sequential test assertfailure testexception class 
flowable just 1 parallel mapoptional v throw new testexception sequential test assertfailure testexception class 
flowable just 1 parallel mapoptional v throw new testexception filter functions alwaystrue sequential test assertfailure testexception class 
flowable just 1 parallel runon schedulers computation mapoptional v throw new testexception filter functions alwaystrue sequential test awaitdone 5 timeunit seconds assertfailure testexception class 
flowable range 1 1000 parallel mapoptional v optional empty sequential test assertresult 
flowable range 1 1000 parallel mapoptional v optional empty filter v true sequential test assertresult 
flowable range 1 1000 parallel mapoptional v v 2 0 optional of v optional empty sequential test assertvaluecount 500 assertnoerrors assertcomplete 
flowable range 1 1000 parallel mapoptional v v 2 0 optional of v optional empty filter v true sequential test assertvaluecount 500 assertnoerrors assertcomplete 
testhelper flowable range 1 10 parallel mapoptional optional of 
testhelper p p mapoptional optional of testhelper p p mapoptional optional of filter v true 
integer v observable just 1 firstorerrorstage tocompletablefuture get assertequals integer 1 v 
testhelper asserterror observable integer empty firstorerrorstage tocompletablefuture class 
behaviorsubject integer source behaviorsubject createdefault 1 integer v source firstorerrorstage tocompletablefuture get assertequals integer 1 v assertfalse source hasobservers 
publishsubject integer source publishsubject create completablefuture integer cf source firstorerrorstage tocompletablefuture asserttrue source hasobservers cf cancel true asserttrue cf iscancelled assertfalse source hasobservers 
publishsubject integer source publishsubject create completablefuture integer cf source firstorerrorstage tocompletablefuture asserttrue source hasobservers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hasobservers assertequals integer 1 cf get 
publishsubject integer source publishsubject create completablefuture integer cf source firstorerrorstage tocompletablefuture asserttrue source hasobservers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hasobservers testhelper asserterror cf testexception class 
completablefuture integer cf observable integer error new testexception firstorerrorstage tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onerror new testexception observer oncomplete firstorerrorstage tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onsubscribe disposable empty observer onnext 1 firstorerrorstage tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
integer v observable just 1 singleorerrorstage tocompletablefuture get assertequals integer 1 v 
testhelper asserterror observable integer empty singleorerrorstage tocompletablefuture class 
replaysubject integer source replaysubject create source onnext 1 source onnext 2 testhelper asserterror source singleorerrorstage tocompletablefuture class assertfalse source hasobservers 
publishsubject integer source publishsubject create completablefuture integer cf source singleorerrorstage tocompletablefuture asserttrue source hasobservers cf cancel true asserttrue cf iscancelled assertfalse source hasobservers 
publishsubject integer source publishsubject create completablefuture integer cf source singleorerrorstage tocompletablefuture asserttrue source hasobservers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hasobservers assertequals integer 1 cf get 
publishsubject integer source publishsubject create completablefuture integer cf source singleorerrorstage tocompletablefuture asserttrue source hasobservers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hasobservers testhelper asserterror cf testexception class 
completablefuture integer cf observable integer error new testexception singleorerrorstage tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer oncomplete observer onerror new testexception observer oncomplete singleorerrorstage tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onsubscribe disposable empty observer onnext 1 observer oncomplete singleorerrorstage tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
integer v observable just 1 lastorerrorstage tocompletablefuture get assertequals integer 1 v 
integer v observable range 1 5 lastorerrorstage tocompletablefuture get assertequals integer 5 v 
testhelper asserterror observable integer empty lastorerrorstage tocompletablefuture class 
publishsubject integer source publishsubject create completablefuture integer cf source lastorerrorstage tocompletablefuture asserttrue source hasobservers cf cancel true asserttrue cf iscancelled assertfalse source hasobservers 
publishsubject integer source publishsubject create completablefuture integer cf source lastorerrorstage tocompletablefuture asserttrue source hasobservers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hasobservers assertequals integer 1 cf get 
publishsubject integer source publishsubject create completablefuture integer cf source lastorerrorstage tocompletablefuture asserttrue source hasobservers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hasobservers testhelper asserterror cf testexception class 
completablefuture integer cf observable integer error new testexception lastorerrorstage tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer oncomplete observer onerror new testexception observer oncomplete lastorerrorstage tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onsubscribe disposable empty observer onnext 1 observer oncomplete lastorerrorstage tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
flowable range 1 5 mapoptional optional of test assertresult 1 2 3 4 5 
flowable range 1 5 mapoptional v optional integer empty test assertresult 
flowable range 1 10 mapoptional modulo test assertresult 2 4 6 8 10 
behaviorprocessor integer source behaviorprocessor createdefault 1 source mapoptional v throw new testexception test assertfailure testexception class assertfalse source hassubscribers 
behaviorprocessor integer source behaviorprocessor createdefault 1 source mapoptional v null test assertfailure nullpointerexception class assertfalse source hassubscribers 
flowable integer source new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s onnext 2 source mapoptional v throw new testexception test assertfailure testexception class 
flowable range 1 5 mapoptional optional of test 0l assertempty requestmore 2 assertvaluesonly 1 2 requestmore 2 assertvaluesonly 1 2 3 4 requestmore 1 assertresult 1 2 3 4 5 
flowable range 1 5 mapoptional v optional empty test 1l assertresult 
flowable range 1 10 mapoptional modulo test 0l assertempty requestmore 2 assertvaluesonly 2 4 requestmore 2 assertvaluesonly 2 4 6 8 requestmore 1 assertresult 2 4 6 8 10 
flowable range 1 5 mapoptional optional of to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 1 2 3 4 5 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 up mapoptional optional of to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 1 2 3 4 5 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 up mapoptional optional of to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 1 2 3 4 5 
flowable range 1 5 mapoptional v optional empty to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 up mapoptional v optional empty to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 up mapoptional v optional empty to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 
flowable range 1 10 mapoptional modulo to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 2 4 6 8 10 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 6 7 8 9 10 up mapoptional modulo to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 2 4 6 8 10 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 6 7 8 9 10 up mapoptional modulo to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 2 4 6 8 10 
flowable range 1 5 mapoptional optional of filter v true test assertresult 1 2 3 4 5 
flowable range 1 5 mapoptional v optional integer empty filter v true test assertresult 
flowable range 1 10 mapoptional modulo filter v true test assertresult 2 4 6 8 10 
behaviorprocessor integer source behaviorprocessor createdefault 1 source mapoptional v throw new testexception filter v true test assertfailure testexception class assertfalse source hassubscribers 
behaviorprocessor integer source behaviorprocessor createdefault 1 source mapoptional v null filter v true test assertfailure nullpointerexception class assertfalse source hassubscribers 
flowable integer source new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription s onnext 1 s onnext 2 source mapoptional v throw new testexception filter v true test assertfailure testexception class 
flowable range 1 5 mapoptional optional of filter v true test 0l assertempty requestmore 2 assertvaluesonly 1 2 requestmore 2 assertvaluesonly 1 2 3 4 requestmore 1 assertresult 1 2 3 4 5 
flowable range 1 5 mapoptional v optional empty filter v true test 1l assertresult 
flowable range 1 10 mapoptional modulo filter v true test 0l assertempty requestmore 2 assertvaluesonly 2 4 requestmore 2 assertvaluesonly 2 4 6 8 requestmore 1 assertresult 2 4 6 8 10 
flowable range 1 5 mapoptional optional of filter v true to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 1 2 3 4 5 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 up mapoptional optional of filter v true to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 1 2 3 4 5 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 up mapoptional optional of filter v true to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 1 2 3 4 5 
flowable range 1 5 mapoptional v optional empty filter v true to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 up mapoptional v optional empty filter v true to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 up mapoptional v optional empty filter v true to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 
flowable range 1 10 mapoptional modulo filter v true to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 2 4 6 8 10 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 6 7 8 9 10 up mapoptional modulo filter v true to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 2 4 6 8 10 
unicastprocessor integer up unicastprocessor create testhelper emit up 1 2 3 4 5 6 7 8 9 10 up mapoptional modulo filter v true to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 2 4 6 8 10 
testsubscriberex object ts new testsubscriberex setinitialfusionmode queuefuseable any flowable empty observeon instance filter v true mapoptional optional of filter v true subscribe ts ts assertresult 
maybe just 1 stream of test assertresult 1 
maybe just 1 v stream of test assertresult 
maybe just 1 v stream of 2 3 4 5 6 test assertresult 2 3 4 5 6 
maybe just 1 v stream of 2 3 4 5 6 take 3 test assertresult 2 3 4 
suppresswarnings unchecked function super integer stream extends integer f mock function class maybe integer empty f test assertresult verify f never apply any 
suppresswarnings unchecked function super integer stream extends integer f mock function class maybe integer error new testexception f test assertfailure testexception class verify f never apply any 
maybe just 1 v throw new testexception test assertfailure testexception class 
testhelper checkdisposed maybe never stream of 
testhelper m m stream of 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable any maybe just 1 v stream integer of subscribe to to assertfuseable assertfusionmode queuefuseable async assertresult 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable any maybe just 1 v stream integer of v subscribe to to assertfuseable assertfusionmode queuefuseable async assertresult 1 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable any maybe just 1 v stream integer of v v 1 v 2 subscribe to to assertfuseable assertfusionmode queuefuseable async assertresult 1 2 3 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable sync maybe just 1 v stream integer of v v 1 v 2 subscribe to to assertfuseable assertfusionmode queuefuseable none assertresult 1 2 3 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable any maybesubject integer ms maybesubject create ms v stream integer of v v 1 v 2 subscribe to to assertfuseable assertfusionmode queuefuseable async assertempty ms onsuccess 1 to assertresult 1 2 3 
atomicreference queuedisposable integer qdr new atomicreference maybesubject integer ms maybesubject create ms stream of subscribe new observer integer override public void onnext integer t override public void onerror throwable t override public void oncomplete override suppresswarnings unchecked public void onsubscribe disposable d qdr set queuedisposable integer d queuedisposable integer qd qdr get assertequals queuefuseable async qd requestfusion queuefuseable async asserttrue qd isempty assertnull qd poll ms onsuccess 1 assertfalse qd isempty assertequals 1 qd poll intvalue asserttrue qd isempty assertnull qd poll qd dispose asserttrue qd isempty assertnull qd poll 
atomicreference queuedisposable integer qdr new atomicreference maybesubject integer ms maybesubject create ms v stream of v v 1 subscribe new observer integer override public void onnext integer t override public void onerror throwable t override public void oncomplete override suppresswarnings unchecked public void onsubscribe disposable d qdr set queuedisposable integer d queuedisposable integer qd qdr get assertequals queuefuseable async qd requestfusion queuefuseable async asserttrue qd isempty assertnull qd poll ms onsuccess 1 assertfalse qd isempty assertequals 1 qd poll intvalue assertfalse qd isempty assertequals 2 qd poll intvalue asserttrue qd isempty assertnull qd poll qd dispose asserttrue qd isempty assertnull qd poll 
testhelper witherrortracking errors maybe just 1 v stream of v onclose throw new testexception test assertresult 1 testhelper assertundeliverable errors 0 testexception class 
suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer int count override public boolean hasnext if count 0 throw new testexception return true override public integer next return 1 maybe just 1 v stream test assertfailure testexception class 1 
suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer override public boolean hasnext return true override public integer next throw new testexception maybe just 1 v stream test assertfailure testexception class 
suppresswarnings unchecked stream integer stream mock stream class testobserver integer to new testobserver when stream iterator thenreturn new iterator integer int count override public boolean hasnext if count 0 to dispose return true override public integer next return 1 maybe just 1 v stream subscribewith to assertvaluesonly 1 
suppresswarnings unchecked stream integer stream mock stream class testobserver integer to new testobserver when stream iterator thenreturn new iterator integer override public boolean hasnext return true override public integer next to dispose return 1 maybe just 1 v stream subscribewith to assertempty 
for int i 0 i testhelper race long loops i maybesubject integer ms maybesubject create testobserver integer to new testobserver ms stream of subscribe to runnable r1 ms onsuccess 1 runnable r2 to dispose testhelper race r1 r2 
integer v maybe just 1 tocompletionstage null tocompletablefuture get assertequals integer 1 v 
integer v maybe integer empty tocompletionstage 2 tocompletablefuture get assertequals integer 2 v 
completablefuture integer cf maybe integer empty tocompletionstage tocompletablefuture testhelper asserterror cf class 
maybesubject integer source maybesubject create completablefuture integer cf source tocompletionstage null tocompletablefuture asserttrue source hasobservers cf cancel true asserttrue cf iscancelled assertfalse source hasobservers 
maybesubject integer source maybesubject create completablefuture integer cf source tocompletionstage null tocompletablefuture asserttrue source hasobservers cf complete 1 asserttrue cf isdone assertfalse cf assertfalse cf iscancelled assertfalse source hasobservers assertequals integer 1 cf get 
maybesubject integer source maybesubject create completablefuture integer cf source tocompletionstage null tocompletablefuture asserttrue source hasobservers cf new testexception asserttrue cf isdone asserttrue cf assertfalse cf iscancelled assertfalse source hasobservers testhelper asserterror cf testexception class 
completablefuture integer cf maybe integer error new testexception tocompletionstage null tocompletablefuture asserttrue cf isdone asserttrue cf assertfalse cf iscancelled testhelper asserterror cf testexception class 
testhelper witherrortracking errors integer v new maybe integer override protected void subscribeactual maybeobserver super integer observer observer onsubscribe disposable empty observer onsuccess 1 observer onerror new testexception observer oncomplete tocompletionstage null tocompletablefuture get assertequals integer 1 v testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors integer v new maybe integer override protected void subscribeactual maybeobserver super integer observer observer onsubscribe disposable empty observer onsubscribe disposable empty observer onsuccess 1 tocompletionstage null tocompletablefuture get assertequals integer 1 v testhelper asserterror errors 0 class 
return flowable integer error new testexception collect collectors tolist toflowable 
return 1 
observable fromstream stream integer of test assertresult 
observable fromstream stream integer of 1 test assertresult 1 
observable fromstream stream integer of 1 2 3 4 5 test assertresult 1 2 3 4 5 
observable integer source observable fromstream stream integer of 1 2 3 4 5 source test assertresult 1 2 3 4 5 source test assertfailure class 
observable fromstream intstream rangeclosed 1 10 boxed take 5 test assertresult 1 2 3 4 5 
observable fromstream stream integer of filter v true test assertresult 
observable fromstream stream integer of 1 filter v true test assertresult 1 
observable fromstream stream integer of 1 2 3 4 5 filter v true test assertresult 1 2 3 4 5 
observable fromstream intstream rangeclosed 1 10 boxed filter v v 2 0 test assertresult 2 4 6 8 10 
observable fromstream intstream rangeclosed 1 10 boxed filter v true take 5 test assertresult 1 2 3 4 5 
atomicreference simplequeue queue new atomicreference observable fromstream intstream rangeclosed 1 10 boxed subscribe new observer integer override public void onsubscribe nonnull disposable d queue set simplequeue d queuedisposable d requestfusion queuefuseable any override public void onnext integer t override public void onerror throwable t override public void oncomplete simplequeue q queue get testhelper assertnooffer q assertfalse q isempty q clear assertnull q poll asserttrue q isempty q clear assertnull q poll asserttrue q isempty 
atomicreference simplequeue queue new atomicreference atomicinteger calls new atomicinteger observable fromstream stream of 1 onclose calls getandincrement subscribe new observer integer override public void onsubscribe nonnull disposable d queue set simplequeue d queuedisposable d requestfusion queuefuseable any override public void onnext integer t override public void onerror throwable t override public void oncomplete simplequeue q queue get assertfalse q isempty assertequals 1 q poll asserttrue q isempty assertequals 1 calls get 
atomicreference simplequeue queue new atomicreference atomicinteger calls new atomicinteger observable fromstream stream of 1 2 onclose calls getandincrement subscribe new observer integer override public void onsubscribe nonnull disposable d queue set simplequeue d queuedisposable d requestfusion queuefuseable any override public void onnext integer t override public void onerror throwable t override public void oncomplete simplequeue q queue get assertfalse q isempty assertequals 1 q poll assertfalse q isempty assertequals 2 q poll asserttrue q isempty assertequals 1 calls get 
observable fromstream stream of integer null test assertfailure nullpointerexception class 
observable fromstream stream of integer null filter v true test assertfailure nullpointerexception class 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable any observable fromstream intstream rangeclosed 1 10 boxed subscribewith to assertfuseable assertfusionmode queuefuseable sync assertresult 1 2 3 4 5 6 7 8 9 10 
testobserverex integer to new testobserverex to setinitialfusionmode queuefuseable async observable fromstream intstream rangeclosed 1 10 boxed subscribewith to assertfuseable assertfusionmode queuefuseable none assertresult 1 2 3 4 5 6 7 8 9 10 
testhelper witherrortracking errors stream integer stream stream of 1 2 3 4 5 onclose throw new testexception observable fromstream stream test assertresult 1 2 3 4 5 testhelper assertundeliverable errors 0 testexception class 
testhelper witherrortracking errors stream integer stream stream of 1 2 3 4 5 onclose throw new testexception observable fromstream stream take 3 test assertresult 1 2 3 testhelper assertundeliverable errors 0 testexception class 
atomicinteger v new atomicinteger observable fromstream stream integer generate int value v getandincrement if value 1 throw new testexception return value test assertfailure testexception class 0 
atomicinteger counter new atomicinteger observable fromstream stream integer generate int value counter getandincrement if value 1 throw new testexception return value filter v true test assertfailure testexception class 0 
atomicinteger calls new atomicinteger observable fromstream stream of onclose calls getandincrement test assertresult assertequals 1 calls get 
atomicinteger calls new atomicinteger observable fromstream stream of 1 2 3 4 5 onclose calls getandincrement test assertresult 1 2 3 4 5 assertequals 1 calls get 
atomicinteger calls new atomicinteger observable fromstream stream of 1 2 3 4 5 onclose calls getandincrement take 3 test assertresult 1 2 3 assertequals 1 calls get 
atomicinteger calls new atomicinteger atomicinteger counter new atomicinteger observable fromstream stream integer generate int value counter getandincrement if value 1 throw new testexception return value onclose calls getandincrement test assertfailure testexception class 0 assertequals 1 calls get 
atomicinteger calls new atomicinteger observable fromstream stream of 1 2 3 4 5 onclose calls getandincrement filter v true test assertresult 1 2 3 4 5 assertequals 1 calls get 
atomicinteger calls new atomicinteger observable fromstream stream of 1 2 3 4 5 onclose calls getandincrement filter v true take 3 test assertresult 1 2 3 assertequals 1 calls get 
atomicinteger calls new atomicinteger atomicinteger counter new atomicinteger observable fromstream stream integer generate int value counter getandincrement if value 1 throw new testexception return value onclose calls getandincrement filter v true test assertfailure testexception class 0 assertequals 1 calls get 
testhelper checkdisposed observable fromstream stream of 1 
testobserver integer to new testobserver suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer override public boolean hasnext return true override public integer next to dispose return 1 observable fromstream stream subscribe to to assertempty 
testobserver integer to new testobserver suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer int calls override public boolean hasnext if calls 1 to dispose return true override public integer next return 1 observable fromstream stream subscribe to to assertempty 
observable range 1 5 collect collectors tolist test assertresult arrays aslist 1 2 3 4 5 
observable empty collect collectors tolist test assertresult collections emptylist 
observable error new testexception collect collectors tolist test assertfailure testexception class 
observable range 1 5 collect new collector integer integer integer override public supplier integer supplier throw new testexception override public biconsumer integer integer accumulator return a b override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset test assertfailure testexception class 
behaviorprocessor integer source behaviorprocessor createdefault 1 source collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b throw new testexception override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset test assertfailure testexception class assertfalse source hassubscribers 
observable range 1 5 collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a throw new testexception override public set characteristics characteristics return collections emptyset test assertfailure testexception class 
testhelper witherrortracking errors observable integer source new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onnext 2 observer onerror new ioexception observer oncomplete source collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b throw new testexception override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset test assertfailure testexception class testhelper assertundeliverable errors 0 ioexception class 
testhelper checkdisposed publishsubject create collect collectors tolist 
testhelper f f collect collectors tolist 
observable range 1 5 collect collectors tolist toobservable test assertresult arrays aslist 1 2 3 4 5 
observable empty collect collectors tolist toobservable test assertresult collections emptylist 
observable error new testexception collect collectors tolist toobservable test assertfailure testexception class 
observable range 1 5 collect new collector integer integer integer override public supplier integer supplier throw new testexception override public biconsumer integer integer accumulator return a b override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset toobservable test assertfailure testexception class 
behaviorprocessor integer source behaviorprocessor createdefault 1 source collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b throw new testexception override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset toobservable test assertfailure testexception class assertfalse source hassubscribers 
observable range 1 5 collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a throw new testexception override public set characteristics characteristics return collections emptyset toobservable test assertfailure testexception class 
testhelper witherrortracking errors observable integer source new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onnext 2 observer onerror new ioexception observer oncomplete source collect new collector integer integer integer override public supplier integer supplier return 1 override public biconsumer integer integer accumulator return a b throw new testexception override public binaryoperator integer combiner return a b a b override public function integer integer finisher return a a override public set characteristics characteristics return collections emptyset toobservable test assertfailure testexception class testhelper assertundeliverable errors 0 ioexception class 
testhelper checkdisposed publishprocessor create collect collectors tolist toobservable 
testhelper f f collect collectors tolist toobservable 
observable range 1 5 collect collectors tolist toobservable take 1 test assertresult arrays aslist 1 2 3 4 5 
testobserver list integer to observable range 1 5 concatwith observable never collect collectors tolist test to dispose to assertempty 
stream integer stream stream of 1 stream foreach v return single just 1 v stream 
flowable fromoptional optional of 1 test assertresult 1 
flowable fromoptional optional empty test assertresult 
single just 1 stream of test assertresult 1 
single just 1 v stream of test assertresult 
single just 1 v stream of 2 3 4 5 6 test assertresult 2 3 4 5 6 
single just 1 v stream of 2 3 4 5 6 take 3 test assertresult 2 3 4 
suppresswarnings unchecked function super integer stream extends integer f mock function class single integer error new testexception f test assertfailure testexception class verify f never apply any 
single just 1 v throw new testexception test assertfailure testexception class 
testhelper checkdisposed single never stream of 
testhelper m m stream of 
testhelper singlesubject create stream of 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable any single just 1 v stream integer of subscribe ts ts assertfuseable assertfusionmode queuefuseable async assertresult 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable any single just 1 v stream integer of v subscribe ts ts assertfuseable assertfusionmode queuefuseable async assertresult 1 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable any single just 1 v stream integer of v v 1 v 2 subscribe ts ts assertfuseable assertfusionmode queuefuseable async assertresult 1 2 3 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable sync single just 1 v stream integer of v v 1 v 2 subscribe ts ts assertfuseable assertfusionmode queuefuseable none assertresult 1 2 3 
single just 1 v intstream rangeclosed 1 5 boxed test 0l assertempty requestmore 2 assertvaluesonly 1 2 requestmore 2 assertvaluesonly 1 2 3 4 requestmore 1 assertresult 1 2 3 4 5 
single just 1 v intstream rangeclosed 1 5 boxed rebatchrequests 1 test 0l assertempty requestmore 2 assertvaluesonly 1 2 requestmore 2 assertvaluesonly 1 2 3 4 requestmore 1 assertresult 1 2 3 4 5 
testsubscriberex integer ts new testsubscriberex ts setinitialfusionmode queuefuseable any singlesubject integer ss singlesubject create ss v stream integer of v v 1 v 2 subscribe ts ts assertfuseable assertfusionmode queuefuseable async assertempty ss onsuccess 1 ts assertresult 1 2 3 
atomicreference queuesubscription integer qsr new atomicreference singlesubject integer ss singlesubject create ss stream of subscribe new flowablesubscriber integer override public void onnext integer t override public void onerror throwable t override public void oncomplete override suppresswarnings unchecked public void onsubscribe nonnull subscription s qsr set queuesubscription integer s queuesubscription integer qs qsr get assertequals queuefuseable async qs requestfusion queuefuseable async asserttrue qs isempty assertnull qs poll ss onsuccess 1 assertfalse qs isempty assertequals 1 qs poll intvalue asserttrue qs isempty assertnull qs poll qs cancel asserttrue qs isempty assertnull qs poll 
testsubscriber integer ts new testsubscriber single just 1 v stream of 1 2 3 4 5 subscribe new flowablesubscriber integer subscription upstream override public void onsubscribe nonnull subscription s ts onsubscribe new booleansubscription upstream s s request 1 override public void onnext integer t ts onnext t upstream request 1 override public void onerror throwable t ts onerror t override public void oncomplete ts oncomplete ts assertresult 1 2 3 4 5 
testhelper witherrortracking errors single just 1 v stream of v onclose throw new testexception test assertresult 1 testhelper assertundeliverable errors 0 testexception class 
suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer int count override public boolean hasnext if count 0 throw new testexception return true override public integer next return 1 single just 1 v stream test assertfailure testexception class 1 
suppresswarnings unchecked stream integer stream mock stream class when stream iterator thenreturn new iterator integer override public boolean hasnext return true override public integer next throw new testexception single just 1 v stream test assertfailure testexception class 
suppresswarnings unchecked stream integer stream mock stream class testsubscriber integer ts new testsubscriber when stream iterator thenreturn new iterator integer int count override public boolean hasnext if count 0 ts cancel return true override public integer next return 1 single just 1 v stream subscribewith ts assertvaluesonly 1 
suppresswarnings unchecked stream integer stream mock stream class testsubscriber integer ts new testsubscriber when stream iterator thenreturn new iterator integer override public boolean hasnext return true override public integer next ts cancel return 1 single just 1 v stream subscribewith ts assertempty 
for int i 0 i testhelper race long loops i singlesubject integer ss singlesubject create testsubscriber integer ts new testsubscriber 0l ss stream of subscribe ts runnable r1 ss onsuccess 1 runnable r2 ts request 1 testhelper race r1 r2 ts assertresult 1 
stream integer stream stream of 1 stream foreach v return flowable fromstream stream 
observable range 1 5 mapoptional optional of test assertresult 1 2 3 4 5 
observable range 1 5 mapoptional v optional integer empty test assertresult 
observable range 1 10 mapoptional modulo test assertresult 2 4 6 8 10 
behaviorsubject integer source behaviorsubject createdefault 1 source mapoptional v throw new testexception test assertfailure testexception class assertfalse source hasobservers 
behaviorsubject integer source behaviorsubject createdefault 1 source mapoptional v null test assertfailure nullpointerexception class assertfalse source hasobservers 
observable integer source new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onnext 2 source mapoptional v throw new testexception test assertfailure testexception class 
observable range 1 5 mapoptional optional of to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 1 2 3 4 5 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 us mapoptional optional of to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 1 2 3 4 5 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 us mapoptional optional of to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 1 2 3 4 5 
observable range 1 5 mapoptional v optional empty to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 us mapoptional v optional empty to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 us mapoptional v optional empty to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 
observable range 1 10 mapoptional modulo to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 2 4 6 8 10 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 6 7 8 9 10 us mapoptional modulo to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 2 4 6 8 10 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 6 7 8 9 10 us mapoptional modulo to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 2 4 6 8 10 
observable range 1 5 mapoptional optional of filter v true test assertresult 1 2 3 4 5 
observable range 1 5 mapoptional v optional integer empty filter v true test assertresult 
observable range 1 10 mapoptional modulo filter v true test assertresult 2 4 6 8 10 
behaviorsubject integer source behaviorsubject createdefault 1 source mapoptional v throw new testexception filter v true test assertfailure testexception class assertfalse source hasobservers 
behaviorsubject integer source behaviorsubject createdefault 1 source mapoptional v null filter v true test assertfailure nullpointerexception class assertfalse source hasobservers 
observable integer source new observable integer override protected void subscribeactual observer super integer observer observer onsubscribe disposable empty observer onnext 1 observer onnext 2 source mapoptional v throw new testexception filter v true test assertfailure testexception class 
observable range 1 5 mapoptional optional of filter v true to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 1 2 3 4 5 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 us mapoptional optional of filter v true to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 1 2 3 4 5 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 us mapoptional optional of filter v true to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 1 2 3 4 5 
observable range 1 5 mapoptional v optional empty filter v true to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 us mapoptional v optional empty filter v true to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 us mapoptional v optional empty filter v true to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 
observable range 1 10 mapoptional modulo filter v true to testhelper testconsumer false queuefuseable sync assertfuseable assertfusionmode queuefuseable sync assertresult 2 4 6 8 10 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 6 7 8 9 10 us mapoptional modulo filter v true to testhelper testconsumer false queuefuseable async assertfuseable assertfusionmode queuefuseable async assertresult 2 4 6 8 10 
unicastsubject integer us unicastsubject create testhelper emit us 1 2 3 4 5 6 7 8 9 10 us mapoptional modulo filter v true to testhelper testconsumer false queuefuseable async queuefuseable boundary assertfuseable assertfusionmode queuefuseable none assertresult 2 4 6 8 10 
acd new 2 disposable d1 disposable empty disposable d2 disposable empty asserttrue acd setresource 0 d1 asserttrue acd setresource 1 d2 disposable d3 disposable empty disposable d4 disposable empty acd replaceresource 0 d3 acd replaceresource 1 d4 assertfalse d1 isdisposed assertfalse d2 isdisposed acd setresource 0 d1 acd setresource 1 d2 asserttrue d3 isdisposed asserttrue d4 isdisposed assertfalse acd isdisposed acd dispose acd dispose asserttrue acd isdisposed asserttrue d1 isdisposed asserttrue d2 isdisposed disposable d5 disposable empty disposable d6 disposable empty assertfalse acd setresource 0 d5 acd replaceresource 1 d6 asserttrue d5 isdisposed asserttrue d6 isdisposed 
for int i 0 i testhelper race default loops i final acd new 2 runnable r new runnable override public void run acd dispose testhelper race r r 
for int i 0 i testhelper race default loops i final acd new 2 runnable r new runnable override public void run acd replaceresource 0 disposable empty testhelper race r r 
for int i 0 i testhelper race default loops i final acd new 2 runnable r new runnable override public void run acd setresource 0 disposable empty testhelper race r r 
final atomicinteger count new atomicinteger cancellable c new cancellable override public void cancel throws exception count getandincrement cd new c assertfalse cd isdisposed cd dispose cd dispose asserttrue cd isdisposed assertequals 1 count get 
final atomicinteger count new atomicinteger cancellable c new cancellable override public void cancel throws exception count getandincrement throw new testexception cd new c assertfalse cd isdisposed list throwable list testhelper trackpluginerrors try cd dispose cd dispose testhelper assertundeliverable list 0 testexception class finally rxjavaplugins reset asserttrue cd isdisposed assertequals 1 count get 
for int i 0 i testhelper race default loops i final atomicinteger count new atomicinteger cancellable c new cancellable override public void cancel throws exception count getandincrement final cd new c runnable r new runnable override public void run cd dispose testhelper race r r assertequals 1 count get 
testhelper assertnooffer emptydisposable instance 
assertequals queuefuseable none emptydisposable instance requestfusion queuefuseable sync assertequals queuefuseable async emptydisposable instance requestfusion queuefuseable async 
assertequals 2 emptydisposable values length assertnotnull emptydisposable valueof instance assertnotnull emptydisposable valueof never 
assertequals 1 disposablehelper values length assertnotnull disposablehelper valueof disposed 
asserttrue disposablehelper disposed isdisposed disposablehelper disposed dispose asserttrue disposablehelper disposed isdisposed 
list throwable list testhelper trackpluginerrors try assertfalse disposablehelper validate null null testhelper asserterror list 0 nullpointerexception class next is null finally rxjavaplugins reset 
for int i 0 i testhelper race default loops i final atomicreference disposable d new atomicreference runnable r new runnable override public void run disposablehelper dispose d testhelper race r r 
for int i 0 i testhelper race default loops i final atomicreference disposable d new atomicreference runnable r new runnable override public void run disposablehelper replace d disposable empty testhelper race r r 
for int i 0 i testhelper race default loops i final atomicreference disposable d new atomicreference runnable r new runnable override public void run disposablehelper set d disposable empty testhelper race r r 
final atomicreference disposable d new atomicreference disposablehelper dispose d assertfalse disposablehelper set d null assertfalse disposablehelper replace d null 
disposable u disposable empty final atomicreference disposable d new atomicreference u disposablehelper dispose d asserttrue u isdisposed 
atomicreference disposable ref new atomicreference disposable d1 disposable empty asserttrue disposablehelper tryset ref d1 disposable d2 disposable empty assertfalse disposablehelper tryset ref d2 assertfalse d1 isdisposed assertfalse d2 isdisposed disposablehelper dispose ref disposable d3 disposable empty assertfalse disposablehelper tryset ref d3 asserttrue d3 isdisposed 
disposable d1 disposable empty disposable d2 disposable empty lcd new d1 d2 lcd clear assertfalse lcd isdisposed asserttrue d1 isdisposed asserttrue d2 isdisposed d1 disposable empty d2 disposable empty lcd addall d1 d2 lcd dispose asserttrue lcd isdisposed asserttrue d1 isdisposed asserttrue d2 isdisposed 
disposable d1 disposable empty disposable d2 disposable empty lcd new arrays aslist d1 d2 lcd clear assertfalse lcd isdisposed asserttrue d1 isdisposed asserttrue d2 isdisposed d1 disposable empty d2 disposable empty lcd add d1 lcd addall d2 lcd dispose asserttrue lcd isdisposed asserttrue d1 isdisposed asserttrue d2 isdisposed 
lcd new assertfalse lcd isdisposed lcd clear assertfalse lcd isdisposed lcd dispose lcd dispose lcd clear asserttrue lcd isdisposed 
lcd new lcd dispose disposable d disposable empty assertfalse lcd add d asserttrue d isdisposed d disposable empty assertfalse lcd addall d asserttrue d isdisposed 
disposable d new disposable override public void dispose throw new testexception override public boolean isdisposed return false lcd new d d try lcd dispose fail should have thrown catch compositeexception ex list throwable list ex getexceptions testhelper asserterror list 0 testexception class testhelper asserterror list 1 testexception class lcd new d try lcd dispose fail should have thrown catch testexception ex 
lcd new disposable d disposable empty lcd add d asserttrue lcd delete d assertfalse d isdisposed lcd add d asserttrue lcd remove d asserttrue d isdisposed assertfalse lcd remove d assertfalse lcd delete d lcd new assertfalse lcd remove d assertfalse lcd delete d 
for int i 0 i testhelper race default loops i final cd new runnable run new runnable override public void run cd dispose testhelper race run run 
for int i 0 i testhelper race default loops i final cd new runnable run new runnable override public void run cd add disposable empty testhelper race run run 
for int i 0 i testhelper race default loops i final cd new runnable run new runnable override public void run cd addall disposable empty testhelper race run run 
for int i 0 i testhelper race default loops i final cd new final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd remove d1 testhelper race run run 
for int i 0 i testhelper race default loops i final cd new final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd delete d1 testhelper race run run 
for int i 0 i testhelper race default loops i final cd new final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd clear testhelper race run run 
for int i 0 i testhelper race default loops i final cd new runnable run new runnable override public void run cd dispose runnable run2 new runnable override public void run cd add disposable empty testhelper race run run2 
for int i 0 i testhelper race default loops i final cd new runnable run new runnable override public void run cd dispose runnable run2 new runnable override public void run cd addall disposable empty testhelper race run run2 
for int i 0 i testhelper race default loops i final cd new final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd dispose runnable run2 new runnable override public void run cd remove d1 testhelper race run run2 
for int i 0 i testhelper race default loops i final cd new final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd dispose runnable run2 new runnable override public void run cd delete d1 testhelper race run run2 
for int i 0 i testhelper race default loops i final cd new final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd dispose runnable run2 new runnable override public void run cd clear testhelper race run run2 
testhelper assertnooffer new 
object qs new assertnull qs poll qs clear assertnull qs poll 
object qs new assertfalse qs isdisposed qs cancel asserttrue qs isdisposed qs cancel asserttrue qs isdisposed 
object qs new assertfalse qs isdisposed qs dispose asserttrue qs isdisposed qs dispose asserttrue qs isdisposed 
object qs new object assertfalse qs isdisposed qs cancel 
object qs new object assertfalse qs isdisposed qs dispose 
return 1 
return 1 
return 1 
multicastprocessor integer mp multicastprocessor create mp start mp onerror new testexception return mp 
return executors newcachedthreadpool 
return 1 
return 1024 
return 1024 1024 
return 1 
return 1 
if subscriptionhelper setonce upstream s actual onsubscribe this 
upstream lazyset subscriptionhelper cancelled actual onerror t 
upstream lazyset subscriptionhelper cancelled actual oncomplete 
refcountsubscriber t rcs new refcountsubscriber s this if add rcs emptysubscription error new refcountprocessor terminated s return actual subscribe rcs 
return actual hascomplete 
return actual hasthrowable 
return actual getthrowable 
return actual hassubscribers 
subscriptionhelper cancel upstream 
lazyset true upstream cancel parent remove this 
this upstream s downstream onsubscribe this 
downstream onerror t 
downstream oncomplete 
return 0 
return 0 
return 1 
return 1 
return 1 
return 1 
return 1 
return 1 
return 1 
return 1 
return 1 
return 1 
return 1 
return 1l 
multicastprocessor integer mp multicastprocessor create mp start mp onerror new testexception return mp 
return executors newcachedthreadpool 
return 1 
return 1024 
unicastprocessor integer up unicastprocessor create up onerror new testexception return up 
return executors newcachedthreadpool 
return 1 
return 1024 
return 1 
return flowable fromsupplier new supplier long override public long get throws throwable throw new testexception 
return 1 
return flowable fromcallable new callable long override public long call throws exception throw new testexception 
return 1 
return flowable error new testexception 
return 1024 
return new finiterangeiterator end 
return count end 
long c count if c end count c 1 return c throw new 
throw new 
return new 
return true 
return count 
throw new 
return 1 
return 1 
list string values observable just one two startwitharray zero tolist blockingget assertequals zero values get 0 assertequals two values get 2 
list string li new arraylist li add alpha li add beta list string values observable just one two startwithiterable li tolist blockingget assertequals alpha values get 0 assertequals beta values get 1 assertequals one values get 2 assertequals two values get 3 
list string li new arraylist li add alpha li add beta list string values observable just one two startwith observable fromiterable li tolist blockingget assertequals alpha values get 0 assertequals beta values get 1 assertequals one values get 2 assertequals two values get 3 
observable just 1 startwitharray test assertresult 1 
geteventstream http clusterb 20 scan new hashmap new bifunction hashmap string string event hashmap string string override public hashmap string string apply hashmap string string accum event perinstanceevent accum put instance perinstanceevent instanceid return accum take 10 blockingforeach new consumer hashmap string string override public void accept hashmap string string pv system out println pv thread sleep 200 
final countdownlatch latch new countdownlatch 1 final atomicreference throwable caughterror new atomicreference observable long o observable interval 50 timeunit milliseconds observer long observer new defaultobserver long override public void oncomplete system out println completed latch countdown override public void onerror throwable e system out println error e caughterror set e latch countdown override public void onnext long args throw new runtimeexception forced failure o safesubscribe observer latch await 2000 timeunit milliseconds assertnotnull caughterror get 
final countdownlatch latch new countdownlatch 1 final atomicreference throwable caughterror new atomicreference observable long o observable interval 50 timeunit milliseconds observer long observer new defaultobserver long override public void oncomplete system out println completed latch countdown override public void onerror throwable e system out println error e caughterror set e latch countdown override public void onnext long args throw new runtimeexception forced failure o observeon schedulers newthread safesubscribe observer latch await 2000 timeunit milliseconds assertnotnull caughterror get 
observable amb new iterable observable object override public iterator observable object iterator return null test asserterror nullpointerexception class 
observable amb arrays aslist observable never null test asserterror nullpointerexception class 
observable combinelatest new iterable observable object override public iterator observable object iterator return null new function object object override public object apply object v return 1 128 blockinglast 
observable combinelatest arrays aslist observable never null new function object object override public object apply object v return 1 128 blockinglast 
observable combinelatest arrays aslist just1 new function object object override public object apply object v return null 128 blockinglast 
observable new iterable observable object override public iterator observable object iterator return null new function object object override public object apply object v return 1 128 blockinglast 
observable arrays aslist observable never null new function object object override public object apply object v return 1 128 blockinglast 
observable arrays aslist just1 new function object object override public object apply object v return null 128 blockinglast 
observable concat new iterable observable object override public iterator observable object iterator return null blockinglast 
observable concat arrays aslist just1 null blockinglast 
observable concatarray just1 null blockinglast 
observable defer new supplier observable object override public observable object get return null blockinglast 
observable error new supplier throwable override public throwable get return null blockingsubscribe 
observable fromarray 1 null blockinglast 
observable fromcallable new callable object override public object call throws exception return null blockinglast 
futuretask object f new futuretask functions empty runnable null f run testobserver object to new testobserver observable fromfuture f subscribe to to assertnovalues to assertnotcomplete to asserterror nullpointerexception class 
futuretask object f new futuretask functions empty runnable null f run observable fromfuture f 1 timeunit seconds blockinglast 
observable fromiterable new iterable object override public iterator object iterator return null blockinglast 
observable fromiterable arrays aslist 1 null blockinglast 
observable generate new consumer emitter object override public void accept emitter object s s onnext null blockinglast 
biconsumer integer emitter integer generator new biconsumer integer emitter integer override public void accept integer s emitter integer o o oncomplete observable generate new supplier integer override public integer get return null generator blockingsubscribe 
observable generate new supplier object override public object get return null new bifunction object emitter object object override public object apply object s emitter object o o oncomplete return s blockingsubscribe 
observable interval 1 timeunit seconds null 
suppresswarnings rawtypes class observable clazz observable class for int argcount 1 argcount 10 argcount for int argnull 1 argnull argcount argnull class params new class argcount arrays fill params object class object values new object argcount arrays fill values 1 values argnull 1 null method m clazz getmethod just params try m invoke null values assert fail no exception for argcount argcount argnull argnull catch ex if ex getcause instanceof nullpointerexception assert fail unexpected exception for argcount argcount argnull argnull ex 
observable merge new iterable observable object override public iterator observable object iterator return null 128 128 blockinglast 
observable merge arrays aslist just1 null 128 128 blockinglast 
observable mergedelayerror new iterable observable object override public iterator observable object iterator return null 128 128 blockinglast 
observable mergedelayerror arrays aslist just1 null 128 128 blockinglast 
observable using new supplier object override public object get return 1 new function object observable object override public observable object apply object d return null new consumer object override public void accept object d blockinglast 
observable zip new iterable observable object override public iterator observable object iterator return null new function object object override public object apply object v return 1 blockinglast 
observable zip arrays aslist just1 just1 new function object object override public object apply object a return null blockinglast 
observable zip new iterable observable object override public iterator observable object iterator return null new function object object override public object apply object a return 1 true 128 blockinglast 
observable zip arrays aslist just1 just1 new function object object override public object apply object a return null true 128 blockinglast 
just1 buffer 1 1 new supplier collection integer override public collection integer get return null blockingsubscribe 
just1 buffer 1l 1l timeunit seconds schedulers single new supplier collection integer override public collection integer get return null blockingsubscribe 
just1 buffer just1 new function integer observable object override public observable object apply integer v return null blockingsubscribe 
just1 buffer just1 new supplier collection integer override public collection integer get return null blockingsubscribe 
just1 collect new supplier object override public object get return null new biconsumer object integer override public void accept object a integer b blockingget 
just1 collect new supplier object override public object get return 1 null 
just1 concatmap new function integer observable object override public observable object apply integer v return null blockingsubscribe 
just1 concatmapiterable new function integer iterable object override public iterable object apply integer v return null blockingsubscribe 
just1 concatmapiterable new function integer iterable object override public iterable object apply integer v return new iterable object override public iterator object iterator return null blockingsubscribe 
just1 debounce new function integer observable object override public observable object apply integer v return null blockingsubscribe 
just1 delay new function integer observable object override public observable object apply integer v return null blockingsubscribe 
just1 delay just1 new function integer observable object override public observable object apply integer v return null blockingsubscribe 
just1 distinct new function integer object override public object apply integer v return v new supplier collection object override public collection object get return null blockingsubscribe 
just1 distinct new function integer object override public object apply integer v return null blockingsubscribe 
observable range 1 2 distinctuntilchanged new function integer object override public object apply integer v return null test assertresult 1 
just1 flatmap new function integer observable object override public observable object apply integer v return null blockingsubscribe 
just1 flatmap new function integer observable integer override public observable integer apply integer v return null new function throwable observable integer override public observable integer apply throwable e return just1 new supplier observable integer override public observable integer get return just1 blockingsubscribe 
just1 flatmap new function integer observable integer override public observable integer apply integer v return just1 new function throwable observable integer override public observable integer apply throwable e return just1 new supplier observable integer override public observable integer get return null blockingsubscribe 
just1 flatmap new function integer observable object override public observable object apply integer v return null new bifunction integer object object override public object apply integer a object b return 1 blockingsubscribe 
just1 flatmap new function integer observable integer override public observable integer apply integer v return just1 new bifunction integer integer object override public object apply integer a integer b return null blockingsubscribe 
just1 flatmapiterable new function integer iterable integer override public iterable integer apply integer v return null blockingsubscribe 
just1 flatmapiterable new function integer iterable object override public iterable object apply integer v return new iterable object override public iterator object iterator return null blockingsubscribe 
just1 flatmapiterable new function integer iterable integer override public iterable integer apply integer v return arrays aslist 1 null blockingsubscribe 
just1 flatmapiterable new function integer iterable integer override public iterable integer apply integer v return arrays aslist 1 new bifunction integer integer object override public object apply integer a integer b return null blockingsubscribe 
just1 groupby new function integer object override public object apply integer v return null blockingsubscribe 
just1 groupby new function integer object override public object apply integer v return v new function integer object override public object apply integer v return null blockingsubscribe 
just1 lift new observableoperator object integer override public observer super integer apply observer super object observer return null blockingsubscribe 
just1 map new function integer object override public object apply integer v return null blockingsubscribe 
observable error new testexception onerrorresumenext new function throwable observable object override public observable object apply throwable e return null blockingsubscribe 
observable error new testexception onerrorreturn new function throwable object override public object apply throwable e return null blockingsubscribe 
just1 publish new function observable integer observable object override public observable object apply observable integer v return null blockingsubscribe 
observable just 1 1 reduce new bifunction integer integer integer override public integer apply integer a integer b return null blockingget 
just1 reduce 1 new bifunction integer integer integer override public integer apply integer a integer b return null blockingget 
just1 reducewith new supplier object override public object get return null new bifunction object integer object override public object apply object a integer b return 1 blockingget 
just1 repeatwhen new function observable object observable object override public observable object apply observable object v return null blockingsubscribe 
just1 replay new function observable integer observable object override public observable object apply observable integer o return null blockingsubscribe 
just1 replay new function observable integer observable object override public observable object apply observable integer v return null 1 1 timeunit seconds blockingsubscribe 
just1 replay new function observable integer observable object override public observable object apply observable integer v return null 1 timeunit seconds schedulers single blockingsubscribe 
observable error new testexception retrywhen new function observable extends throwable observable object override public observable object apply observable extends throwable f return null blockingsubscribe 
observable just 1 1 scan new bifunction integer integer integer override public integer apply integer a integer b return null blockingsubscribe 
just1 scan 1 new bifunction integer integer integer override public integer apply integer a integer b return null blockingsubscribe 
just1 scanwith new supplier object override public object get return null new bifunction object integer object override public object apply object a integer b return 1 blockingsubscribe 
just1 scanwith new supplier object override public object get return 1 new bifunction object integer object override public object apply object a integer b return null blockingsubscribe 
just1 startwithiterable new iterable integer override public iterator integer iterator return null blockingsubscribe 
just1 startwithiterable arrays aslist 1 null blockingsubscribe 
just1 switchmap new function integer observable object override public observable object apply integer v return null blockingsubscribe 
just1 timeout new function integer observable object override public observable object apply integer v return null blockingsubscribe 
observable just 1 1 timeout observable never new function integer observable object override public observable object apply integer v return null blockingsubscribe 
just1 tolist new supplier collection integer override public collection integer get return null blockingget 
just1 tomap new function integer object override public object apply integer v return v new function integer object override public object apply integer v return null blockingget 
just1 tomap new function integer object override public object apply integer v return v new function integer object override public object apply integer v return v new supplier map object object override public map object object get return null blockingget 
just1 tomap new function integer object override public object apply integer v return v new function integer object override public object apply integer v return null blockingget 
just1 tomultimap new function integer object override public object apply integer v return v new function integer object override public object apply integer v return v new supplier map object collection object override public map object collection object get return null blockingget 
just1 tomultimap new function integer integer override public integer apply integer v return v new function integer integer override public integer apply integer v return v new supplier map integer collection integer override public map integer collection integer get return new hashmap new function integer collection integer override public collection integer apply integer v return null blockingget 
observable never window just1 new function integer observable object override public observable object apply integer v return null blockingsubscribe 
just1 withlatestfrom just1 new bifunction integer integer object override public object apply integer a integer b return null blockingsubscribe 
just1 zipwith arrays aslist 1 new bifunction integer integer object override public object apply integer a integer b return null blockingsubscribe 
just1 zipwith new iterable object override public iterator object iterator return null new bifunction integer object object override public object apply integer a object b return 1 blockingsubscribe 
observable just 1 2 zipwith arrays aslist 1 null new bifunction integer integer object override public object apply integer a integer b return 1 blockingsubscribe 
just1 zipwith just1 new bifunction integer integer object override public object apply integer a integer b return null blockingsubscribe 
observable movie just new horrormovie observable movie fromiterable new arraylist horrormovie 
comparator media sortfunction new comparator media override public int compare media t1 media t2 return 1 observable media o observable just new movie new tvseason new album o tosortedlist sortfunction observable movie o2 observable just new movie new actionmovie new horrormovie o2 tosortedlist sortfunction 
observable movie movies observable just new horrormovie new actionmovie new movie testobserverex string to new testobserverex movies groupby new function movie object override public object apply movie v return v getclass doonnext new consumer groupedobservable object movie override public void accept groupedobservable object movie g system out println g getkey flatmap new function groupedobservable object movie observable string override public observable string apply groupedobservable object movie g return g doonnext new consumer movie override public void accept movie pv system out println pv compose new movie movie override public observable movie apply observable movie m return m concatwith observable just new actionmovie map new function movie string override public string apply movie v return v tostring subscribe to to assertterminated to assertnoerrors assertequals 6 to values size 
observable horrormovie movie observable just new horrormovie observable movie movie2 movie compose new horrormovie movie override public observable movie apply observable horrormovie t return observable just new movie 
observable movie movie observable movie just new horrormovie observable horrormovie movie2 movie compose new movie horrormovie override public observable horrormovie apply observable movie t return observable just new horrormovie 
observable movie movie observable movie just new horrormovie observable horrormovie movie2 movie compose new movie horrormovie override public observable horrormovie apply observable movie t return observable just new horrormovie map new function horrormovie horrormovie override public horrormovie apply horrormovie v return v 
observable horrormovie movie observable just new horrormovie observable horrormovie movie2 movie compose new horrormovie horrormovie override public observable horrormovie apply observable horrormovie t1 return t1 map new function horrormovie horrormovie override public horrormovie apply horrormovie v return v 
list movie list1 arrays aslist new movie new horrormovie new actionmovie list movie list2 arrays aslist new actionmovie new movie new horrormovie new actionmovie observable list movie movies observable just list1 list2 movies compose deltatransformer 
observable integer o observable just 1 2 3 int value o reduce new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 toobservable blockingsingle assertequals 6 value 
observable movie horrormovies observable movie just new horrormovie observable movie reduceresult horrormovies scan new bifunction movie movie movie override public movie apply movie t1 movie t2 return t2 takelast 1 observable movie reduceresult2 horrormovies reduce new bifunction movie movie movie override public movie apply movie t1 movie t2 return t2 toobservable assertnotnull reduceresult2 
observable movie horrormovies observable movie just new horrormovie observable movie reduceresult2 horrormovies reduce new bifunction movie movie movie override public movie apply movie t1 movie t2 return t2 toobservable assertnotnull reduceresult2 
observable integer o observable just 1 2 3 int value o reduce new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 blockingget assertequals 6 value 
observable movie horrormovies observable movie just new horrormovie observable movie reduceresult horrormovies scan new bifunction movie movie movie override public movie apply movie t1 movie t2 return t2 takelast 1 maybe movie reduceresult2 horrormovies reduce new bifunction movie movie movie override public movie apply movie t1 movie t2 return t2 assertnotnull reduceresult2 
observable movie horrormovies observable movie just new horrormovie maybe movie reduceresult2 horrormovies reduce new bifunction movie movie movie override public movie apply movie t1 movie t2 return t2 assertnotnull reduceresult2 
observable movie horrormovies observable movie just new horrormovie horrormovies 
obs reduce new bifunction movie movie movie override public movie apply movie t1 movie t2 return t2 
final atomicinteger c new atomicinteger observable just 1 2 3 4 take 2 subscribe new defaultobserver integer override public void onstart c incrementandget override public void oncomplete override public void onerror throwable e override public void onnext integer t assertequals 1 c get 
final atomicinteger c new atomicinteger observable just 1 2 3 4 take 2 subscribe new defaultobserver integer override public void onstart c incrementandget override public void oncomplete override public void onerror throwable e override public void onnext integer t assertequals 1 c get 
final atomicinteger c new atomicinteger observable just 1 2 3 4 lift new observableoperator integer integer override public observer super integer apply final observer super integer child return new defaultobserver integer override public void onstart c incrementandget override public void oncomplete child oncomplete override public void onerror throwable e child onerror e override public void onnext integer t child onnext t subscribe assertequals 1 c get 
final list integer list new arraylist observable just 1 subscribe new consumer integer override public void accept integer v throws exception list add v new consumer throwable override public void accept throwable e throws exception list add 100 assertequals arrays aslist 1 list 
final list integer list new arraylist observable integer error new testexception subscribe new consumer integer override public void accept integer v throws exception list add v new consumer throwable override public void accept throwable e throws exception list add 100 assertequals arrays aslist 100 list 
publishsubject integer ps publishsubject create ps test true assertfalse ps hasobservers 
testobserver integer to new testobserver observable just 1 safesubscribe new safeobserver to to assertresult 1 
publishsubject integer ps publishsubject create ps test false asserttrue ps hasobservers 
rxjavaplugins new bifunction observable observer observer override public observer apply observable a observer b throws exception return null try try observable just 1 test fail should have thrown catch nullpointerexception ex assertequals the rxjavaplugins onsubscribe hook returned a null observer please change the handler provided to rxjavaplugins for invalid null returns further reading https github com reactivex rxjava wiki plugins ex getmessage finally rxjavaplugins reset 
throw new 
list throwable list testhelper trackpluginerrors try try new badobservable test fail should have thrown catch nullpointerexception ex if ex getcause instanceof fail ex tostring should be npe iae testhelper asserterror list 0 class finally rxjavaplugins reset 
w testhelper mockobserver wo testhelper mocksingleobserver wm testhelper mockmaybeobserver 
string items new string one two three assertequals long 3l observable fromarray items count blockingget assertequals two observable fromarray items skip 1 take 1 blockingsingle assertequals three observable fromarray items takelast 1 blockingsingle 
arraylist string items new arraylist items add one items add two items add three assertequals long 3l observable fromiterable items count blockingget assertequals two observable fromiterable items skip 1 take 1 blockingsingle assertequals three observable fromiterable items takelast 1 blockingsingle 
observable string items observable just one two three assertequals long 3l items count blockingget assertequals two items skip 1 take 1 blockingsingle assertequals three items takelast 1 blockingsingle 
observable string items observable just one assertequals long 1l items count blockingget assertequals one items takelast 1 blockingsingle 
observable string o observable just one two three observer string observer testhelper mockobserver o subscribe observer verify observer times 1 onnext one verify observer times 1 onnext two verify observer times 1 onnext three verify observer never onerror any throwable class verify observer times 1 oncomplete 
observable string o observable just a b c d o count toobservable subscribe w verify w times 1 onnext anylong verify w onnext 4l verify w never onerror any throwable class verify w times 1 oncomplete 
observable string o observable empty o count toobservable subscribe w verify w times 1 onnext anylong verify w onnext 0l verify w never onerror any throwable class verify w times 1 oncomplete 
observable string o observable error new supplier throwable override public throwable get return new runtimeexception o count toobservable subscribe w verify w never onnext anyint verify w never oncomplete verify w times 1 onerror any runtimeexception class 
observable string o observable just a b c d o count subscribe wo verify wo times 1 onsuccess anylong verify wo onsuccess 4l verify wo never onerror any throwable class 
observable string o observable empty o count subscribe wo verify wo times 1 onsuccess anylong verify wo onsuccess 0l verify wo never onerror any throwable class 
observable string o observable error new supplier throwable override public throwable get return new runtimeexception o count subscribe wo verify wo never onsuccess anyint verify wo times 1 onerror any runtimeexception class 
observable integer o observable just 1 3 5 4 6 3 o filter is even take 1 subscribe w verify w times 1 onnext anyint verify w onnext 4 verify w times 1 oncomplete verify w never onerror any throwable class 
observable integer o observable just 1 3 5 7 9 7 5 3 1 o filter is even take 1 subscribe w verify w never onnext anyint verify w times 1 oncomplete verify w never onerror any throwable class 
observable integer o observable just 1 2 3 o take 1 subscribe w verify w times 1 onnext anyint verify w onnext 1 verify w times 1 oncomplete verify w never onerror any throwable class 
observable integer o observable empty o take 1 subscribe w verify w never onnext anyint verify w times 1 oncomplete verify w never onerror any throwable class 
observable integer o observable empty o firstelement subscribe wm verify wm never onsuccess anyint verify wm oncomplete verify wm never onerror any throwable class 
observable integer o observable just 1 3 5 7 9 7 5 3 1 o filter is even firstelement subscribe wm verify wm never onsuccess anyint verify wm oncomplete verify wm never onerror any throwable class 
observable integer o observable just 1 2 3 4 o reduce new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 subscribe wm verify wm times 1 onsuccess anyint verify wm onsuccess 10 verify wm never onerror any throwable class verify wm never oncomplete 
observable integer o observable just 1 2 3 4 o reduce new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 toobservable subscribe w verify w times 1 onnext anyint verify w onnext 10 verify w never onerror any throwable class verify w oncomplete 
observable integer o observable range 1 0 o reduce new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 toobservable test assertresult 
observable integer o observable range 1 0 int value o reduce 1 new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 blockingget assertequals 1 value 
observable integer o observable just 1 2 3 4 o reduce 50 new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 subscribe wo verify wo times 1 onsuccess anyint verify wo onsuccess 60 verify wo never onerror any throwable class 
observable integer o observable just 1 2 3 4 o reduce 50 new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 toobservable subscribe w verify w times 1 onnext anyint verify w onnext 60 
observable integer obs observable just 1 observable integer chained obs materialize dematerialize functions notification integer identity observer integer observer testhelper mockobserver chained subscribe observer verify observer times 1 onnext 1 verify observer times 1 oncomplete verify observer times 0 onerror any throwable class 
final countdownlatch latch new countdownlatch 1 final atomicinteger count new atomicinteger final atomicreference throwable error new atomicreference observable just 1 2 three 4 subscribeon schedulers newthread safesubscribe new defaultobserver string override public void oncomplete system out println completed latch countdown override public void onerror throwable e error set e system out println error e printstacktrace latch countdown override public void onnext string v int num integer parseint v system out println num count incrementandget latch await assertequals 2 count get assertnotnull error get if error get instanceof fail it should be a 
final atomicinteger count new atomicinteger final atomicreference throwable error new atomicreference observable just 1 2 three 4 safesubscribe new defaultobserver string override public void oncomplete system out println completed override public void onerror throwable e error set e system out println error e printstacktrace override public void onnext string v int num integer parseint v system out println num count incrementandget assertequals 2 count get assertnotnull error get if error get instanceof fail it should be a 
final atomicinteger count new atomicinteger final atomicreference throwable error new atomicreference observable just 1 2 concatwith observable string error new supplier throwable override public throwable get return new subscribe new defaultobserver string override public void oncomplete system out println completed override public void onerror throwable e error set e system out println error e printstacktrace override public void onnext string v system out println v count incrementandget assertequals 2 count get assertnotnull error get if error get instanceof fail it should be a 
final atomicinteger count new atomicinteger string connectable observable string unsafecreate new observablesource string override public void subscribe final observer super string observer observer onsubscribe disposable empty count incrementandget new thread new runnable override public void run observer onnext first observer onnext last observer oncomplete start takelast 1 publish final countdownlatch latch new countdownlatch 1 connectable subscribe new consumer string override public void accept string value assertequals last value latch countdown connectable subscribe disposable subscription connectable connect asserttrue latch await 1000 timeunit milliseconds assertequals 1 count get subscription dispose 
final atomicinteger counter new atomicinteger string o observable string unsafecreate new observablesource string override public void subscribe final observer super string observer observer onsubscribe disposable empty new thread new runnable override public void run counter incrementandget observer onnext one observer oncomplete start replay disposable connection o connect try final countdownlatch latch new countdownlatch 2 o subscribe new consumer string override public void accept string v assertequals one v latch countdown o subscribe new consumer string override public void accept string v assertequals one v latch countdown if latch await 1000 timeunit milliseconds fail subscriptions did not receive values assertequals 1 counter get finally connection dispose 
final atomicinteger counter new atomicinteger observable string o observable string unsafecreate new observablesource string override public void subscribe final observer super string observer observer onsubscribe disposable empty new thread new runnable override public void run counter incrementandget observer onnext one observer oncomplete start cache final countdownlatch latch new countdownlatch 2 o subscribe new consumer string override public void accept string v assertequals one v latch countdown o subscribe new consumer string override public void accept string v assertequals one v latch countdown if latch await 1000 timeunit milliseconds fail subscriptions did not receive values assertequals 1 counter get 
final atomicinteger counter new atomicinteger observable string o observable string unsafecreate new observablesource string override public void subscribe final observer super string observer observer onsubscribe disposable empty new thread new runnable override public void run counter incrementandget observer onnext one observer oncomplete start 1 final countdownlatch latch new countdownlatch 2 o subscribe new consumer string override public void accept string v assertequals one v latch countdown o subscribe new consumer string override public void accept string v assertequals one v latch countdown if latch await 1000 timeunit milliseconds fail subscriptions did not receive values assertequals 1 counter get 
final atomicinteger count new atomicinteger final atomicreference throwable error new atomicreference observable just 1 2 three 4 take 3 safesubscribe new defaultobserver string override public void oncomplete system out println completed override public void onerror throwable e error set e system out println error e printstacktrace override public void onnext string v int num integer parseint v system out println num count incrementandget assertequals 2 count get assertnotnull error get if error get instanceof fail it should be a 
observable string o observable just 1 abc false 2l oftype string class observer object observer testhelper mockobserver o subscribe observer verify observer never onnext 1 verify observer times 1 onnext abc verify observer never onnext false verify observer never onnext 2l verify observer never onerror any throwable class verify observer times 1 oncomplete 
arraylist integer l1 new arraylist l1 add 1 linkedlist integer l2 new linkedlist l2 add 2 suppresswarnings rawtypes observable list o observable object just l1 l2 123 oftype list class observer object observer testhelper mockobserver o subscribe observer verify observer times 1 onnext l1 verify observer times 1 onnext l2 verify observer never onnext 123 verify observer never onerror any throwable class verify observer times 1 oncomplete 
observable boolean o observable just a b c contains b toobservable observer boolean observer testhelper mockobserver o subscribe observer verify observer times 1 onnext true verify observer never onnext false verify observer never onerror any throwable class verify observer times 1 oncomplete 
observable boolean o observable just a b contains c toobservable observer object observer testhelper mockobserver o subscribe observer verify observer times 1 onnext false verify observer never onnext true verify observer never onerror any throwable class verify observer times 1 oncomplete 
observable boolean o observable string empty contains a toobservable observer object observer testhelper mockobserver o subscribe observer verify observer times 1 onnext false verify observer never onnext true verify observer never onerror any throwable class verify observer times 1 oncomplete 
single boolean o observable just a b c contains b singleobserver boolean observer testhelper mocksingleobserver o subscribe observer verify observer times 1 onsuccess true verify observer never onsuccess false verify observer never onerror any throwable class 
single boolean o observable just a b contains c singleobserver object observer testhelper mocksingleobserver o subscribe observer verify observer times 1 onsuccess false verify observer never onsuccess true verify observer never onerror any throwable class 
single boolean o observable string empty contains a singleobserver object observer testhelper mocksingleobserver o subscribe observer verify observer times 1 onsuccess false verify observer never onsuccess true verify observer never onerror any throwable class 
completable o observable just 1 2 3 ignoreelements completableobserver observer testhelper o subscribe observer verify observer never onerror any throwable class verify observer times 1 oncomplete 
observable integer o observable just 1 2 3 ignoreelements toobservable observer object observer testhelper mockobserver o subscribe observer verify observer never onnext any integer class verify observer never onerror any throwable class verify observer times 1 oncomplete 
testscheduler scheduler new testscheduler observable integer o observable fromarray 1 2 subscribeon scheduler observer integer observer testhelper mockobserver o subscribe observer scheduler advancetimeby 1 timeunit milliseconds inorder inorder inorder observer inorder verify observer times 1 onnext 1 inorder verify observer times 1 onnext 2 inorder verify observer times 1 oncomplete inorder 
testscheduler scheduler new testscheduler observable integer o observable just 3 4 startwithiterable arrays aslist 1 2 subscribeon scheduler observer integer observer testhelper mockobserver o subscribe observer scheduler advancetimeby 1 timeunit milliseconds inorder inorder inorder observer inorder verify observer times 1 onnext 1 inorder verify observer times 1 onnext 2 inorder verify observer times 1 onnext 3 inorder verify observer times 1 onnext 4 inorder verify observer times 1 oncomplete inorder 
testscheduler scheduler new testscheduler observable integer o observable range 3 4 subscribeon scheduler observer integer observer testhelper mockobserver o subscribe observer scheduler advancetimeby 1 timeunit milliseconds inorder inorder inorder observer inorder verify observer times 1 onnext 3 inorder verify observer times 1 onnext 4 inorder verify observer times 1 onnext 5 inorder verify observer times 1 onnext 6 inorder verify observer times 1 oncomplete inorder 
testobserver integer to new testobserver observable just 1 mergewith observable just 2 subscribe to to assertvalues 1 2 
testobserver integer to new testobserver observable just 1 concatwith observable just 2 subscribe to to assertvalues 1 2 
testobserver integer to new testobserver observable just 1 ambwith observable just 2 subscribe to to assertvalue 1 
final int expectedcount 3 final atomicinteger count new atomicinteger for int i 0 i expectedcount i observable just boolean true boolean false takewhile new predicate boolean override public boolean test boolean v return v tolist doonsuccess new consumer list boolean override public void accept list boolean booleans count incrementandget subscribe assertequals expectedcount count get 
testobserverex string to new testobserverex observable just 1 2 3 compose new integer string override public observable string apply observable integer t1 return t1 map new function integer string override public string apply integer v return string valueof v subscribe to to assertterminated to assertnoerrors to assertvalues 1 2 3 
subject object subject replaysubject create observable error new runtimeexception oops materialize delay 1 timeunit seconds dematerialize functions notification object identity subscribe subject subject subscribe subject materialize blockingfirst system out println done 
assertequals observable empty observable empty 
observable integer empty subscribe w verify w oncomplete verify w never onnext any integer class verify w never onerror any throwable class 
final testobserver object to new testobserver final object value new object object returned observable just value to new observableconverter object object override public object apply observable object onsubscribe onsubscribe subscribe to to assertnoerrors to assertcomplete to assertvalue value return to values get 0 assertsame returned value 
final testobserver object to new testobserver final object value new object object returned observable just value to new observableconverter object object override public object apply observable object onsubscribe onsubscribe subscribe to to assertnoerrors to assertcomplete to assertvalue value return to values get 0 assertsame returned value 
observable just 1 to new observableconverter integer flowable integer override public flowable integer apply observable integer v return v toflowable backpressurestrategy missing test assertresult 1 
list integer list observable range 1 5 flatmap new function integer observable integer override public observable integer apply integer v return observable range v 2 tolist blockingget assert assertequals arrays aslist 1 2 2 3 3 4 4 5 5 6 list 
observable just 1 single 100 test assertresult 1 observable empty single 100 test assertresult 100 
observable just 1 single 100 toobservable test assertresult 1 observable empty single 100 toobservable test assertresult 100 
final list observable integer observables arrays aslist observable just 1 2 3 observable just 1 2 3 observable zip observables new function object object override public object apply object o throws exception int sum 0 for object i o sum integer i return sum test assertresult 2 4 6 
final list observable integer observables arrays aslist observable just 1 2 3 observable just 1 2 3 observable combinelatest observables new function object object override public object apply final object o throws exception int sum 1 for object i o sum integer i return sum test assertresult 3 6 9 
observable string o1 observable just one two observable string o2 observable just three four list string values observable concat o1 o2 tolist blockingget assertequals one values get 0 assertequals two values get 1 assertequals three values get 2 assertequals four values get 3 
observable string o1 observable just one two observable string o2 observable just three four observable string o3 observable just five six observable observable string os observable just o1 o2 o3 list string values observable concat os tolist blockingget assertequals one values get 0 assertequals two values get 1 assertequals three values get 2 assertequals four values get 3 assertequals five values get 4 assertequals six values get 5 
observable string o1 observable just one two observable string o2 observable just three four observable string o3 observable just five six iterable observable string is arrays aslist o1 o2 o3 list string values observable concat observable fromiterable is tolist blockingget assertequals one values get 0 assertequals two values get 1 assertequals three values get 2 assertequals four values get 3 assertequals five values get 4 assertequals six values get 5 
horrormovie horrormovie1 new horrormovie movie movie new movie media media new media horrormovie horrormovie2 new horrormovie observable media o1 observable media just horrormovie1 movie observable media o2 observable just media horrormovie2 observable observable media os observable just o1 o2 list media values observable concat os tolist blockingget assertequals horrormovie1 values get 0 assertequals movie values get 1 assertequals media values get 2 assertequals horrormovie2 values get 3 assertequals 4 values size 
horrormovie horrormovie1 new horrormovie movie movie new movie media media1 new media media media2 new media horrormovie horrormovie2 new horrormovie observable media o1 observable just horrormovie1 movie media1 observable media o2 observable just media2 horrormovie2 observable observable media os observable just o1 o2 list media values observable concat os tolist blockingget assertequals horrormovie1 values get 0 assertequals movie values get 1 assertequals media1 values get 2 assertequals media2 values get 3 assertequals horrormovie2 values get 4 assertequals 5 values size 
horrormovie horrormovie1 new horrormovie movie movie new movie media media new media horrormovie horrormovie2 new horrormovie observable movie o1 observable just horrormovie1 movie observable media o2 observable just media horrormovie2 list media values observable concat o1 o2 tolist blockingget assertequals horrormovie1 values get 0 assertequals movie values get 1 assertequals media values get 2 assertequals horrormovie2 values get 3 assertequals 4 values size 
final horrormovie horrormovie1 new horrormovie final movie movie new movie media media new media horrormovie horrormovie2 new horrormovie observable movie o1 observable unsafecreate new observablesource movie override public void subscribe observer super movie o o onnext horrormovie1 o onnext movie o oncomplete observable media o2 observable just media horrormovie2 list media values observable concat o1 o2 tolist blockingget assertequals horrormovie1 values get 0 assertequals movie values get 1 assertequals media values get 2 assertequals horrormovie2 values get 3 assertequals 4 values size 
observable horrormovie horrors observable just new horrormovie observable observable horrormovie metahorrors observable just horrors observable media merge metahorrors 
observable media o1 observable media just new horrormovie new movie observable media o2 observable just new media new horrormovie observable observable media os observable just o1 o2 list media values observable merge os tolist blockingget assertequals 4 values size 
observable media o1 observable just new horrormovie new movie new media observable media o2 observable just new media new horrormovie observable observable media os observable just o1 o2 list media values observable merge os tolist blockingget assertequals 5 values size 
observable movie o1 observable just new horrormovie new movie observable media o2 observable just new media new horrormovie list media values observable merge o1 o2 tolist blockingget asserttrue values get 0 instanceof horrormovie asserttrue values get 1 instanceof movie assertnotnull values get 2 asserttrue values get 3 instanceof horrormovie 
observable movie o1 observable defer new supplier observable movie override public observable movie get return observable just new horrormovie new movie observable media o2 observable just new media new horrormovie list media values observable merge o1 o2 tolist blockingget asserttrue values get 0 instanceof horrormovie asserttrue values get 1 instanceof movie assertnotnull values get 2 asserttrue values get 3 instanceof horrormovie 
final atomicreference string r new atomicreference string output observable just one doonnext new consumer string override public void accept string v r set v blockingsingle assertequals one output assertequals one r get 
final atomicreference throwable r new atomicreference throwable t null try observable string error new runtimeexception an error doonerror new consumer throwable override public void accept throwable v r set v blockingsingle fail expected exception not a return value catch throwable e t e assertnotnull t assertequals t r get 
final atomicboolean r new atomicboolean string output observable just one dooncomplete new action override public void run r set true blockingsingle assertequals one output asserttrue r get 
final atomicboolean r new atomicboolean string output observable just one doonterminate new action override public void run r set true blockingsingle assertequals one output asserttrue r get 
final atomicboolean r new atomicboolean observable string error new testexception doonterminate new action override public void run r set true test assertfailure testexception class asserttrue r get 
observable range 1 10 to testhelper integer testconsumer queuefuseable any false assertfusionmode queuefuseable sync assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
observable fromarray new integer 1 2 3 4 5 6 7 8 9 10 to testhelper integer testconsumer queuefuseable any false assertfusionmode queuefuseable sync assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
observable fromiterable arrays aslist 1 2 3 4 5 6 7 8 9 10 to testhelper integer testconsumer queuefuseable any false assertfusionmode queuefuseable sync assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
observable range 1 10 hide to testhelper integer testconsumer queuefuseable any false assertnotfuseable assertfusionmode queuefuseable none assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
observable fromarray new integer 1 2 3 4 5 6 7 8 9 10 hide to testhelper integer testconsumer queuefuseable any false assertnotfuseable assertfusionmode queuefuseable none assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
observable fromiterable arrays aslist 1 2 3 4 5 6 7 8 9 10 hide to testhelper integer testconsumer queuefuseable any false assertnotfuseable assertfusionmode queuefuseable none assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
observable horrormovie horrors observable just new horrormovie observable coolrating ratings observable just new coolrating observable movie coolrating result combinelatest horrors ratings combine blockingforeach action observable movie coolrating result combinelatest horrors ratings combine blockingforeach action observable media rating extendedresult combinelatest horrors ratings combine blockingforeach extendedaction observable media rating result combinelatest horrors ratings combine blockingforeach action observable media rating extendedresult combinelatest horrors ratings combine blockingforeach action observable movie coolrating result combinelatest horrors ratings combine 
s onnext randomevent type numinstances try thread sleep 50 catch interruptedexception e thread currentthread interrupt s onerror e 
observer integer observer testhelper mockobserver testscheduler s new testscheduler publishsubject integer o publishsubject create o throttlelast 500 timeunit milliseconds s subscribe observer s advancetimeto 0 timeunit milliseconds o onnext 1 o onnext 2 s advancetimeto 501 timeunit milliseconds o onnext 3 s advancetimeto 600 timeunit milliseconds o onnext 4 s advancetimeto 700 timeunit milliseconds o onnext 5 o onnext 6 s advancetimeto 1001 timeunit milliseconds o onnext 7 s advancetimeto 1501 timeunit milliseconds o oncomplete inorder inorder inorder observer inorder verify observer onnext 2 inorder verify observer onnext 6 inorder verify observer onnext 7 inorder verify observer oncomplete inorder 
observer integer observer testhelper mockobserver testscheduler s new testscheduler publishsubject integer o publishsubject create o throttlewithtimeout 500 timeunit milliseconds s subscribe observer s advancetimeto 0 timeunit milliseconds o onnext 1 o onnext 2 s advancetimeto 501 timeunit milliseconds o onnext 3 s advancetimeto 600 timeunit milliseconds o onnext 4 s advancetimeto 700 timeunit milliseconds o onnext 5 o onnext 6 s advancetimeto 1300 timeunit milliseconds o onnext 7 s advancetimeto 1800 timeunit milliseconds o oncomplete inorder inorder inorder observer inorder verify observer onnext 2 inorder verify observer onnext 6 inorder verify observer onnext 7 inorder verify observer oncomplete inorder 
observable just 1 throttlewithtimeout 100 timeunit milliseconds test awaitdone 5 timeunit seconds assertresult 1 
observable merge geteventstream http clustera 50 geteventstream http clusterb 20 groupby new function event string override public string apply event event return event type take 1 blockingforeach new consumer groupedobservable string event override public void accept groupedobservable string event v system out println v v take 1 subscribe system out println finished thread sleep 200 
observable merge geteventstream http clustera 50 geteventstream http clusterb 20 groupby new function event string override public string apply event event return event type flatmap new function groupedobservable string event observable object override public observable object apply groupedobservable string event g return g map new function event object override public object apply event event return event instanceid event values get count200 take 20 blockingforeach new consumer object override public void accept object pv system out println pv system out println finished thread sleep 200 
geteventstream http clusterb 20 groupby new function event string override public string apply event e return e instanceid flatmap new function groupedobservable string event observable hashmap string string override public observable hashmap string string apply final groupedobservable string event ge return ge scan new hashmap new bifunction hashmap string string event hashmap string string override public hashmap string string apply hashmap string string accum event perinstanceevent synchronized accum accum put instance ge getkey return accum take 10 blockingforeach new consumer object override public void accept object pv synchronized pv system out println pv system out println finished thread sleep 200 
observable horrormovie horrors observable just new horrormovie observable coolrating ratings observable just new coolrating observable movie coolrating result zip horrors ratings combine blockingforeach action observable movie coolrating result zip horrors ratings combine blockingforeach action observable media rating extendedresult zip horrors ratings combine blockingforeach extendedaction observable media rating result zip horrors ratings combine blockingforeach action observable media rating extendedresult zip horrors ratings combine blockingforeach action observable movie coolrating result zip horrors ratings combine 
final object invoked new object collection observable object observables collections emptylist observable object result observable zip observables new function object object override public object apply object args system out println received args assert assertequals no argument should have been passed 0 args length return invoked assertsame invoked result blockinglast 
observable just 1 zipwith observable just 2 new bifunction integer integer integer override public integer apply integer a integer b throws exception return a b true test assertresult 3 
observable just 1 zipwith observable just 2 new bifunction integer integer integer override public integer apply integer a integer b throws exception return a b true 16 test assertresult 3 
final arraylist list integer lists new arraylist observable concat observable just 1 2 3 4 5 6 window 3 map new function observable integer observable list integer override public observable list integer apply observable integer xs return xs tolist toobservable blockingforeach new consumer list integer override public void accept list integer xs lists add xs assertarrayequals lists get 0 toarray new integer 3 new integer 1 2 3 assertarrayequals lists get 1 toarray new integer 3 new integer 4 5 6 assertequals 2 lists size 
testscheduler scheduler new testscheduler publishsubject integer ps publishsubject create testobserver list integer to ps window 5 timeunit seconds scheduler 2 flatmapsingle new function observable integer singlesource list integer override public singlesource list integer apply observable integer v throws throwable return v tolist test ps onnext 1 ps onnext 2 to assertvaluecount 1 scheduler advancetimeby 1 timeunit seconds ps onnext 3 scheduler advancetimeby 6 timeunit seconds to assertvaluecount 2 ps onnext 4 ps onnext 5 to assertvaluecount 3 ps onnext 4 scheduler advancetimeby 6 timeunit seconds to assertvaluecount 4 assertnoerrors assertnotcomplete to dispose 
parallelflowabletest checksubscribercount flowable range 1 5 parallel flatmapiterable v arrays aslist 1 2 3 
for int i 1 i 32 i flowable range 1 1000 parallel i flatmapiterable v arrays aslist v v 1 sequential test withtag parallelism i assertvaluecount 2000 assertnoerrors assertcomplete 
for int i 1 i 32 i flowable range 1 1000 parallel i flatmapiterable v arrays aslist sequential test withtag parallelism i assertresult 
for int i 1 i 32 i flowable range 1 1000 parallel i flatmapiterable v v 2 0 arrays aslist v arrays aslist sequential test withtag parallelism i assertvaluecount 500 assertnoerrors assertcomplete 
calls 
for e values flowable just 1 parallel 1 doonnext this e sequential test assertresult 1 assertequals calls 1 calls 0 
for e values flowable integer error new testexception parallel 1 doonnext this e sequential test assertfailure testexception class assertequals calls 0 
for e values flowable just 1 parallel 1 doonnext this e filter functions alwaystrue sequential test assertresult 1 assertequals calls 1 calls 0 
for e values flowable integer error new testexception parallel 1 doonnext this e filter functions alwaystrue sequential test assertfailure testexception class assertequals calls 0 
flowable range 0 2 parallel 1 doonnext new consumer integer override public void accept integer v throws exception if 1 v 0 system out println should not happen error sequential test assertfailure arithmeticexception class 
flowable range 0 2 parallel 1 doonnext new consumer integer override public void accept integer v throws exception if 1 v 0 system out println should not happen stop sequential test assertresult 
flowable range 0 2 parallel 1 doonnext new consumer integer int count override public void accept integer v throws exception if count 1 return if 1 v 0 system out println should not happen retry sequential test assertresult 0 1 
flowable range 0 2 parallel 1 doonnext new consumer integer override public void accept integer v throws exception if 1 v 0 system out println should not happen new bifunction long throwable override public apply long n throwable e throws exception return n 5 retry skip sequential test assertresult 1 
flowable range 0 2 parallel 1 doonnext new consumer integer override public void accept integer v throws exception if 1 v 0 system out println should not happen skip sequential test assertresult 1 
testsubscriberex integer ts flowable range 0 2 parallel 1 doonnext new consumer integer override public void accept integer v throws exception if 1 v 0 system out println should not happen new bifunction long throwable override public apply long n throwable e throws exception throw new testexception sequential to testhelper integer testconsumer assertfailure compositeexception class testhelper ts arithmeticexception class testexception class 
testhelper flowable just 1 parallel 1 doonnext functions emptyconsumer error 
list throwable errors testhelper trackpluginerrors try new parallelinvalid doonnext functions emptyconsumer error sequential test testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
flowable range 0 2 parallel 1 doonnext new consumer integer override public void accept integer v throws exception if 1 v 0 system out println should not happen error filter functions alwaystrue sequential test assertfailure arithmeticexception class 
flowable range 0 2 parallel 1 doonnext new consumer integer override public void accept integer v throws exception if 1 v 0 system out println should not happen stop filter functions alwaystrue sequential test assertresult 
flowable range 0 2 parallel 1 doonnext new consumer integer int count override public void accept integer v throws exception if count 1 return if 1 v 0 system out println should not happen retry filter functions alwaystrue sequential test assertresult 0 1 
flowable range 0 2 parallel 1 doonnext new consumer integer override public void accept integer v throws exception if 1 v 0 system out println should not happen new bifunction long throwable override public apply long n throwable e throws exception return n 5 retry skip filter functions alwaystrue sequential test assertresult 1 
flowable range 0 2 parallel 1 doonnext new consumer integer override public void accept integer v throws exception if 1 v 0 system out println should not happen skip filter functions alwaystrue sequential test assertresult 1 
testsubscriberex integer ts flowable range 0 2 parallel 1 doonnext new consumer integer override public void accept integer v throws exception if 1 v 0 system out println should not happen new bifunction long throwable override public apply long n throwable e throws exception throw new testexception filter functions alwaystrue sequential to testhelper integer testconsumer assertfailure compositeexception class testhelper ts arithmeticexception class testexception class 
testhelper flowable just 1 parallel 1 doonnext functions emptyconsumer error filter functions alwaystrue 
list throwable errors testhelper trackpluginerrors try new parallelinvalid doonnext functions emptyconsumer error filter functions alwaystrue sequential test testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
testhelper f parallelflowable fromarray f doonnext v skip sequential 
testhelper f parallelflowable fromarray f doonnext v skip filter v true skip sequential 
parallelflowabletest checksubscribercount flowable range 1 5 parallel map functions identity 
flowable range 1 10 parallel map functions integer identity filter new predicate integer override public boolean test integer v throws exception return v 2 0 filter new predicate integer override public boolean test integer v throws exception return v 3 0 sequential test assertresult 6 
flowable range 1 10 parallel runon schedulers computation map functions integer identity filter new predicate integer override public boolean test integer v throws exception return v 2 0 filter new predicate integer override public boolean test integer v throws exception return v 3 0 sequential test awaitdone 5 timeunit seconds assertresult 6 
list throwable errors testhelper trackpluginerrors try new parallelinvalid map functions object identity sequential test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try new parallelinvalid map functions object identity filter functions alwaystrue sequential test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
flowable error new testexception parallel map functions object identity sequential test assertfailure testexception class 
flowable just 1 parallel map new function integer object override public object apply integer v throws exception throw new testexception sequential test assertfailure testexception class 
flowable just 1 parallel map new function integer object override public object apply integer v throws exception throw new testexception filter functions alwaystrue sequential test assertfailure testexception class 
flowable just 1 parallel runon schedulers computation map new function integer object override public object apply integer v throws exception throw new testexception filter functions alwaystrue sequential test awaitdone 5 timeunit seconds assertfailure testexception class 
testhelper flowable range 1 10 parallel map v v 
testhelper p p map v v testhelper p p map v v filter v true 
flowable integer f new flowable integer override protected void subscribeactual nonnull subscriber nonnull super nonnull integer s suppresswarnings unchecked integer subscriber integer s subscriber onsubscribe new booleansubscription subscriber tryonnext 1 subscriber tryonnext 2 parallelflowable fromarray f map v throw new testexception filter v true sequential test assertfailure testexception class 
calls 
for e values flowable just 1 parallel 1 filter functions alwaystrue e sequential test assertresult 1 
for e values flowable just 1 parallel 1 filter functions alwaysfalse e sequential test assertresult 
for e values flowable just 1 parallel 1 filter functions alwaysfalse e filter functions alwaystrue sequential test assertresult 
for e values flowable integer error new testexception parallel 1 filter functions alwaystrue e sequential test assertfailure testexception class 
for e values flowable just 1 parallel 1 filter functions alwaystrue e filter functions alwaystrue sequential test assertresult 1 
for e values flowable integer error new testexception parallel 1 filter functions alwaystrue e filter functions alwaystrue sequential test assertfailure testexception class 
flowable range 0 2 parallel 1 filter new predicate integer override public boolean test integer v throws exception return 1 v 0 error sequential test assertfailure arithmeticexception class 
flowable range 0 2 parallel 1 filter new predicate integer override public boolean test integer v throws exception return 1 v 0 stop sequential test assertresult 
flowable range 0 2 parallel 1 filter new predicate integer int count override public boolean test integer v throws exception if count 1 return true return 1 v 0 retry sequential test assertresult 0 1 
flowable range 0 2 parallel 1 filter new predicate integer override public boolean test integer v throws exception return 1 v 0 new bifunction long throwable override public apply long n throwable e throws exception return n 5 retry skip sequential test assertresult 1 
flowable range 0 2 parallel 1 filter new predicate integer override public boolean test integer v throws exception return 1 v 0 skip sequential test assertresult 1 
testsubscriberex integer ts flowable range 0 2 parallel 1 filter new predicate integer override public boolean test integer v throws exception return 1 v 0 new bifunction long throwable override public apply long n throwable e throws exception throw new testexception sequential to testhelper integer testconsumer assertfailure compositeexception class testhelper ts arithmeticexception class testexception class 
testhelper flowable just 1 parallel 1 filter functions alwaystrue error 
list throwable errors testhelper trackpluginerrors try new parallelinvalid filter functions alwaystrue error sequential test testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
flowable range 0 2 parallel 1 filter new predicate integer override public boolean test integer v throws exception return 1 v 0 error filter functions alwaystrue sequential test assertfailure arithmeticexception class 
flowable range 0 2 parallel 1 filter new predicate integer override public boolean test integer v throws exception return 1 v 0 stop filter functions alwaystrue sequential test assertresult 
flowable range 0 2 parallel 1 filter new predicate integer int count override public boolean test integer v throws exception if count 1 return true return 1 v 0 retry filter functions alwaystrue sequential test assertresult 0 1 
flowable range 0 2 parallel 1 filter new predicate integer override public boolean test integer v throws exception return 1 v 0 new bifunction long throwable override public apply long n throwable e throws exception return n 5 retry skip filter functions alwaystrue sequential test assertresult 1 
flowable range 0 2 parallel 1 filter new predicate integer override public boolean test integer v throws exception return 1 v 0 skip filter functions alwaystrue sequential test assertresult 1 
testsubscriberex integer ts flowable range 0 2 parallel 1 filter new predicate integer override public boolean test integer v throws exception return 1 v 0 new bifunction long throwable override public apply long n throwable e throws exception throw new testexception filter functions alwaystrue sequential to testhelper integer testconsumer assertfailure compositeexception class testhelper ts arithmeticexception class testexception class 
testhelper flowable just 1 parallel 1 filter functions alwaystrue error filter functions alwaystrue 
list throwable errors testhelper trackpluginerrors try new parallelinvalid filter functions alwaystrue error filter functions alwaystrue sequential test testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
testhelper f parallelflowable fromarray f filter v true skip sequential 
testhelper f parallelflowable fromarray f filter v true skip filter v true skip sequential 
flowable just 1 parallel filter v false skip filter v true skip sequential test assertresult 
flowable just 1 parallel filter v true skip filter v false skip sequential test assertresult 
parallelflowabletest checksubscribercount flowable range 1 5 parallel runon schedulers computation 
list throwable errors testhelper trackpluginerrors try new parallelinvalid runon instance sequential test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
flowable range 1 1000 parallel 2 runon schedulers computation filter new predicate integer override public boolean test integer v throws exception return v 2 0 sequential test awaitdone 5 timeunit seconds assertvaluecount 500 assertnoerrors assertcomplete 
new parallelflowable integer override public int parallelism return 1 override public void subscribe subscriber super integer subscribers subscribers 0 onsubscribe new booleansubscription subscribers 0 onnext 1 subscribers 0 onnext 2 subscribers 0 onnext 3 runon instance 1 sequential 1 test 0 assertfailure class 
flowable error new testexception parallel 1 runon instance sequential test assertfailure testexception class 
flowable error new testexception parallel 1 runon instance sequential 1 test 0 assertfailure testexception class 
flowable error new testexception parallel 1 runon instance filter functions alwaystrue sequential test assertfailure testexception class 
testsubscriber object ts new testsubscriber 0l flowable error new testexception parallel 1 runon instance filter functions alwaystrue subscribe new subscriber ts ts assertfailure testexception class 
testsubscriber object ts new testsubscriber 0l flowable empty parallel 1 runon instance filter functions alwaystrue subscribe new subscriber ts ts assertresult 
for int i 0 i testhelper race default loops i final publishprocessor integer pp publishprocessor create final testsubscriber integer ts pp parallel 1 runon schedulers computation sequential test runnable r1 new runnable override public void run pp onnext 1 runnable r2 new runnable override public void run ts cancel testhelper race r1 r2 
for int i 0 i testhelper race default loops i final publishprocessor integer pp publishprocessor create final testsubscriber integer ts testsubscriber create 0l pp parallel 1 runon schedulers computation subscribe new subscriber ts runnable r1 new runnable override public void run pp onnext 1 runnable r2 new runnable override public void run ts cancel testhelper race r1 r2 
for int i 0 i testhelper race default loops i final publishprocessor integer pp publishprocessor create final testsubscriber integer ts pp parallel 1 runon schedulers computation filter functions alwaystrue sequential test runnable r1 new runnable override public void run pp onnext 1 runnable r2 new runnable override public void run ts cancel testhelper race r1 r2 
for int i 0 i testhelper race default loops i final publishprocessor integer pp publishprocessor create final testsubscriber integer ts testsubscriber create 0l pp parallel 1 runon schedulers computation filter functions alwaystrue subscribe new subscriber ts runnable r1 new runnable override public void run pp onnext 1 runnable r2 new runnable override public void run ts cancel testhelper race r1 r2 
testsubscriber integer ts new testsubscriber integer 1 override public void onnext integer t super onnext t cancel oncomplete flowable range 1 5 parallel 1 runon instance subscribe new subscriber ts ts assertresult 1 
testsubscriber integer ts new testsubscriber integer 1 override public void onnext integer t super onnext t cancel oncomplete flowable range 1 5 parallel 1 runon instance filter functions alwaystrue subscribe new subscriber ts ts assertresult 1 
testhelper pf pf runon instance 
testhelper pf pf runon instance filter v true 
testhelper parallelflowable fromarray publishprocessor create runon instance 
testsubscriber integer ts new testsubscriber 0 flowable range 1 5 parallel 1 runon instance subscribe new subscriber ts ts requestmore 5 assertresult 1 2 3 4 5 
testsubscriber integer ts new testsubscriber 0 flowable range 1 5 parallel 1 runon instance filter v true subscribe new subscriber ts ts requestmore 5 assertresult 1 2 3 4 5 
calls 
for e values flowable just 1 parallel 1 map functions identity e sequential test assertresult 1 
for e values flowable integer error new testexception parallel 1 map functions identity e sequential test assertfailure testexception class 
for e values flowable just 1 parallel 1 map functions identity e filter functions alwaystrue sequential test assertresult 1 
for e values flowable integer error new testexception parallel 1 map functions identity e filter functions alwaystrue sequential test assertfailure testexception class 
flowable range 0 2 parallel 1 map new function integer integer override public integer apply integer v throws exception return 1 v error sequential test assertfailure arithmeticexception class 
flowable range 0 2 parallel 1 map new function integer integer override public integer apply integer v throws exception return 1 v stop sequential test assertresult 
flowable range 0 2 parallel 1 map new function integer integer int count override public integer apply integer v throws exception if count 1 return 1 return 1 v retry sequential test assertresult 1 1 
flowable range 0 2 parallel 1 map new function integer integer override public integer apply integer v throws exception return 1 v new bifunction long throwable override public apply long n throwable e throws exception return n 5 retry skip sequential test assertresult 1 
flowable range 0 2 parallel 1 map new function integer integer override public integer apply integer v throws exception return 1 v skip sequential test assertresult 1 
testsubscriberex integer ts flowable range 0 2 parallel 1 map new function integer integer override public integer apply integer v throws exception return 1 v new bifunction long throwable override public apply long n throwable e throws exception throw new testexception sequential to testhelper integer testconsumer assertfailure compositeexception class testhelper ts arithmeticexception class testexception class 
testhelper flowable just 1 parallel 1 map functions identity error 
list throwable errors testhelper trackpluginerrors try new parallelinvalid map functions identity error sequential test testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
flowable range 0 2 parallel 1 map new function integer integer override public integer apply integer v throws exception return 1 v error filter functions alwaystrue sequential test assertfailure arithmeticexception class 
flowable range 0 2 parallel 1 map new function integer integer override public integer apply integer v throws exception return 1 v stop filter functions alwaystrue sequential test assertresult 
flowable range 0 2 parallel 1 map new function integer integer int count override public integer apply integer v throws exception if count 1 return 1 return 1 v retry filter functions alwaystrue sequential test assertresult 1 1 
flowable range 0 2 parallel 1 map new function integer integer override public integer apply integer v throws exception return 1 v new bifunction long throwable override public apply long n throwable e throws exception return n 5 retry skip filter functions alwaystrue sequential test assertresult 1 
flowable range 0 2 parallel 1 map new function integer integer override public integer apply integer v throws exception return 1 v skip filter functions alwaystrue sequential test assertresult 1 
testsubscriberex integer ts flowable range 0 2 parallel 1 map new function integer integer override public integer apply integer v throws exception return 1 v new bifunction long throwable override public apply long n throwable e throws exception throw new testexception filter functions alwaystrue sequential to testhelper integer testconsumer assertfailure compositeexception class testhelper ts arithmeticexception class testexception class 
testhelper flowable just 1 parallel 1 map functions identity error filter functions alwaystrue 
list throwable errors testhelper trackpluginerrors try new parallelinvalid map functions identity error filter functions alwaystrue sequential test testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
testhelper checkenum class 
testhelper flowable range 1 10 parallel map v v skip 
testhelper p p map v v error testhelper p p map v v error filter v true 
new flowable integer override protected void subscribeactual subscriber super integer s s onsubscribe new booleansubscription for int i 0 i 10 i s onnext i parallel 1 1 sequential 1 test 0 assertfailure class 
s onsubscribe new booleansubscription for int i 0 i 10 i s onnext i 
flowable just 1 filter functions alwaysfalse parallel sequential test assertresult 
return new stripboundary upstream 
return qs poll 
flowable just 1 map new function integer object override public object apply integer v throws exception throw new testexception compose new stripboundary null parallel sequential test assertfailure testexception class 
unicastprocessor integer up unicastprocessor create up onnext 1 up map new function integer object override public object apply integer v throws exception throw new testexception compose new stripboundary null parallel sequential test assertfailure testexception class assertfalse up hassubscribers 
final set string between new hashset final concurrenthashmap string string processing new concurrenthashmap testsubscriberex object ts flowable range 1 10 observeon schedulers single false 1 doonnext new consumer integer override public void accept integer v throws exception between add thread currentthread getname parallel 2 1 runon schedulers computation 1 map new function integer object override public object apply integer v throws exception processing putifabsent thread currentthread getname return v sequential to testhelper object testconsumer awaitdone 5 timeunit seconds assertsubscribed assertcomplete assertnoerrors testhelper assertvalueset ts 1 2 3 4 5 6 7 8 9 10 assertequals between tostring 1 between size asserttrue between tostring between iterator next contains rxsinglescheduler map string string map processing for string e map keyset asserttrue map tostring e contains 
testhelper publishprocessor create parallel 
flowable just 1 2 filter v v 1 compose testhelper parallel 1 sequential test assertresult 1 
unicastprocessor integer up unicastprocessor create up onnext 1 up onnext 2 up oncomplete up filter v v 1 compose testhelper parallel 1 sequential test assertresult 1 
testhelper f f parallel sequential 
flowablesubscriber integer fs new flowablesubscriber integer override public void onnext nonnull integer t override public void onerror throwable t override public void oncomplete override public void onsubscribe nonnull subscription s for int i 0 i testhelper race default loops i testhelper race s request long max value s request long max value publishprocessor create parallel 1 subscribe new flowablesubscriber fs 
flowablesubscriber integer fs new flowablesubscriber integer override public void onnext nonnull integer t override public void onerror throwable t override public void oncomplete override public void onsubscribe nonnull subscription s for int i 0 i testhelper race default loops i testhelper race s request 1 s request 1 publishprocessor create parallel 1 subscribe new flowablesubscriber fs 
parallelflowabletest checksubscribercount flowable range 1 5 parallel reduce new supplier list integer override public list integer get throws exception return new arraylist new bifunction list integer integer list integer override public list integer apply list integer a integer b throws exception a add b return a 
flowable range 1 5 parallel reduce new supplier list integer override public list integer get throws exception throw new testexception new bifunction list integer integer list integer override public list integer apply list integer a integer b throws exception a add b return a sequential test assertfailure testexception class 
flowable range 1 5 parallel reduce new supplier list integer override public list integer get throws exception return new arraylist new bifunction list integer integer list integer override public list integer apply list integer a integer b throws exception if b 3 throw new testexception a add b return a sequential test assertfailure testexception class 
publishprocessor integer pp publishprocessor create testsubscriber list integer ts pp parallel reduce new supplier list integer override public list integer get throws exception return new arraylist new bifunction list integer integer list integer override public list integer apply list integer a integer b throws exception a add b return a sequential test asserttrue pp hassubscribers ts cancel assertfalse pp hassubscribers 
flowable integer error new testexception parallel reduce new supplier list integer override public list integer get throws exception return new arraylist new bifunction list integer integer list integer override public list integer apply list integer a integer b throws exception a add b return a sequential test assertfailure testexception class 
list throwable errors testhelper trackpluginerrors try new parallelinvalid reduce new supplier list object override public list object get throws exception return new arraylist new bifunction list object object list object override public list object apply list object a object b throws exception a add b return a sequential test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
testhelper pf pf reduce arraylist new a b a 
parallelflowabletest checksubscribercount flowable range 1 5 parallel filter functions alwaystrue 
flowable range 1 10 parallel filter new predicate integer override public boolean test integer v throws exception return v 2 0 filter new predicate integer override public boolean test integer v throws exception return v 3 0 sequential test assertresult 6 
list throwable errors testhelper trackpluginerrors try new parallelinvalid filter functions alwaystrue sequential test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try new parallelinvalid filter functions alwaystrue filter functions alwaystrue sequential test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
flowable error new testexception parallel filter functions alwaystrue sequential test assertfailure testexception class 
flowable just 1 parallel filter new predicate integer override public boolean test integer v throws exception throw new testexception filter functions alwaystrue sequential test assertfailure testexception class 
testhelper f parallelflowable fromarray f filter v true sequential 
testhelper f parallelflowable fromarray f filter v true filter v true sequential 
flowable just 1 parallel filter v false filter v true sequential test assertresult 
flowable just 1 parallel filter v true filter v false sequential test assertresult 
return 4 
flowable integer source flowable range 1 hide for int i 1 i 33 i flowable integer result parallelflowable from source i map new function integer integer override public integer apply integer v throws exception return v 1 sequential testsubscriberex integer ts new testsubscriberex result subscribe ts ts assertsubscribed assertvaluecount assertcomplete assertnoerrors 
flowable integer source flowable range 1 for int i 1 i 33 i flowable integer result parallelflowable from source i map new function integer integer override public integer apply integer v throws exception return v 1 sequential testsubscriberex integer ts new testsubscriberex result subscribe ts ts assertsubscribed assertvaluecount assertcomplete assertnoerrors 
flowable integer source flowable range 1 hide int ncpu math max 8 runtime getruntime availableprocessors for int i 1 i ncpu 1 i executorservice exec executors newfixedthreadpool i scheduler scheduler schedulers from exec try flowable integer result parallelflowable from source i runon scheduler map new function integer integer override public integer apply integer v throws exception return v 1 sequential testsubscriberex integer ts new testsubscriberex result subscribe ts ts awaitdone 10 timeunit seconds ts assertsubscribed assertvaluecount assertcomplete assertnoerrors finally exec shutdown 
flowable integer source flowable range 1 int ncpu math max 8 runtime getruntime availableprocessors for int i 1 i ncpu 1 i executorservice exec executors newfixedthreadpool i scheduler scheduler schedulers from exec try flowable integer result parallelflowable from source i runon scheduler map new function integer integer override public integer apply integer v throws exception return v 1 sequential testsubscriberex integer ts new testsubscriberex result subscribe ts ts awaitdone 10 timeunit seconds ts assertsubscribed assertvaluecount assertcomplete assertnoerrors finally exec shutdown 
for int i 1 i runtime getruntime availableprocessors 2 i testsubscriber integer ts new testsubscriber flowable range 1 10 parallel i reduce new bifunction integer integer integer override public integer apply integer a integer b throws exception return a b subscribe ts ts assertresult 55 
int m for int n 1 n m n 10 for int i 1 i runtime getruntime availableprocessors i executorservice exec executors newfixedthreadpool i scheduler scheduler schedulers from exec try testsubscriber long ts new testsubscriber flowable range 1 n map new function integer long override public long apply integer v throws exception return long v parallel i runon scheduler reduce new bifunction long long long override public long apply long a long b throws exception return a b subscribe ts ts awaitdone 500 timeunit seconds long e long n 1 n 2 ts assertresult e finally exec shutdown 
testsubscriber list integer ts new testsubscriber flowable fromarray 10 9 8 7 6 5 4 3 2 1 parallel tosortedlist functions naturalcomparator subscribe ts ts assertresult arrays aslist 1 2 3 4 5 6 7 8 9 10 
testsubscriber integer ts new testsubscriber 0 flowable fromarray 10 9 8 7 6 5 4 3 2 1 parallel sorted functions naturalcomparator subscribe ts ts assertnovalues ts request 2 ts assertvalues 1 2 ts request 5 ts assertvalues 1 2 3 4 5 6 7 ts request 3 ts assertresult 1 2 3 4 5 6 7 8 9 10 
supplier list integer as new supplier list integer override public list integer get throws exception return new arraylist testsubscriberex integer ts new testsubscriberex flowable range 1 10 parallel collect as new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b sequential flatmapiterable new function list integer iterable integer override public iterable integer apply list integer v throws exception return v subscribe ts ts assertnoerrors assertcomplete testhelper assertvalueset ts 1 2 3 4 5 6 7 8 9 10 
testsubscriberex integer ts new testsubscriberex parallelflowable fromarray flowable range 1 5 flowable range 6 5 sequential subscribe ts ts assertnoerrors assertcomplete testhelper assertvalueset ts 1 2 3 4 5 6 7 8 9 10 
testsubscriberex integer ts new testsubscriberex flowable range 1 5 parallel concatmap new function integer publisher integer override public publisher integer apply integer v throws exception return flowable range v 10 1 3 sequential subscribe ts ts assertnoerrors assertcomplete testhelper assertvalueset ts 11 12 13 21 22 23 31 32 33 41 42 43 51 52 53 
testsubscriberex integer ts new testsubscriberex flowable range 1 5 parallel flatmap new function integer publisher integer override public publisher integer apply integer v throws exception return flowable range v 10 1 3 sequential subscribe ts ts assertnoerrors assertcomplete testhelper assertvalueset ts 11 12 13 21 22 23 31 32 33 41 42 43 51 52 53 
executorservice exec executors newfixedthreadpool 3 scheduler s schedulers from exec try supplier list integer as new supplier list integer override public list integer get throws exception return new arraylist testsubscriber list integer ts new testsubscriber flowable range 1 parallel 3 runon s collect as new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b doonnext new consumer list integer override public void accept list integer v throws exception system out println v size sequential subscribe ts ts awaitdone 5 timeunit seconds ts assertvaluecount 3 assertnoerrors assertcomplete list list integer list ts values assert assertequals list get 0 size list get 1 size list get 2 size finally exec shutdown 
executorservice exec executors newfixedthreadpool 3 scheduler s schedulers from exec try supplier list integer as new supplier list integer override public list integer get throws exception return new arraylist testsubscriber list integer ts new testsubscriber flowable range 1 hide parallel 3 runon s collect as new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b doonnext new consumer list integer override public void accept list integer v throws exception system out println v size sequential subscribe ts ts awaitdone 5 timeunit seconds ts assertvaluecount 3 assertnoerrors assertcomplete list list integer list ts values assert assertequals list get 0 size list get 1 size list get 2 size finally exec shutdown 
executorservice exec executors newfixedthreadpool 3 scheduler s schedulers from exec try supplier list integer as new supplier list integer override public list integer get throws exception return new arraylist testsubscriber list integer ts new testsubscriber flowable range 1 hide observeon s parallel 3 runon s collect as new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b doonnext new consumer list integer override public void accept list integer v throws exception system out println v size sequential subscribe ts ts awaitdone 5 timeunit seconds ts assertvaluecount 3 assertnoerrors assertcomplete list list integer list ts values assert assertequals list get 0 size list get 1 size list get 2 size finally exec shutdown 
executorservice exec executors newfixedthreadpool 3 scheduler s schedulers from exec try supplier list integer as new supplier list integer override public list integer get throws exception return new arraylist testsubscriber list integer ts new testsubscriber flowable range 1 hide observeon s parallel 3 runon s collect as new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b doonnext new consumer list integer override public void accept list integer v throws exception system out println v size sequential subscribe ts ts awaitdone 5 timeunit seconds ts assertvaluecount 3 assertnoerrors assertcomplete list list integer list ts values assert assertequals list get 0 size list get 1 size list get 2 size finally exec shutdown 
executorservice exec executors newfixedthreadpool 3 scheduler s schedulers from exec try supplier list integer as new supplier list integer override public list integer get throws exception return new arraylist testsubscriber list integer ts new testsubscriber flowable range 1 observeon s parallel 3 runon s collect as new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b doonnext new consumer list integer override public void accept list integer v throws exception system out println v size sequential subscribe ts ts awaitdone 5 timeunit seconds ts assertvaluecount 3 assertnoerrors assertcomplete list list integer list ts values assert assertequals list get 0 size list get 1 size list get 2 size finally exec shutdown 
executorservice exec executors newfixedthreadpool 4 scheduler s schedulers from exec try supplier list integer as new supplier list integer override public list integer get throws exception return new arraylist testsubscriber list integer ts new testsubscriber flowable range 1 take 1000 observeon s parallel 3 runon s collect as new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b doonnext new consumer list integer override public void accept list integer v throws exception system out println v size sequential subscribe ts ts awaitdone 5 timeunit seconds ts assertvaluecount 3 assertnoerrors assertcomplete list list integer list ts values assert assertequals 1000 list get 0 size list get 1 size list get 2 size finally exec shutdown 
executorservice exec executors newfixedthreadpool 3 scheduler s schedulers from exec try supplier list integer as new supplier list integer override public list integer get throws exception return new arraylist testsubscriber list integer ts new testsubscriber unicastprocessor integer up unicastprocessor create for int i 0 i 1000 i up onnext i up take 1000 observeon s parallel 3 runon s collect as new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b doonnext new consumer list integer override public void accept list integer v throws exception system out println v size sequential subscribe ts ts awaitdone 5 timeunit seconds ts assertvaluecount 3 assertnoerrors assertcomplete list list integer list ts values assert assertequals 1000 list get 0 size list get 1 size list get 2 size finally exec shutdown 
testsubscriber object ts new testsubscriber 0 flowable range 1 3 parallel 3 sequential subscribe ts ts request 1 ts assertvalue 1 
for int parallelism 1 parallelism 8 parallelism for int prefetch 1 prefetch 1024 prefetch 2 flowable range 1 1024 1024 parallel parallelism prefetch map functions integer identity sequential to testhelper integer testconsumer assertsubscribed assertvaluecount 1024 1024 assertnoerrors assertcomplete 
for int parallelism 1 parallelism 8 parallelism 2 for int prefetch 1 prefetch 1024 prefetch 2 system out println parallelism prefetch flowable range 1 1024 1024 parallel parallelism prefetch runon schedulers computation map functions integer identity sequential prefetch to testhelper integer testconsumer withtag parallelism parallelism prefetch prefetch awaitdone 30 timeunit seconds assertsubscribed assertvaluecount 1024 1024 assertnoerrors assertcomplete 
testsubscriber integer ts new testsubscriber flowable range 1 10 parallel 2 subscribe new subscriber ts ts assertfailure class 
testsubscriber integer ts1 new testsubscriber testsubscriber integer ts2 new testsubscriber testsubscriber integer ts3 new testsubscriber flowable range 1 10 parallel 2 subscribe new subscriber ts1 ts2 ts3 ts1 assertfailure class ts2 assertfailure class ts3 assertfailure class 
testsubscriberex integer ts flowable range 1 20 parallel runon schedulers computation filter new predicate integer override public boolean test integer v throws exception return v 2 0 sequential to testhelper integer testconsumer awaitdone 5 timeunit seconds assertnoerrors assertcomplete testhelper assertvalueset ts 2 4 6 8 10 12 14 16 18 20 
final boolean cancelled false flowable range 1 20 concatwith flowable integer never dooncancel new action override public void run throws exception cancelled 0 true parallel runon schedulers computation filter new predicate integer override public boolean test integer v throws exception if v 10 throw new testexception return v 2 0 sequential test awaitdone 5 timeunit seconds asserterror testexception class assertnotcomplete thread sleep 100 asserttrue cancelled 0 
final int count 0 flowable range 1 5 parallel doafternext new consumer integer override public void accept integer v throws exception count 0 sequential test assertresult 1 2 3 4 5 
final int count 0 flowable range 1 5 parallel doonnext new consumer integer override public void accept integer v throws exception if v 3 throw new testexception else count 0 sequential test asserterror testexception class assertnotcomplete asserttrue count 0 count 0 5 
final int count 0 flowable range 1 5 parallel doafternext new consumer integer override public void accept integer v throws exception if v 3 throw new testexception else count 0 sequential test asserterror testexception class assertnotcomplete asserttrue count 0 count 0 5 
list throwable errors testhelper trackpluginerrors try flowable error new testexception parallel runon schedulers computation sequential test awaitdone 5 timeunit seconds assertfailure testexception class thread sleep 300 for throwable ex errors ex printstacktrace asserttrue errors tostring errors isempty finally rxjavaplugins reset 
final int count 0 flowable range 1 5 parallel 2 map new function integer integer override public integer apply integer v throws exception if v 3 throw new testexception return v doonerror new consumer throwable override public void accept throwable e throws exception if e instanceof testexception count 0 sequential test asserterror testexception class assertnotcomplete assertequals 1 count 0 
testsubscriberex integer ts flowable range 1 5 parallel 2 map new function integer integer override public integer apply integer v throws exception if v 3 throw new testexception return v doonerror new consumer throwable override public void accept throwable e throws exception if e instanceof testexception throw new ioexception sequential to testhelper integer testconsumer asserterror compositeexception class assertnotcomplete list throwable errors testhelper errorlist ts testhelper asserterror errors 0 testexception class testhelper asserterror errors 1 ioexception class 
final int count 0 flowable range 1 5 parallel 2 dooncomplete new action override public void run throws exception count 0 sequential test assertresult 1 2 3 4 5 assertequals 2 count 0 
final int count 0 flowable range 1 5 parallel 2 doafterterminated new action override public void run throws exception count 0 sequential test assertresult 1 2 3 4 5 assertequals 2 count 0 
final int count 0 flowable range 1 5 parallel 2 doonsubscribe new consumer subscription override public void accept subscription s throws exception count 0 sequential test assertresult 1 2 3 4 5 assertequals 2 count 0 
final int count 0 flowable range 1 5 parallel 2 doonrequest new longconsumer override public void accept long s throws exception count 0 sequential test assertresult 1 2 3 4 5 assertequals 2 count 0 
final int count 0 flowable range 1 5 parallel 2 dooncancel new action override public void run throws exception count 0 sequential take 2 test assertresult 1 2 assertequals 2 count 0 
parallelflowable fromarray new publisher 0 
flowable range 1 5 parallel to new integer flowable integer override public flowable integer apply parallelflowable integer pf return pf sequential test assertresult 1 2 3 4 5 
flowable range 1 5 parallel to new integer flowable integer override public flowable integer apply parallelflowable integer pf throw new testexception 
flowable range 1 5 parallel compose new paralleltransformer integer integer override public parallelflowable integer apply parallelflowable integer pf return pf map new function integer integer override public integer apply integer v throws exception return v 1 sequential test assertresult 2 3 4 5 6 
final int count 0 flowable range 1 5 parallel 2 flatmap new function integer flowable integer override public flowable integer apply integer v throws exception if v 3 return flowable error new testexception return flowable just v true doonerror new consumer throwable override public void accept throwable e throws exception if e instanceof testexception count 0 sequential test assertvalues 1 2 4 5 asserterror testexception class assertnotcomplete assertequals 1 count 0 
final int count 0 flowable range 1 5 parallel 2 flatmap new function integer flowable integer override public flowable integer apply integer v throws exception if v 3 return flowable error new testexception return flowable just v true 1 doonerror new consumer throwable override public void accept throwable e throws exception if e instanceof testexception count 0 sequential test assertvalues 1 2 4 5 asserterror testexception class assertnotcomplete assertequals 1 count 0 
final int count 0 flowable range 1 5 parallel 2 concatmapdelayerror new function integer flowable integer override public flowable integer apply integer v throws exception if v 3 return flowable error new testexception return flowable just v true doonerror new consumer throwable override public void accept throwable e throws exception if e instanceof testexception count 0 sequential test assertvalues 1 2 4 5 asserterror testexception class assertnotcomplete assertequals 1 count 0 
final int count 0 flowable range 1 5 parallel 2 concatmapdelayerror new function integer flowable integer override public flowable integer apply integer v throws exception if v 3 return flowable error new testexception return flowable just v 1 true doonerror new consumer throwable override public void accept throwable e throws exception if e instanceof testexception count 0 sequential test assertvalues 1 2 4 5 asserterror testexception class assertnotcomplete assertequals 1 count 0 
final int count 0 flowable range 1 5 parallel 2 concatmapdelayerror new function integer flowable integer override public flowable integer apply integer v throws exception if v 3 return flowable error new testexception return flowable just v false doonerror new consumer throwable override public void accept throwable e throws exception if e instanceof testexception count 0 sequential test assertvalues 1 2 asserterror testexception class assertnotcomplete assertequals 1 count 0 
int n source parallelism suppresswarnings unchecked testsubscriber object consumers new testsubscriber n 1 for int i 0 i n i consumers i new testsubscriber source subscribe consumers for int i 0 i n i consumers i awaitdone 5 timeunit seconds assertfailure class 
testhelper checkenum listaddbiconsumer class 
mergerbifunction integer f new mergerbifunction functions integer naturalcomparator assertequals 0 f apply collections integer emptylist collections integer emptylist size assertequals arrays aslist 1 2 f apply collections integer emptylist arrays aslist 1 2 for int i 0 i 4 i int k 0 list integer list1 new arraylist for int j 0 j i j list1 add k list integer list2 new arraylist for int j i j 4 j list2 add k assertequals arrays aslist 0 1 2 3 f apply list1 list2 
parallelflowabletest checksubscribercount flowable range 1 5 parallel concatmap functions justfunction flowable just 1 
parallelflowabletest checksubscribercount flowable range 1 5 parallel flatmap functions justfunction flowable just 1 
parallelflowabletest checksubscribercount parallelflowable fromarray new publisher flowable just 1 
new parallelflowable integer override public void subscribe subscriber super integer subscribers subscribers 0 onsubscribe new booleansubscription subscribers 0 onnext 1 subscribers 0 onnext 2 subscribers 0 onnext 3 override public int parallelism return 1 sequential 1 test 0 assertfailure class 
suppresswarnings unchecked final subscriber super integer subs new subscriber 1 testsubscriber integer ts new testsubscriber integer 1 override public void onnext integer t super onnext t subs 0 onnext 2 subs 0 onnext 3 new parallelflowable integer override public void subscribe subscriber super integer subscribers subs 0 subscribers 0 subscribers 0 onsubscribe new booleansubscription subscribers 0 onnext 1 override public int parallelism return 1 sequential 1 subscribe ts ts assertfailure class 1 
flowable empty parallel sequential test 0 assertresult 
new parallelflowable integer override public void subscribe subscriber super integer subscribers subscribers 0 onsubscribe new booleansubscription subscribers 0 onnext 1 subscribers 0 onnext 2 override public int parallelism return 1 sequentialdelayerror 1 test 0 requestmore 1 assertfailure class 1 
suppresswarnings unchecked final subscriber super integer subs new subscriber 1 testsubscriber integer ts new testsubscriber integer 1 override public void onnext integer t super onnext t if t 1 subs 0 onnext 2 subs 0 onnext 3 new parallelflowable integer override public void subscribe subscriber super integer subscribers subs 0 subscribers 0 subscribers 0 onsubscribe new booleansubscription subscribers 0 onnext 1 override public int parallelism return 1 sequentialdelayerror 1 subscribe ts ts request 1 ts assertfailure class 1 2 
flowable empty parallel sequentialdelayerror test 0 assertresult 
testsubscriberex integer flow flowable range 1 2 parallel 2 map new function integer integer override public integer apply integer v throws exception throw new testexception sequentialdelayerror to testhelper integer testconsumer assertfailure compositeexception class list throwable error testhelper errorlist flow testhelper asserterror error 0 testexception class testhelper asserterror error 1 testexception class 
flowable just 1 parallel 1 sequentialdelayerror 1 test assertresult 1 
flowable range 1 2 parallel 1 sequentialdelayerror 1 take 1 test assertresult 1 
flowable range 1 3 parallel 1 sequentialdelayerror 1 take 2 rebatchrequests 1 test assertresult 1 2 
flowable range 1 3 parallel 1 sequentialdelayerror 1 rebatchrequests 1 test assertresult 1 2 3 
testsubscriber integer ts flowable range 1 3 parallel 1 sequentialdelayerror 1 test 0 ts cancel ts assertempty 
testsubscriber integer ts flowable integer empty parallel 1 sequentialdelayerror 1 test 0 ts assertresult 
testsubscriber integer ts new testsubscriber integer 1 override public void onnext integer t super onnext t cancel oncomplete flowable range 1 3 parallel 1 sequential subscribe ts ts assertresult 1 
testsubscriber integer ts new testsubscriber integer 1 override public void onnext integer t super onnext t cancel oncomplete flowable range 1 3 parallel 1 sequentialdelayerror subscribe ts ts assertresult 1 
flowable range 1 3 parallel 1 sequentialdelayerror test 0 requestmore 1 assertvalues 1 requestmore 1 assertvalues 1 2 requestmore 1 assertresult 1 2 3 
flowable range 1 4 parallel 2 map new function integer integer override public integer apply integer v throws exception if v 1 throw new testexception return v sequentialdelayerror test assertfailure testexception class 2 3 4 
flowable range 1 4 hide parallel 2 map new function integer integer override public integer apply integer v throws exception if v 1 throw new testexception return v sequentialdelayerror test assertfailure testexception class 2 3 4 
flowable range 1 10 parallel 1 sequential takeuntil v true test 0l requestmore 100 assertresult 1 
flowable range 1 10 parallel 1 sequentialdelayerror takeuntil v true test 0l requestmore 100 assertresult 1 
publishprocessor integer pp publishprocessor create testsubscriber integer ts pp parallel 1 sequential test 0l pp onnext 1 ts requestmore 10 assertvaluesonly 1 
publishprocessor integer pp publishprocessor create testsubscriber integer ts pp parallel 1 sequentialdelayerror test 0l pp onnext 1 ts requestmore 10 assertvaluesonly 1 
publishprocessor integer pp publishprocessor create testsubscriber integer ts new testsubscriber integer override public void onnext nonnull integer t super onnext t if t 1 pp onnext 2 parallelflowable fromarray pp sequential subscribewith ts pp onnext 1 ts assertvaluesonly 1 2 
publishprocessor integer pp publishprocessor create testsubscriber integer ts new testsubscriber integer override public void onnext nonnull integer t super onnext t if t 1 pp onnext 2 parallelflowable fromarray pp sequentialdelayerror subscribewith ts pp onnext 1 ts assertvaluesonly 1 2 
testhelper parallelflowable fromarray publishprocessor create sequential 
testhelper witherrortracking errors for int i 0 i testhelper race default loops i atomicreference subscriber super integer ref1 new atomicreference atomicreference subscriber super integer ref2 new atomicreference flowable integer f1 new flowable integer override public void subscribeactual subscriber super integer s s onsubscribe new booleansubscription ref1 set s flowable integer f2 new flowable integer override public void subscribeactual subscriber super integer s s onsubscribe new booleansubscription ref2 set s parallelflowable fromarray f1 f2 sequential 1 test 0 testhelper race ref1 get onnext 1 ref1 get onnext 2 ref2 get onnext 3 ref2 get onnext 4 errors clear 
testhelper witherrortracking errors for int i 0 i testhelper race default loops i atomicreference subscriber super integer ref1 new atomicreference atomicreference subscriber super integer ref2 new atomicreference flowable integer f1 new flowable integer override public void subscribeactual subscriber super integer s s onsubscribe new booleansubscription ref1 set s flowable integer f2 new flowable integer override public void subscribeactual subscriber super integer s s onsubscribe new booleansubscription ref2 set s parallelflowable fromarray f1 f2 sequentialdelayerror 1 test 0 testhelper race ref1 get onnext 1 ref1 get onnext 2 ref2 get onnext 3 ref2 get onnext 4 errors clear 
parallelflowabletest checksubscribercount flowable range 1 5 parallel collect new supplier list integer override public list integer get throws exception return new arraylist new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b 
flowable range 1 5 parallel collect new supplier list integer override public list integer get throws exception throw new testexception new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b sequential test assertfailure testexception class 
flowable range 1 5 parallel collect new supplier list integer override public list integer get throws exception return new arraylist new biconsumer list integer integer override public void accept list integer a integer b throws exception if b 3 throw new testexception a add b sequential test assertfailure testexception class 
publishprocessor integer pp publishprocessor create testsubscriber list integer ts pp parallel collect new supplier list integer override public list integer get throws exception return new arraylist new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b sequential test asserttrue pp hassubscribers ts cancel assertfalse pp hassubscribers 
flowable integer error new testexception parallel collect new supplier list integer override public list integer get throws exception return new arraylist new biconsumer list integer integer override public void accept list integer a integer b throws exception a add b sequential test assertfailure testexception class 
list throwable errors testhelper trackpluginerrors try new parallelinvalid collect new supplier list object override public list object get throws exception return new arraylist new biconsumer list object object override public void accept list object a object b throws exception a add b sequential test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
testhelper pf pf collect arraylist new arraylist add 
publishprocessor integer pp publishprocessor create testsubscriber integer ts pp parallel reduce new bifunction integer integer integer override public integer apply integer a integer b throws exception return a b test asserttrue pp hassubscribers ts cancel assertfalse pp hassubscribers 
list throwable errors testhelper trackpluginerrors try flowable integer error new testexception parallel reduce new bifunction integer integer integer override public integer apply integer a integer b throws exception return a b test assertfailure testexception class asserttrue errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try parallelflowable fromarray flowable integer error new ioexception flowable integer error new testexception reduce new bifunction integer integer integer override public integer apply integer a integer b throws exception return a b test assertfailure ioexception class testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
flowable integer empty parallel reduce new bifunction integer integer integer override public integer apply integer a integer b throws exception return a b test assertresult 
list throwable errors testhelper trackpluginerrors try new parallelinvalid reduce new bifunction object object object override public object apply object a object b throws exception return a b test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
flowable range 1 4 parallel 2 reduce new bifunction integer integer integer override public integer apply integer a integer b throws exception if b 3 throw new testexception return a b test assertfailure testexception class 
flowable range 1 4 parallel 2 reduce new bifunction integer integer integer override public integer apply integer a integer b throws exception if a 1 3 throw new testexception return a b test assertfailure testexception class 
testhelper pf pf reduce a b a 
publishprocessor integer pp publishprocessor create testsubscriber integer ts pp parallel sorted functions integer naturalcomparator test asserttrue pp hassubscribers ts cancel assertfalse pp hassubscribers 
list throwable errors testhelper trackpluginerrors try flowable integer error new testexception parallel sorted functions integer naturalcomparator test assertfailure testexception class asserttrue errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try flowable integer error new testexception parallel sorted functions integer naturalcomparator test 0 assertfailure testexception class asserttrue errors isempty finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try parallelflowable fromarray flowable integer error new ioexception flowable integer error new testexception sorted functions integer naturalcomparator test assertfailure ioexception class testhelper assertundeliverable errors 0 testexception class finally rxjavaplugins reset 
flowable fromarray 4 3 2 1 parallel 2 sorted new comparator integer override public int compare integer o1 integer o2 if o1 4 o2 3 throw new testexception return o1 compareto o2 test assertfailure testexception class 1 2 
flowable integer empty parallel sorted functions integer naturalcomparator test assertresult 
integer values new integer 100 1000 for int i 0 i values length i values i values length i testsubscriber integer ts flowable fromarray values parallel 2 runon schedulers computation sorted functions naturalcomparator observeon schedulers single test ts awaitdone 5 timeunit seconds assertvaluecount values length assertnoerrors assertcomplete list integer list ts values for int i 0 i values length i assertequals i 1 list get i intvalue 
for int i 0 i testhelper race default loops i final replayprocessor integer pp replayprocessor create pp onnext 1 pp onnext 2 final testsubscriber integer ts pp parallel 2 sorted functions naturalcomparator test runnable r1 new runnable override public void run pp oncomplete runnable r2 new runnable override public void run ts cancel testhelper race r1 r2 
for int i 0 i testhelper race default loops i final replayprocessor integer pp replayprocessor create pp onnext 1 pp onnext 2 final testsubscriber integer ts pp parallel 2 sorted functions naturalcomparator test 0 runnable r1 new runnable override public void run pp oncomplete runnable r2 new runnable override public void run ts cancel testhelper race r1 r2 
testhelper publishprocessor integer create parallel sorted functions naturalcomparator 
testhelper witherrortracking errors publishprocessor list integer pp1 publishprocessor create publishprocessor list integer pp2 publishprocessor create new parallelsortedjoin parallelflowable fromarray pp1 pp2 a b pp1 onerror new ioexception throw new testexception test pp1 onnext arrays aslist 1 pp2 onnext arrays aslist 2 pp1 oncomplete pp2 oncomplete testhelper assertundeliverable errors 0 testexception class 
parallelflowabletest checksubscribercount flowable range 1 5 parallel doonnext functions emptyconsumer 
flowable range 1 5 parallel doonsubscribe new consumer subscription override public void accept subscription s throws exception throw new testexception sequential test assertfailure testexception class 
list throwable errors testhelper trackpluginerrors try new parallelinvalid doonnext functions emptyconsumer sequential test assertfailure testexception class assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try flowable range 1 5 parallel doonrequest new longconsumer override public void accept long n throws exception throw new testexception sequential test assertresult 1 2 3 4 5 assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try flowable integer never parallel dooncancel new action override public void run throws exception throw new testexception sequential test cancel assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
flowable just 1 parallel dooncomplete new action override public void run throws exception throw new testexception sequential test assertfailure testexception class 1 
list throwable errors testhelper trackpluginerrors try flowable just 1 parallel doafterterminated new action override public void run throws exception throw new testexception sequential test assertresult 1 assertfalse errors isempty for throwable ex errors asserttrue ex tostring ex getcause instanceof testexception finally rxjavaplugins reset 
list throwable errors testhelper trackpluginerrors try flowable integer error new ioexception parallel doafterterminated new action override public void run throws exception throw new testexception sequential test assertfailure ioexception class assertfalse errors isempty for throwable ex errors throwable exc ex getcause asserttrue ex tostring exc instanceof testexception exc instanceof ioexception finally rxjavaplugins reset 
testhelper f parallelflowable fromarray f dooncomplete sequential 
runnable run mock runnable class disposable d disposable fromrunnable run asserttrue d tostring d tostring contains runnabledisposable disposed false d dispose asserttrue d tostring d tostring contains runnabledisposable disposed true d dispose asserttrue d tostring d tostring contains runnabledisposable disposed true verify run times 1 run 
disposable empty disposable empty assertfalse empty isdisposed empty dispose asserttrue empty isdisposed 
disposable disposed disposable disposed asserttrue disposed isdisposed 
action action mock action class disposable d disposable fromaction action asserttrue d tostring d tostring contains actiondisposable disposed false d dispose asserttrue d tostring d tostring contains actiondisposable disposed true d dispose asserttrue d tostring d tostring contains actiondisposable disposed true verify action times 1 run 
try disposable fromaction new action override public void run throws exception throw new dispose fail should have thrown catch ex try disposable fromaction new action override public void run throws exception throw new internalerror dispose fail should have thrown catch internalerror ex try disposable fromaction new action override public void run throws exception throw new ioexception dispose fail should have thrown catch runtimeexception ex if ex getcause instanceof ioexception fail ex tostring should have cause of ioexception 
for int i 0 i testhelper race default loops i final disposable d disposable empty runnable r new runnable override public void run d dispose testhelper race r r 
disposable fromsubscription null 
subscription s mock subscription class disposable fromsubscription s dispose verify s cancel verify s never request anyint 
list throwable errors testhelper trackpluginerrors try atomicreference disposable target new atomicreference disposable d disposable empty disposablehelper setonce target d disposable d1 disposable empty disposablehelper setonce target d1 asserttrue d1 isdisposed testhelper asserterror errors 0 class disposable already set finally rxjavaplugins reset 
atomicinteger counter new atomicinteger autocloseable ac counter getandincrement disposable d disposable fromautocloseable ac assertfalse d isdisposed assertequals 0 counter get asserttrue d tostring d tostring contains disposed false d dispose asserttrue d isdisposed assertequals 1 counter get asserttrue d tostring d tostring contains disposed true d dispose asserttrue d isdisposed assertequals 1 counter get asserttrue d tostring d tostring contains disposed true 
testhelper witherrortracking errors autocloseable ac throw new testexception disposable d disposable fromautocloseable ac assertfalse d isdisposed asserttrue errors isempty try d dispose fail should have thrown catch testexception expected asserttrue d isdisposed d dispose asserttrue d isdisposed asserttrue errors isempty 
atomicinteger counter new atomicinteger disposable d disposable fromaction counter getandincrement autocloseable ac disposable toautocloseable d assertfalse d isdisposed assertequals 0 counter get ac close asserttrue d isdisposed assertequals 1 counter get ac close asserttrue d isdisposed assertequals 1 counter get 
final atomicinteger counter new atomicinteger compositedisposable cd new compositedisposable cd add disposable fromrunnable new runnable override public void run counter incrementandget cd add disposable fromrunnable new runnable override public void run counter incrementandget cd dispose assertequals 2 counter get 
final atomicinteger counter new atomicinteger final compositedisposable cd new compositedisposable final int count 10 final countdownlatch start new countdownlatch 1 for int i 0 i count i cd add disposable fromrunnable new runnable override public void run counter incrementandget final list thread threads new arraylist for int i 0 i count i final thread t new thread override public void run try start await cd dispose catch final interruptedexception e fail e getmessage t start threads add t start countdown for final thread t threads t join assertequals count counter get 
final atomicinteger counter new atomicinteger compositedisposable cd new compositedisposable cd add disposable fromrunnable new runnable override public void run throw new runtimeexception failed on first one cd add disposable fromrunnable new runnable override public void run counter incrementandget try cd dispose fail expecting an exception catch runtimeexception e assertequals e getmessage failed on first one assertequals 1 counter get 
final atomicinteger counter new atomicinteger compositedisposable cd new compositedisposable cd add disposable fromrunnable new runnable override public void run throw new runtimeexception failed on first one cd add disposable fromrunnable new runnable override public void run throw new runtimeexception failed on second one too cd add disposable fromrunnable new runnable override public void run counter incrementandget try cd dispose fail expecting an exception catch compositeexception e assertequals e getexceptions size 2 assertequals 1 counter get 
disposable d1 disposable empty disposable d2 disposable empty compositedisposable cd new compositedisposable cd add d1 cd add d2 cd remove d1 asserttrue d1 isdisposed assertfalse d2 isdisposed 
disposable d1 disposable empty disposable d2 disposable empty compositedisposable cd new compositedisposable cd add d1 cd add d2 assertfalse d1 isdisposed assertfalse d2 isdisposed cd clear asserttrue d1 isdisposed asserttrue d2 isdisposed assertfalse cd isdisposed disposable d3 disposable empty cd add d3 cd dispose asserttrue d3 isdisposed asserttrue cd isdisposed 
final atomicinteger counter new atomicinteger compositedisposable cd new compositedisposable cd add disposable fromrunnable new runnable override public void run counter incrementandget cd dispose cd dispose cd dispose assertequals 1 counter get 
final atomicinteger counter new atomicinteger final compositedisposable cd new compositedisposable final int count 10 final countdownlatch start new countdownlatch 1 cd add disposable fromrunnable new runnable override public void run counter incrementandget final list thread threads new arraylist for int i 0 i count i final thread t new thread override public void run try start await cd dispose catch final interruptedexception e fail e getmessage t start threads add t start countdown for final thread t threads t join assertequals 1 counter get 
compositedisposable cd new compositedisposable compositedisposable cd1 new compositedisposable compositedisposable cd2 new compositedisposable cd add cd1 cd remove cd1 cd add cd2 cd remove cd1 
compositedisposable cd new compositedisposable cd add null 
disposable d1 disposable empty disposable d2 disposable empty compositedisposable cd new compositedisposable d1 d2 assertequals 2 cd size cd clear assertequals 0 cd size asserttrue d1 isdisposed asserttrue d2 isdisposed disposable d3 disposable empty disposable d4 disposable empty cd new compositedisposable d3 d4 cd dispose asserttrue d3 isdisposed asserttrue d4 isdisposed assertequals 0 cd size 
disposable d1 disposable empty disposable d2 disposable empty compositedisposable cd new compositedisposable arrays aslist d1 d2 assertequals 2 cd size cd clear assertequals 0 cd size asserttrue d1 isdisposed asserttrue d2 isdisposed disposable d3 disposable empty disposable d4 disposable empty cd new compositedisposable arrays aslist d3 d4 assertequals 2 cd size cd dispose asserttrue d3 isdisposed asserttrue d4 isdisposed assertequals 0 cd size 
compositedisposable cd new compositedisposable disposable d1 disposable empty disposable d2 disposable empty disposable d3 disposable empty cd addall d1 d2 cd addall d3 assertfalse d1 isdisposed assertfalse d2 isdisposed assertfalse d3 isdisposed cd clear asserttrue d1 isdisposed asserttrue d2 isdisposed d1 disposable empty d2 disposable empty cd new compositedisposable cd addall d1 d2 assertfalse d1 isdisposed assertfalse d2 isdisposed cd dispose asserttrue d1 isdisposed asserttrue d2 isdisposed assertequals 0 cd size cd clear assertequals 0 cd size 
compositedisposable cd new compositedisposable cd dispose disposable d1 disposable empty assertfalse cd add d1 asserttrue d1 isdisposed d1 disposable empty disposable d2 disposable empty assertfalse cd addall d1 d2 asserttrue d1 isdisposed asserttrue d2 isdisposed 
compositedisposable cd new compositedisposable disposable d1 disposable empty assertfalse cd delete d1 disposable d2 disposable empty cd add d2 assertfalse cd delete d1 cd dispose assertfalse cd delete d1 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable runnable run new runnable override public void run cd dispose testhelper race run run 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable runnable run new runnable override public void run cd add disposable empty testhelper race run run 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable runnable run new runnable override public void run cd addall disposable empty testhelper race run run 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd remove d1 testhelper race run run 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd delete d1 testhelper race run run 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd clear testhelper race run run 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable runnable run new runnable override public void run cd dispose runnable run2 new runnable override public void run cd add disposable empty testhelper race run run2 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable runnable run new runnable override public void run cd dispose runnable run2 new runnable override public void run cd addall disposable empty testhelper race run run2 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd dispose runnable run2 new runnable override public void run cd remove d1 testhelper race run run2 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd dispose runnable run2 new runnable override public void run cd delete d1 testhelper race run run2 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd dispose runnable run2 new runnable override public void run cd clear testhelper race run run2 
for int i 0 i testhelper race default loops i final compositedisposable cd new compositedisposable final disposable d1 disposable empty cd add d1 runnable run new runnable override public void run cd dispose runnable run2 new runnable override public void run cd size testhelper race run run2 
compositedisposable cd new compositedisposable cd add disposable fromaction new action override public void run throws exception throw new disposable d1 disposable empty cd add d1 try cd dispose fail failed to throw catch ex asserttrue d1 isdisposed 
compositedisposable cd new compositedisposable cd add disposable fromaction new action override public void run throws exception throw new assertionerror disposable d1 disposable empty cd add d1 try cd dispose fail failed to throw catch assertionerror ex asserttrue d1 isdisposed 
compositedisposable cd new compositedisposable cd add disposable fromaction new action override public void run throws exception throw new ioexception disposable d1 disposable empty cd add d1 try cd dispose fail failed to throw catch runtimeexception ex if ex getcause instanceof ioexception fail ex tostring should have thrown runtimeexception ioexception asserttrue d1 isdisposed 
throw e new ioexception 
compositedisposable cd new compositedisposable cd add new disposable override public void dispose runtimeexception throwsneaky override public boolean isdisposed return false disposable d1 disposable empty cd add d1 try cd dispose fail failed to throw catch runtimeexception ex if ex getcause instanceof ioexception fail ex tostring should have thrown runtimeexception ioexception asserttrue d1 isdisposed 
futuretask object ft new futuretask functions empty runnable null disposable d disposable fromfuture ft assertfalse d isdisposed d dispose asserttrue d isdisposed d dispose asserttrue d isdisposed asserttrue ft iscancelled 
futuretask object ft new futuretask functions empty runnable null disposable d disposable fromfuture ft true assertfalse d isdisposed d dispose asserttrue d isdisposed d dispose asserttrue d isdisposed asserttrue ft iscancelled 
futuretask object ft new futuretask functions empty runnable null futuredisposable d new futuredisposable ft false assertfalse d isdisposed assertfalse d isdisposed ft run asserttrue d isdisposed 
serialdisposable new serialdisposable 
serialdisposable dispose 
final disposable underlying mock disposable class serialdisposable set underlying assertsame underlying serialdisposable get final disposable another mock disposable class serialdisposable set another assertsame another serialdisposable get 
final disposable underlying mock disposable class serialdisposable set underlying serialdisposable replace disposable empty serialdisposable dispose verify underlying never dispose 
disposable underlying mock disposable class serialdisposable set underlying serialdisposable dispose verify underlying dispose serialdisposable dispose underlying 
disposable underlying mock disposable class serialdisposable set underlying verifynointeractions underlying serialdisposable set underlying verify underlying dispose 
disposable underlying mock disposable class serialdisposable set underlying underlying dispose verify underlying dispose 
disposable first mock disposable class serialdisposable set first disposable second mock disposable class serialdisposable set second verify first dispose 
disposable first mock disposable class serialdisposable set first disposable second mock disposable class serialdisposable set second serialdisposable dispose verify second dispose 
serialdisposable dispose disposable underlying mock disposable class serialdisposable set underlying verify underlying dispose 
final disposable firstset mock disposable class serialdisposable set firstset final countdownlatch start new countdownlatch 1 final int count 10 final countdownlatch end new countdownlatch count final list thread threads new arraylist for int i 0 i count i final thread t new thread override public void run try start await serialdisposable dispose catch interruptedexception e fail e getmessage finally end countdown t start threads add t final disposable underlying mock disposable class start countdown serialdisposable set underlying end await verify firstset dispose verify underlying dispose for final thread t threads t join 
final int count 10 final list disposable subscriptions new arraylist final countdownlatch start new countdownlatch 1 final countdownlatch end new countdownlatch count final list thread threads new arraylist for int i 0 i count i final disposable subscription mock disposable class subscriptions add subscription final thread t new thread override public void run try start await serialdisposable set subscription catch interruptedexception e fail e getmessage finally end countdown t start threads add t start countdown end await serialdisposable dispose for final disposable subscription subscriptions verify subscription dispose for final thread t threads t join 
disposable empty disposable empty serialdisposable d new serialdisposable empty assertfalse d isdisposed assertsame empty d get d dispose asserttrue d isdisposed assertnotsame empty d get assertnotsame disposablehelper disposed d get 
serialdisposable new sequentialdisposable 
serialdisposable dispose 
final disposable underlying mock disposable class serialdisposable update underlying assertsame underlying serialdisposable get final disposable another mock disposable class serialdisposable update another assertsame another serialdisposable get 
final disposable underlying mock disposable class serialdisposable update underlying serialdisposable replace disposable empty serialdisposable dispose verify underlying never dispose 
disposable underlying mock disposable class serialdisposable update underlying serialdisposable dispose verify underlying dispose serialdisposable dispose underlying 
disposable underlying mock disposable class serialdisposable update underlying verifynointeractions underlying serialdisposable update underlying verify underlying dispose 
disposable underlying mock disposable class serialdisposable update underlying underlying dispose verify underlying dispose 
disposable first mock disposable class serialdisposable update first disposable second mock disposable class serialdisposable update second verify first dispose 
disposable first mock disposable class serialdisposable update first disposable second mock disposable class serialdisposable update second serialdisposable dispose verify second dispose 
serialdisposable dispose disposable underlying mock disposable class serialdisposable update underlying verify underlying dispose 
final disposable firstset mock disposable class serialdisposable update firstset final countdownlatch start new countdownlatch 1 final int count 10 final countdownlatch end new countdownlatch count final list thread threads new arraylist for int i 0 i count i final thread t new thread override public void run try start await serialdisposable dispose catch interruptedexception e fail e getmessage finally end countdown t start threads add t final disposable underlying mock disposable class start countdown serialdisposable update underlying end await verify firstset dispose verify underlying dispose for final thread t threads t join 
final int count 10 final list disposable subscriptions new arraylist final countdownlatch start new countdownlatch 1 final countdownlatch end new countdownlatch count final list thread threads new arraylist for int i 0 i count i final disposable subscription mock disposable class subscriptions add subscription final thread t new thread override public void run try start await serialdisposable update subscription catch interruptedexception e fail e getmessage finally end countdown t start threads add t start countdown end await serialdisposable dispose for final disposable subscription subscriptions verify subscription dispose for final thread t threads t join 
flowable list integer f flowable just 1 2 3 collect new supplier list integer override public list integer get return new arraylist new biconsumer list integer integer override public void accept list integer list integer v list add v toflowable list integer list f blockinglast assertequals 3 list size assertequals 1 list get 0 intvalue assertequals 2 list get 1 intvalue assertequals 3 list get 2 intvalue list integer list2 f blockinglast assertequals 3 list2 size assertequals 1 list2 get 0 intvalue assertequals 2 list2 get 1 intvalue assertequals 3 list2 get 2 intvalue 
string value flowable just 1 2 3 collect new supplier stringbuilder override public stringbuilder get return new stringbuilder new biconsumer stringbuilder integer override public void accept stringbuilder sb integer v if sb length 0 sb append sb append v toflowable blockinglast tostring assertequals 1 2 3 value 
final runtimeexception e new runtimeexception flowable just 1 collect new supplier list integer override public list integer get throws exception throw e new biconsumer list integer integer override public void accept list integer list integer t list add t test assertnovalues asserterror e assertnotcomplete 
try final list throwable list new copyonwritearraylist rxjavaplugins seterrorhandler addtolist list final runtimeexception e1 new runtimeexception final runtimeexception e2 new runtimeexception burst items 1 error e2 collect supplierlistcreator biconsumerthrows e1 toflowable test asserterror e1 assertnotcomplete assertequals 1 list size assertequals e2 list get 0 getcause finally rxjavaplugins reset 
final runtimeexception e new runtimeexception burst item 1 create collect supplierlistcreator biconsumerthrows e toflowable test asserterror e assertnotcomplete 
final runtimeexception e new runtimeexception final atomicboolean added new atomicboolean biconsumer object integer throwonfirstonly new biconsumer object integer boolean once true override public void accept object o integer t if once once false throw e else added set true burst items 1 2 create collect supplierlistcreator throwonfirstonly toflowable test asserterror e assertnovalues assertnotcomplete assertfalse added get 
flowable just 1 1 1 1 2 collectinto new hashset new biconsumer hashset integer integer override public void accept hashset integer s integer v throws exception s add v toflowable test assertresult new hashset arrays aslist 1 2 
single list integer o flowable just 1 2 3 collect new supplier list integer override public list integer get return new arraylist new biconsumer list integer integer override public void accept list integer list integer v list add v list integer list o blockingget assertequals 3 list size assertequals 1 list get 0 intvalue assertequals 2 list get 1 intvalue assertequals 3 list get 2 intvalue list integer list2 o blockingget assertequals 3 list2 size assertequals 1 list2 get 0 intvalue assertequals 2 list2 get 1 intvalue assertequals 3 list2 get 2 intvalue 
string value flowable just 1 2 3 collect new supplier stringbuilder override public stringbuilder get return new stringbuilder new biconsumer stringbuilder integer override public void accept stringbuilder sb integer v if sb length 0 sb append sb append v blockingget tostring assertequals 1 2 3 value 
final runtimeexception e new runtimeexception flowable just 1 collect new supplier list integer override public list integer get throws exception throw e new biconsumer list integer integer override public void accept list integer list integer t list add t test assertnovalues asserterror e assertnotcomplete 
try final list throwable list new copyonwritearraylist rxjavaplugins seterrorhandler addtolist list final runtimeexception e1 new runtimeexception final runtimeexception e2 new runtimeexception burst items 1 error e2 collect supplierlistcreator biconsumerthrows e1 test asserterror e1 assertnotcomplete assertequals 1 list size assertequals e2 list get 0 getcause finally rxjavaplugins reset 
final runtimeexception e new runtimeexception burst item 1 create collect supplierlistcreator biconsumerthrows e test asserterror e assertnotcomplete 
final runtimeexception e new runtimeexception final atomicboolean added new atomicboolean biconsumer object integer throwonfirstonly new biconsumer object integer boolean once true override public void accept object o integer t if once once false throw e else added set true burst items 1 2 create collect supplierlistcreator throwonfirstonly test asserterror e assertnovalues assertnotcomplete assertfalse added get 
flowable just 1 1 1 1 2 collectinto new hashset new biconsumer hashset integer integer override public void accept hashset integer s integer v throws exception s add v test assertresult new hashset arrays aslist 1 2 
testhelper checkdisposed flowable just 1 2 collect functions justsupplier new arraylist new biconsumer arraylist integer integer override public void accept arraylist integer a integer b throws exception a add b testhelper checkdisposed flowable just 1 2 collect functions justsupplier new arraylist new biconsumer arraylist integer integer override public void accept arraylist integer a integer b throws exception a add b toflowable 
testhelper new function flowable integer flowable arraylist integer override public flowable arraylist integer apply flowable integer f throws exception return f collect functions justsupplier new arraylist new biconsumer arraylist integer integer override public void accept arraylist integer a integer b throws exception a add b toflowable testhelper new function flowable integer single arraylist integer override public single arraylist integer apply flowable integer f throws exception return f collect functions justsupplier new arraylist new biconsumer arraylist integer integer override public void accept arraylist integer a integer b throws exception a add b 
final countdownlatch latch new countdownlatch 1 final atomicreference throwable caughterror new atomicreference flowable long f flowable interval 50 timeunit milliseconds subscriber long subscriber new defaultsubscriber long override public void oncomplete system out println completed latch countdown override public void onerror throwable e system out println error e caughterror set e latch countdown override public void onnext long args throw new runtimeexception forced failure f safesubscribe subscriber latch await 2000 timeunit milliseconds assertnotnull caughterror get 
final countdownlatch latch new countdownlatch 1 final atomicreference throwable caughterror new atomicreference flowable long f flowable interval 50 timeunit milliseconds subscriber long subscriber new defaultsubscriber long override public void oncomplete system out println completed latch countdown override public void onerror throwable e system out println error e caughterror set e latch countdown override public void onnext long args throw new runtimeexception forced failure f observeon schedulers newthread safesubscribe subscriber latch await 2000 timeunit milliseconds assertnotnull caughterror get 
return new onsubscribe 
onsubscribe subscribe subscriber 
return x new robotconversionfunc operator 
try return operator apply onsubscribe catch throwable ex throw exceptionhelper wraporthrow ex 
try return transformer apply this catch throwable ex throw exceptionhelper wraporthrow ex 
return new new flowablefilter flowable frompublisher onsubscribe predicate 
return new new flowablemap flowable frompublisher onsubscribe func 
return boop new function t string override public string apply t t object cylon jail t cylon throwouttheairlock cylon if t instanceof jail string name cylon tostring return cylon name has been destroyed else return cylon anonymous has been destroyed 
$EMPTY$
return create new publisher r override public void subscribe subscriber super r subscriber try subscriber super t st operator apply subscriber try onsubscribe subscribe st catch throwable e st onerror e catch throwable e subscriber onerror e 
return create onsubscribe 
return flowable frompublisher onsubscribe 
final testobserver string to new testobserver new defaultobserver string override public void oncomplete system out println complete override public void onerror throwable e system out println error e getmessage e printstacktrace override public void onnext string t system out println t list object arrays aslist new object william adama laura roslin lee adama new cylon flowable fromiterable doonnext new consumer object override public void accept object pv system out println pv to new beep new predicate object override public boolean test object t return t instanceof cylon boop new function object object override public object apply object cylon return new jail cylon destroy x new converttoobservable reduce cylon detector finished report n new bifunction string string string override public string apply string a string n return a n n subscribe to to assertnoerrors to assertcomplete 
return new jail cylon 
final atomicreference throwable thrown new atomicreference null final atomicboolean isfinished new atomicboolean false extends integer queue flowable range 0 5 flatmap new function integer publisher integer override public publisher integer apply final integer i return flowable range 0 5 observeon schedulers io map new function integer integer override public integer apply integer k try thread sleep system currenttimemillis 100 catch interruptedexception e e printstacktrace return i k to new flowableconverter integer integer override public integer apply flowable integer onsubscribe final integer q new onsubscribe subscribe new defaultsubscriber integer override public void oncomplete isfinished set true override public void onerror throwable e thrown set e override public void onnext integer t q add t return q int x 0 while isfinished get integer i queue poll if i null x system out println x item i assert assertnull thrown get 
final integer q new onsubscribe subscribe new defaultsubscriber integer override public void oncomplete isfinished set true override public void onerror throwable e thrown set e override public void onnext integer t q add t return q 
flowable horrormovie horrors flowable just new horrormovie flowable flowable horrormovie metahorrors flowable just horrors flowable media merge metahorrors 
flowable media f1 flowable media just new horrormovie new movie flowable media f2 flowable just new media new horrormovie flowable flowable media os flowable just f1 f2 list media values flowable merge os tolist blockingget assertequals 4 values size 
flowable media f1 flowable just new horrormovie new movie new media flowable media f2 flowable just new media new horrormovie flowable flowable media os flowable just f1 f2 list media values flowable merge os tolist blockingget assertequals 5 values size 
flowable movie f1 flowable just new horrormovie new movie flowable media f2 flowable just new media new horrormovie list media values flowable merge f1 f2 tolist blockingget asserttrue values get 0 instanceof horrormovie asserttrue values get 1 instanceof movie assertnotnull values get 2 asserttrue values get 3 instanceof horrormovie 
flowable movie f1 flowable defer new supplier publisher movie override public publisher movie get return flowable just new horrormovie new movie flowable media f2 flowable just new media new horrormovie list media values flowable merge f1 f2 tolist blockingget asserttrue values get 0 instanceof horrormovie asserttrue values get 1 instanceof movie assertnotnull values get 2 asserttrue values get 3 instanceof horrormovie 
final arraylist list integer lists new arraylist flowable concat flowable just 1 2 3 4 5 6 window 3 map new function flowable integer flowable list integer override public flowable list integer apply flowable integer xs return xs tolist toflowable blockingforeach new consumer list integer override public void accept list integer xs lists add xs assertarrayequals lists get 0 toarray new integer 3 new integer 1 2 3 assertarrayequals lists get 1 toarray new integer 3 new integer 4 5 6 assertequals 2 lists size 
testscheduler scheduler new testscheduler publishprocessor integer pp publishprocessor create testsubscriber list integer ts pp window 5 timeunit seconds scheduler 2 flatmapsingle new function flowable integer singlesource list integer override public singlesource list integer apply flowable integer v throws throwable return v tolist test pp onnext 1 pp onnext 2 ts assertvaluecount 1 scheduler advancetimeby 1 timeunit seconds pp onnext 3 scheduler advancetimeby 6 timeunit seconds ts assertvaluecount 2 pp onnext 4 pp onnext 5 ts assertvaluecount 3 pp onnext 4 scheduler advancetimeby 6 timeunit seconds ts assertvaluecount 4 assertnoerrors assertnotcomplete ts cancel 
list string values flowable just one two startwitharray zero tolist blockingget assertequals zero values get 0 assertequals two values get 2 
list string li new arraylist li add alpha li add beta list string values flowable just one two startwithiterable li tolist blockingget assertequals alpha values get 0 assertequals beta values get 1 assertequals one values get 2 assertequals two values get 3 
list string li new arraylist li add alpha li add beta list string values flowable just one two startwith flowable fromiterable li tolist blockingget assertequals alpha values get 0 assertequals beta values get 1 assertequals one values get 2 assertequals two values get 3 
flowable just 1 startwitharray test assertresult 1 
flowable range 1 10 to testhelper integer testsubscriber long max value queuefuseable any false assertfusionmode queuefuseable sync assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
flowable fromarray new integer 1 2 3 4 5 6 7 8 9 10 to testhelper integer testsubscriber long max value queuefuseable any false assertfusionmode queuefuseable sync assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
flowable fromiterable arrays aslist 1 2 3 4 5 6 7 8 9 10 to testhelper integer testsubscriber long max value queuefuseable any false assertfusionmode queuefuseable sync assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
flowable range 1 10 hide to testhelper integer testsubscriber long max value queuefuseable any false assertnotfuseable assertfusionmode queuefuseable none assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
flowable fromarray new integer 1 2 3 4 5 6 7 8 9 10 hide to testhelper integer testsubscriber long max value queuefuseable any false assertnotfuseable assertfusionmode queuefuseable none assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
flowable fromiterable arrays aslist 1 2 3 4 5 6 7 8 9 10 hide to testhelper integer testsubscriber long max value queuefuseable any false assertnotfuseable assertfusionmode queuefuseable none assertvalues 1 2 3 4 5 6 7 8 9 10 assertnoerrors assertcomplete 
w testhelper mocksubscriber wo testhelper mocksingleobserver wm testhelper mockmaybeobserver 
string items new string one two three assertequals long 3l flowable fromarray items count blockingget assertequals two flowable fromarray items skip 1 take 1 blockingsingle assertequals three flowable fromarray items takelast 1 blockingsingle 
arraylist string items new arraylist items add one items add two items add three assertequals long 3l flowable fromiterable items count blockingget assertequals two flowable fromiterable items skip 1 take 1 blockingsingle assertequals three flowable fromiterable items takelast 1 blockingsingle 
flowable string items flowable just one two three assertequals long 3l items count blockingget assertequals two items skip 1 take 1 blockingsingle assertequals three items takelast 1 blockingsingle 
flowable string items flowable just one assertequals long 1l items count blockingget assertequals one items takelast 1 blockingsingle 
flowable string flowable flowable just one two three subscriber string subscriber testhelper mocksubscriber flowable subscribe subscriber verify subscriber times 1 onnext one verify subscriber times 1 onnext two verify subscriber times 1 onnext three verify subscriber never onerror any throwable class verify subscriber times 1 oncomplete 
flowable string flowable flowable just a b c d flowable count toflowable subscribe w verify w onnext 4l verify w never onerror any throwable class verify w times 1 oncomplete 
flowable string flowable flowable empty flowable count toflowable subscribe w verify w onnext 0l verify w never onerror any throwable class verify w times 1 oncomplete 
flowable string f flowable error new supplier throwable override public throwable get return new runtimeexception f count toflowable subscribe w verify w never onnext anyint verify w never oncomplete verify w times 1 onerror any runtimeexception class 
flowable string flowable flowable just a b c d flowable count subscribe wo verify wo onsuccess 4l verify wo never onerror any throwable class 
flowable string flowable flowable empty flowable count subscribe wo verify wo onsuccess 0l verify wo never onerror any throwable class 
flowable string f flowable error new supplier throwable override public throwable get return new runtimeexception f count subscribe wo verify wo never onsuccess anyint verify wo times 1 onerror any runtimeexception class 
flowable integer flowable flowable just 1 3 5 4 6 3 flowable filter is even take 1 subscribe w verify w times 1 onnext anyint verify w onnext 4 verify w times 1 oncomplete verify w never onerror any throwable class 
flowable integer flowable flowable just 1 3 5 7 9 7 5 3 1 flowable filter is even take 1 subscribe w verify w never onnext anyint verify w times 1 oncomplete verify w never onerror any throwable class 
flowable integer flowable flowable just 1 2 3 flowable take 1 subscribe w verify w times 1 onnext anyint verify w onnext 1 verify w times 1 oncomplete verify w never onerror any throwable class 
flowable integer flowable flowable empty flowable take 1 subscribe w verify w never onnext anyint verify w times 1 oncomplete verify w never onerror any throwable class 
flowable integer flowable flowable empty flowable firstelement toflowable subscribe w verify w never onnext anyint verify w oncomplete verify w never onerror any throwable class 
flowable integer flowable flowable just 1 3 5 7 9 7 5 3 1 flowable filter is even firstelement toflowable subscribe w verify w never onnext anyint verify w oncomplete verify w never onerror any throwable class 
flowable integer flowable flowable empty flowable firstelement subscribe wm verify wm never onsuccess anyint verify wm oncomplete verify wm never onerror isa class 
flowable integer flowable flowable just 1 3 5 7 9 7 5 3 1 flowable filter is even firstelement subscribe wm verify wm never onsuccess anyint verify wm times 1 oncomplete verify wm never onerror isa class 
flowable integer flowable flowable just 1 2 3 4 flowable reduce new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 toflowable subscribe w verify w times 1 onnext anyint verify w onnext 10 
flowable integer flowable flowable range 1 0 flowable reduce new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 toflowable test assertresult 
flowable integer flowable flowable range 1 0 int value flowable reduce 1 new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 blockingget assertequals 1 value 
flowable integer flowable flowable just 1 2 3 4 flowable reduce 50 new bifunction integer integer integer override public integer apply integer t1 integer t2 return t1 t2 subscribe wo verify wo times 1 onsuccess anyint verify wo onsuccess 60 
flowable integer obs flowable just 1 flowable integer chained obs materialize dematerialize functions notification integer identity subscriber integer subscriber testhelper mocksubscriber chained subscribe subscriber verify subscriber times 1 onnext 1 verify subscriber times 1 oncomplete verify subscriber times 0 onerror any throwable class 
final countdownlatch latch new countdownlatch 1 final atomicinteger count new atomicinteger final atomicreference throwable error new atomicreference flowable just 1 2 three 4 subscribeon schedulers newthread safesubscribe new defaultsubscriber string override public void oncomplete system out println completed latch countdown override public void onerror throwable e error set e system out println error e printstacktrace latch countdown override public void onnext string v int num integer parseint v system out println num count incrementandget latch await assertequals 2 count get assertnotnull error get if error get instanceof fail it should be a 
final atomicinteger count new atomicinteger final atomicreference throwable error new atomicreference flowable just 1 2 three 4 safesubscribe new defaultsubscriber string override public void oncomplete system out println completed override public void onerror throwable e error set e system out println error e printstacktrace override public void onnext string v int num integer parseint v system out println num count incrementandget assertequals 2 count get assertnotnull error get if error get instanceof fail it should be a 
final atomicinteger count new atomicinteger final atomicreference throwable error new atomicreference flowable just 1 2 concatwith flowable string error new supplier throwable override public throwable get return new subscribe new defaultsubscriber string override public void oncomplete system out println completed override public void onerror throwable e error set e system out println error e printstacktrace override public void onnext string v system out println v count incrementandget assertequals 2 count get assertnotnull error get if error get instanceof fail it should be a 
